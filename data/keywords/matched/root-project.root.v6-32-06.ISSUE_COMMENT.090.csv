id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/14583:2122,testability,automat,automatically,2122,"is function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. printTree_fullclass(""b.root"");. printTree_splitclass(""b.root"");. }. ```. Now I am not sure if the call of `SetMakeClass` is automatically done, and therefore this function became internal, or if it is still worth to be documented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:66,usability,error,error,66,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:. * writes 2 integers packed as a class, which is assigned to a branch of a treez. * printTree_fullclass: this function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:2217,usability,document,documented,2217,"is function reads both integers using the same class that was used to write the tree. * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```. #include ""TFile.h"". #include ""TTree.h"". #include ""TBranch.h"". #include <iostream>. class myclass. {. public:. 	int x = {0};. 	int y = {0};. };. void printTree_splitclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. int x,y;. tree->SetBranchAddress( ""mybranch.x"", &x );. tree->SetBranchAddress( ""mybranch.y"", &y );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << x << std::endl;. }. }. void printTree_fullclass(const char *path) {. std::cout << __FUNCTION__ << '\t';. printf(""%s:\n"", path);. std::unique_ptr<TFile> file(TFile::Open(path));. auto *tree = file->Get<TTree>(""tree"");. myclass * object4branch = new myclass();. tree->SetBranchAddress( ""mybranch"", &object4branch );. //tree->SetMakeClass(1);. for( int i =0; i< tree->GetEntries(); ++i). {. 	tree->GetEntry(i);. 	std::cout << '\t' << object4branch->x << std::endl;. }. }. void ROOT_1853() {. {. std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));. TTree *tree = new TTree(""tree"", ""title"");. myclass object4branch;. tree->Branch(""mybranch"", &object4branch);. for( int i = 0; i< 10; ++i) . {. 	object4branch.x = i;. 	object4branch.y = -i;. 	tree->Fill();. }. tree->Write();. }. printTree_fullclass(""b.root"");. printTree_splitclass(""b.root"");. }. ```. Now I am not sure if the call of `SetMakeClass` is automatically done, and therefore this function became internal, or if it is still worth to be documented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:2,deployability,manag,managed,2,"I managed a reproducer:. First run this tutorial. https://root.cern/doc/master/tree4_8C.html. Then run:. ```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. File openTree.C:. ```. #include <iostream>. #include ""TFile.h"". #include ""TTree.h"". void openTree(bool setMakeClass = false) {. auto f = TFile::Open(""tree4.root"");. TTree *t4 = (TTree*)f->Get(""t4"");. t4->SetMakeClass(setMakeClass);. Double32_t temp;. TBranch *br = t4->GetBranch(""fTemperature"");. br->SetAddress(&temp);. br->GetEntry(0);. std::cout << temp << ""ºC"" << std::endl;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:2,energy efficiency,manag,managed,2,"I managed a reproducer:. First run this tutorial. https://root.cern/doc/master/tree4_8C.html. Then run:. ```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. File openTree.C:. ```. #include <iostream>. #include ""TFile.h"". #include ""TTree.h"". void openTree(bool setMakeClass = false) {. auto f = TFile::Open(""tree4.root"");. TTree *t4 = (TTree*)f->Get(""t4"");. t4->SetMakeClass(setMakeClass);. Double32_t temp;. TBranch *br = t4->GetBranch(""fTemperature"");. br->SetAddress(&temp);. br->GetEntry(0);. std::cout << temp << ""ºC"" << std::endl;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:2,safety,manag,managed,2,"I managed a reproducer:. First run this tutorial. https://root.cern/doc/master/tree4_8C.html. Then run:. ```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. File openTree.C:. ```. #include <iostream>. #include ""TFile.h"". #include ""TTree.h"". void openTree(bool setMakeClass = false) {. auto f = TFile::Open(""tree4.root"");. TTree *t4 = (TTree*)f->Get(""t4"");. t4->SetMakeClass(setMakeClass);. Double32_t temp;. TBranch *br = t4->GetBranch(""fTemperature"");. br->SetAddress(&temp);. br->GetEntry(0);. std::cout << temp << ""ºC"" << std::endl;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:815,availability,error,error,815,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1213,availability,error,error,1213,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:4,deployability,manag,managed,4,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:4,energy efficiency,manag,managed,4,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:804,integrability,sub,subsequent,804,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:815,performance,error,error,815,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1213,performance,error,error,1213,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:4,safety,manag,managed,4,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:815,safety,error,error,815,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:891,safety,avoid,avoid,891,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1050,safety,review,review,1050,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1213,safety,error,error,1213,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1180,security,modif,modification,1180,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1050,testability,review,review,1050,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:815,usability,error,error,815,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1213,usability,error,error,1213,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:1347,usability,document,documentation,1347,"> I managed a reproducer:. > . > First run this tutorial. https://root.cern/doc/master/tree4_8C.html. > . > Then run:. > . > ```. > root -l 'openTree.C(0)' -b -q. > Processing openTree.C(0)... > 7.31217e-322ºC. > . > root -l 'openTree.C(1)' -b -q. > Processing openTree.C(1)... > 20.2826ºC. > ```. > . > File openTree.C:. > . > ```. > #include <iostream>. > #include ""TFile.h"". > #include ""TTree.h"". > . > void openTree(bool setMakeClass = false) {. > auto f = TFile::Open(""tree4.root"");. > TTree *t4 = (TTree*)f->Get(""t4"");. > t4->SetMakeClass(setMakeClass);. > Double32_t temp;. > TBranch *br = t4->GetBranch(""fTemperature"");. > br->SetAddress(&temp);. > br->GetEntry(0);. > std::cout << temp << ""ºC"" << std::endl;. > }. > ```. Hi,. I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). . Please see this tutorial and particularly this comment by @pcanal during the review: . https://github.com/root-project/root/pull/13205#discussion_r1265655686. Can you try generating the ROOT files with that modification and checking if the error persist? . @vepadulano would it be worth to add P. Canal comment about the dot at the end of the branch name into the TTree web documentation? Best,. Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:82,availability,error,error,82,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:71,integrability,sub,subsequent,71,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:332,integrability,sub,subelements,332,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:82,performance,error,error,82,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:82,safety,error,error,82,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:158,safety,avoid,avoid,158,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:82,usability,error,error,82,"> I suspect about an issue in the tree4.C file that is leading to this subsequent error: when writing the branches, each branch name should end with a dot to avoid degeneracy (objects of the same class are used for 2 different branches). You mean setting the branch name as ""event_split."" and ""event_not_split."" ? But are there any subelements with the same name there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:653,deployability,automat,automatically,653,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:223,integrability,interfac,interface,223,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:223,interoperability,interfac,interface,223,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:223,modifiability,interfac,interface,223,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:368,safety,input,input,368,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:632,safety,detect,detect,632,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:632,security,detect,detect,632,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:653,testability,automat,automatically,653,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14583:368,usability,input,input,368,"```. root -l 'openTree.C(0)' -b -q. Processing openTree.C(0)... 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q. Processing openTree.C(1)... 20.2826ºC. ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:. ```. t4->SetBranchAddress(""fTemperature"", &temp);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14583
https://github.com/root-project/root/issues/14584:712,availability,cluster,clusters,712,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:782,availability,cluster,clusters-and-the-tree-header,782,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1280,availability,cluster,clusters-and-the-tree-header,1280,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:331,deployability,automat,automatically,331,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:407,deployability,automat,automatically,407,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:712,deployability,cluster,clusters,712,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:782,deployability,cluster,clusters-and-the-tree-header,782,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:861,deployability,updat,updates,861,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1280,deployability,cluster,clusters-and-the-tree-header,1280,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:450,energy efficiency,current,current,450,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:861,safety,updat,updates,861,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:861,security,updat,updates,861,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:1100,security,access,accessible,1100,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:331,testability,automat,automatically,331,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:407,testability,automat,automatically,407,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:7,usability,user,user,7,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:78,usability,clear,clear,78,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:88,usability,Behavi,Behaviour,88,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14584:817,usability,Behavi,Behaviour,817,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file. [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14584
https://github.com/root-project/root/issues/14585:93,deployability,Contain,Contains,93,"Maybe it's not broken, but rather badly documented feature (and weird convention):. ```. abc.Contains(TRegexp(""a?c"")) -> true. ac.Contains(TRegexp(""a?c"")) -> true. ```. It's only explained in TRegExp::MakeWildcard:. `When using wildcards the regular expression is assumed to be preceded by a ""^"" (BOL) and terminated by a ""$"" (EOL). Also, all ""*""'s and ""?""'s (closures) are assumed to be preceded by a ""."" (i.e. any character, except ""/""'s) and all .'s are escaped (so *.ps is different from *.eps). The special treatment of ""/"" allows the easy matching of pathnames, e.g. ""*.root"" will match ""aap.root"", but not ""pipo/aap.root"". `. I think TPRegexp (vs TRegexp) is working more like the traditional regexp.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:130,deployability,Contain,Contains,130,"Maybe it's not broken, but rather badly documented feature (and weird convention):. ```. abc.Contains(TRegexp(""a?c"")) -> true. ac.Contains(TRegexp(""a?c"")) -> true. ```. It's only explained in TRegExp::MakeWildcard:. `When using wildcards the regular expression is assumed to be preceded by a ""^"" (BOL) and terminated by a ""$"" (EOL). Also, all ""*""'s and ""?""'s (closures) are assumed to be preceded by a ""."" (i.e. any character, except ""/""'s) and all .'s are escaped (so *.ps is different from *.eps). The special treatment of ""/"" allows the easy matching of pathnames, e.g. ""*.root"" will match ""aap.root"", but not ""pipo/aap.root"". `. I think TPRegexp (vs TRegexp) is working more like the traditional regexp.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:427,safety,except,except,427,"Maybe it's not broken, but rather badly documented feature (and weird convention):. ```. abc.Contains(TRegexp(""a?c"")) -> true. ac.Contains(TRegexp(""a?c"")) -> true. ```. It's only explained in TRegExp::MakeWildcard:. `When using wildcards the regular expression is assumed to be preceded by a ""^"" (BOL) and terminated by a ""$"" (EOL). Also, all ""*""'s and ""?""'s (closures) are assumed to be preceded by a ""."" (i.e. any character, except ""/""'s) and all .'s are escaped (so *.ps is different from *.eps). The special treatment of ""/"" allows the easy matching of pathnames, e.g. ""*.root"" will match ""aap.root"", but not ""pipo/aap.root"". `. I think TPRegexp (vs TRegexp) is working more like the traditional regexp.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/issues/14585:40,usability,document,documented,40,"Maybe it's not broken, but rather badly documented feature (and weird convention):. ```. abc.Contains(TRegexp(""a?c"")) -> true. ac.Contains(TRegexp(""a?c"")) -> true. ```. It's only explained in TRegExp::MakeWildcard:. `When using wildcards the regular expression is assumed to be preceded by a ""^"" (BOL) and terminated by a ""$"" (EOL). Also, all ""*""'s and ""?""'s (closures) are assumed to be preceded by a ""."" (i.e. any character, except ""/""'s) and all .'s are escaped (so *.ps is different from *.eps). The special treatment of ""/"" allows the easy matching of pathnames, e.g. ""*.root"" will match ""aap.root"", but not ""pipo/aap.root"". `. I think TPRegexp (vs TRegexp) is working more like the traditional regexp.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14585
https://github.com/root-project/root/pull/14588:263,availability,error,errors,263,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:158,performance,time,time,158,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:263,performance,error,errors,263,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:142,safety,except,exception,142,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:234,safety,test,test,234,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:263,safety,error,errors,263,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:234,testability,test,test,234,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:165,usability,user,user,165,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:263,usability,error,errors,263,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:589,availability,error,errors,589,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:393,performance,time,time,393,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:589,performance,error,errors,589,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:377,safety,except,exception,377,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:560,safety,test,test,560,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:589,safety,error,errors,589,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:656,safety,test,test,656,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:560,testability,test,test,560,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:656,testability,test,test,656,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:766,testability,regress,regression,766,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:400,usability,user,user,400,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:589,usability,error,errors,589,"> We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. This is already done in in the ROOT facade constructor. Indeed, one can move it directly to `__init__.py`, but now that you raised that point: why do you think an explicit `__all__` is better than not having this attribute at all? > In principle, we could also raise an exception every time a user tries `from ROOT import *`. That would be nice! Do you know how to do this? Google didn't give an easy solution :(. > (beware that we have this in our own test suite, so we _will_ see errors). I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. https://github.com/root-project/roottest/blob/master/python/regression/PyROOT_regressiontests.py#L188.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:60,safety,test,test,60,"> I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. Indeed, I remembered we had more, maybe we already got rid of some instances, there is also [this file](https://github.com/root-project/roottest/blob/f09afcfc77741909bc80431ba2d749ae3c5f7a1e/python/regression/Amir.py#L6) which points at this [jira issue](https://its.cern.ch/jira/browse/ROOT-8931) related to the argument, so we can also close that one once this is merged :+1: . > why do you think an explicit __all__ is better than not having this attribute at all? Explicit is better than implicit, having the attribute means we can also comment on it for readers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:120,safety,reme,remembered,120,"> I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. Indeed, I remembered we had more, maybe we already got rid of some instances, there is also [this file](https://github.com/root-project/roottest/blob/f09afcfc77741909bc80431ba2d749ae3c5f7a1e/python/regression/Amir.py#L6) which points at this [jira issue](https://its.cern.ch/jira/browse/ROOT-8931) related to the argument, so we can also close that one once this is merged :+1: . > why do you think an explicit __all__ is better than not having this attribute at all? Explicit is better than implicit, having the attribute means we can also comment on it for readers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:60,testability,test,test,60,"> I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. Indeed, I remembered we had more, maybe we already got rid of some instances, there is also [this file](https://github.com/root-project/roottest/blob/f09afcfc77741909bc80431ba2d749ae3c5f7a1e/python/regression/Amir.py#L6) which points at this [jira issue](https://its.cern.ch/jira/browse/ROOT-8931) related to the argument, so we can also close that one once this is merged :+1: . > why do you think an explicit __all__ is better than not having this attribute at all? Explicit is better than implicit, having the attribute means we can also comment on it for readers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:308,testability,regress,regression,308,"> I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. Indeed, I remembered we had more, maybe we already got rid of some instances, there is also [this file](https://github.com/root-project/roottest/blob/f09afcfc77741909bc80431ba2d749ae3c5f7a1e/python/regression/Amir.py#L6) which points at this [jira issue](https://its.cern.ch/jira/browse/ROOT-8931) related to the argument, so we can also close that one once this is merged :+1: . > why do you think an explicit __all__ is better than not having this attribute at all? Explicit is better than implicit, having the attribute means we can also comment on it for readers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:448,usability,close,close,448,"> I don't think we have it, or do we? I only see it in this test suite where it is deactivated for Python 3:. Indeed, I remembered we had more, maybe we already got rid of some instances, there is also [this file](https://github.com/root-project/roottest/blob/f09afcfc77741909bc80431ba2d749ae3c5f7a1e/python/regression/Amir.py#L6) which points at this [jira issue](https://its.cern.ch/jira/browse/ROOT-8931) related to the argument, so we can also close that one once this is merged :+1: . > why do you think an explicit __all__ is better than not having this attribute at all? Explicit is better than implicit, having the attribute means we can also comment on it for readers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:41,integrability,messag,message,41,Just rebased to fix a typo in the commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14588:41,interoperability,messag,message,41,Just rebased to fix a typo in the commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14588
https://github.com/root-project/root/pull/14590:32,availability,error,error,32,The long line produces a syntax error. The `</text>` was truncated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:32,performance,error,error,32,The long line produces a syntax error. The `</text>` was truncated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:32,safety,error,error,32,The long line produces a syntax error. The `</text>` was truncated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:32,usability,error,error,32,The long line produces a syntax error. The `</text>` was truncated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,availability,error,error,123,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,performance,error,error,123,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:105,safety,avoid,avoids,105,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,safety,error,error,123,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,usability,error,error,123,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:133,usability,user,user,133,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,availability,error,error,123,"> The change is not a debug printout, it inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text. Thanks for the explanation! Could you add this as a comment just before the change, and also link it to the github issue that triggered it for reference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,performance,error,error,123,"> The change is not a debug printout, it inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text. Thanks for the explanation! Could you add this as a comment just before the change, and also link it to the github issue that triggered it for reference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:105,safety,avoid,avoids,105,"> The change is not a debug printout, it inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text. Thanks for the explanation! Could you add this as a comment just before the change, and also link it to the github issue that triggered it for reference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,safety,error,error,123,"> The change is not a debug printout, it inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text. Thanks for the explanation! Could you add this as a comment just before the change, and also link it to the github issue that triggered it for reference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:123,usability,error,error,123,"> The change is not a debug printout, it inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text. Thanks for the explanation! Could you add this as a comment just before the change, and also link it to the github issue that triggered it for reference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:133,usability,user,user,133,"> The change is not a debug printout, it inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text. Thanks for the explanation! Could you add this as a comment just before the change, and also link it to the github issue that triggered it for reference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:49,integrability,messag,message,49,"Ok, can I at least ask to write it in the commit message :)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14590:49,interoperability,messag,message,49,"Ok, can I at least ask to write it in the commit message :)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14590
https://github.com/root-project/root/pull/14591:606,energy efficiency,current,current,606,"I don't disagree with the feel of hackiness. I'm not a big fan of making other classes friends of `RFieldBase` either because it is a large class. For the connect methods to work from the other end, the page source/sink would need to become a friend, and they are themselves large classes. Less so for the `RNTupleFillContext`. Another option is to have field proxies for the three methods that expose these methods only to certain classes, like. ```. class RCommitClusterProxy {. friend RNTupleFillContext;. static CommitCluster(RFieldBase &field) { field.CommitCluster(); }. };. ```. That similar to the current approach, with a little more code but C++ enforcing who can call the three methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:360,interoperability,prox,proxies,360,"I don't disagree with the feel of hackiness. I'm not a big fan of making other classes friends of `RFieldBase` either because it is a large class. For the connect methods to work from the other end, the page source/sink would need to become a friend, and they are themselves large classes. Less so for the `RNTupleFillContext`. Another option is to have field proxies for the three methods that expose these methods only to certain classes, like. ```. class RCommitClusterProxy {. friend RNTupleFillContext;. static CommitCluster(RFieldBase &field) { field.CommitCluster(); }. };. ```. That similar to the current approach, with a little more code but C++ enforcing who can call the three methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:34,security,hack,hackiness,34,"I don't disagree with the feel of hackiness. I'm not a big fan of making other classes friends of `RFieldBase` either because it is a large class. For the connect methods to work from the other end, the page source/sink would need to become a friend, and they are themselves large classes. Less so for the `RNTupleFillContext`. Another option is to have field proxies for the three methods that expose these methods only to certain classes, like. ```. class RCommitClusterProxy {. friend RNTupleFillContext;. static CommitCluster(RFieldBase &field) { field.CommitCluster(); }. };. ```. That similar to the current approach, with a little more code but C++ enforcing who can call the three methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/pull/14591:395,security,expos,expose,395,"I don't disagree with the feel of hackiness. I'm not a big fan of making other classes friends of `RFieldBase` either because it is a large class. For the connect methods to work from the other end, the page source/sink would need to become a friend, and they are themselves large classes. Less so for the `RNTupleFillContext`. Another option is to have field proxies for the three methods that expose these methods only to certain classes, like. ```. class RCommitClusterProxy {. friend RNTupleFillContext;. static CommitCluster(RFieldBase &field) { field.CommitCluster(); }. };. ```. That similar to the current approach, with a little more code but C++ enforcing who can call the three methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14591
https://github.com/root-project/root/issues/14592:170,availability,error,error,170,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:176,integrability,messag,message,176,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:176,interoperability,messag,message,176,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:170,performance,error,error,170,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:170,safety,error,error,170,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:49,testability,understand,understand,49,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:170,usability,error,error,170,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:40,availability,error,error,40,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:113,availability,error,error,113,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:335,availability,error,error,335,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:462,deployability,version,versions,462,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:656,deployability,stack,stack,656,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:698,energy efficiency,core,core,698,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:46,integrability,messag,message,46,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:462,integrability,version,versions,462,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:46,interoperability,messag,message,46,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:450,interoperability,mismatch,mismatching,450,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:405,modifiability,pac,packages,405,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:436,modifiability,pac,package,436,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:462,modifiability,version,versions,462,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:40,performance,error,error,40,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:113,performance,error,error,113,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:335,performance,error,error,335,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:40,safety,error,error,40,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:113,safety,error,error,113,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:241,safety,input,input,241,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:335,safety,error,error,335,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:356,safety,input,input,356,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:308,security,ident,identify,308,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:220,testability,context,context,220,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:40,usability,error,error,40,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:113,usability,error,error,113,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:241,usability,input,input,241,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:335,usability,error,error,335,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:356,usability,input,input,356,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:606,usability,help,helpful,606,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:894,usability,stop,stopped,894,"Indeed, this solution only improves the error message to solve the problem of . 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`). 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there. As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:142,availability,error,error,142,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:142,performance,error,error,142,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:89,safety,test,test,89,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:142,safety,error,error,142,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:89,testability,test,test,89,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14592:142,usability,error,error,142,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14592
https://github.com/root-project/root/issues/14595:122,deployability,build,builds,122,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:190,deployability,build,build,190,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:211,deployability,build,build,211,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:217,deployability,build,build,217,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:227,deployability,build,build,227,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:277,deployability,build,build,277,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:569,deployability,Toolchain,Toolchains,569,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:857,deployability,Toolchain,Toolchains,857,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1027,deployability,version,version,1027,"llow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1102,deployability,Build,Build,1102,"mple configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1150,deployability,build,build,1150,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1182,deployability,build,build,1182,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1200,deployability,build,build,1200,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1206,deployability,build,build,1206,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1303,deployability,Build,Building,1303,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1375,deployability,Build,Building,1375,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1541,deployability,Build,Building,1541,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1607,deployability,Build,Building,1607,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1678,deployability,Build,Building,1678,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1748,deployability,Build,Building,1748,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1894,deployability,build,build,1894,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:110,integrability,configur,configures,110,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1027,integrability,version,version,1027,"llow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1047,integrability,Configur,Configuring,1047,"in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1462,interoperability,share,shared,1462,"ine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : Total = 8451 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. <snip>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:110,modifiability,configur,configures,110,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1027,modifiability,version,version,1027,"llow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1047,modifiability,Configur,Configuring,1047,"in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:550,performance,Content,Contents,550,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:838,performance,Content,Contents,838,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:421,safety,Detect,Detecting,421,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:455,safety,Detect,Detecting,455,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:630,safety,Detect,Detecting,630,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:663,safety,Detect,Detecting,663,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:703,safety,Detect,Detecting,703,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:739,safety,Detect,Detecting,739,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:919,safety,Detect,Detecting,919,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:954,safety,Detect,Detecting,954,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:110,security,configur,configures,110,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:306,security,ident,identification,306,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:372,security,ident,identification,372,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:421,security,Detect,Detecting,421,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:455,security,Detect,Detecting,455,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:630,security,Detect,Detecting,630,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:663,security,Detect,Detecting,663,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:703,security,Detect,Detecting,703,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:739,security,Detect,Detecting,739,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:919,security,Detect,Detecting,919,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:954,security,Detect,Detecting,954,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:1047,security,Configur,Configuring,1047,"in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ******************************************************************************. *Tree :myTree : *. *Entries : 10 : T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:569,usability,Tool,Toolchains,569,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:857,usability,Tool,Toolchains,857,"Hi, I cannot reproduce. If I follow the instructions in the readme (below point 1 and 2 together) the example configures, builds and runs fine: perhaps I am missing something? ```. cmake -B build -S . . cmake --build build . ./build/treeExample. ```. outputs. ```. -> cmake -B build -S . -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Vdt: /foo/bar/baz (found version ""0.4"") . -- Configuring done (6.9s). -- Generating done (0.1s). -- Build files have been written to: /foo/bar/eggs/build/tutorials/tree/dictionary/build. -> cmake --build build . [ 11%] Generating G__data2Tree.cxx, libdata2Tree_rdict.pcm, libdata2Tree.rootmap. [ 22%] Building CXX object CMakeFiles/data2TreeLib.dir/data2Tree.cxx.o. [ 33%] Building CXX object CMakeFiles/data2TreeLib.dir/G__data2Tree.cxx.o. [ 44%] Linking CXX shared library libdata2TreeLib.dylib. [ 44%] Built target data2TreeLib. [ 55%] Building CXX object CMakeFiles/treeExample.dir/main.cpp.o. [ 66%] Building CXX object CMakeFiles/treeExample.dir/writeTree.cxx.o. [ 77%] Building CXX object CMakeFiles/treeExample.dir/readTree.cxx.o. [ 88%] Building CXX object CMakeFiles/treeExample.dir/readTreeDF.cxx.o. [100%] Linking CXX executable treeExample. [100%] Built target treeExample. -> ./build/treeExample. Starting writeTree()... ***************************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:58,deployability,build,builder,58,"Hi,. thanks for checking it! Could you try with the cmake builder for Xcode, . ```. cmake -G Xcode -B build -S . . cmake --build build . ./build/treeExample. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:102,deployability,build,build,102,"Hi,. thanks for checking it! Could you try with the cmake builder for Xcode, . ```. cmake -G Xcode -B build -S . . cmake --build build . ./build/treeExample. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:123,deployability,build,build,123,"Hi,. thanks for checking it! Could you try with the cmake builder for Xcode, . ```. cmake -G Xcode -B build -S . . cmake --build build . ./build/treeExample. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:129,deployability,build,build,129,"Hi,. thanks for checking it! Could you try with the cmake builder for Xcode, . ```. cmake -G Xcode -B build -S . . cmake --build build . ./build/treeExample. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:139,deployability,build,build,139,"Hi,. thanks for checking it! Could you try with the cmake builder for Xcode, . ```. cmake -G Xcode -B build -S . . cmake --build build . ./build/treeExample. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:58,availability,error,errors,58,"@atolosadelgado I can reproduce it (and many more similar errors) using the XCode generator. We need to investigate if this is possible to fix at all within our current build system. Would you perhaps know a bit more about why it behaves differently from traditional ones (e.g. Unix Makefiles, Ninja)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:169,deployability,build,build,169,"@atolosadelgado I can reproduce it (and many more similar errors) using the XCode generator. We need to investigate if this is possible to fix at all within our current build system. Would you perhaps know a bit more about why it behaves differently from traditional ones (e.g. Unix Makefiles, Ninja)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:161,energy efficiency,current,current,161,"@atolosadelgado I can reproduce it (and many more similar errors) using the XCode generator. We need to investigate if this is possible to fix at all within our current build system. Would you perhaps know a bit more about why it behaves differently from traditional ones (e.g. Unix Makefiles, Ninja)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:58,performance,error,errors,58,"@atolosadelgado I can reproduce it (and many more similar errors) using the XCode generator. We need to investigate if this is possible to fix at all within our current build system. Would you perhaps know a bit more about why it behaves differently from traditional ones (e.g. Unix Makefiles, Ninja)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:58,safety,error,errors,58,"@atolosadelgado I can reproduce it (and many more similar errors) using the XCode generator. We need to investigate if this is possible to fix at all within our current build system. Would you perhaps know a bit more about why it behaves differently from traditional ones (e.g. Unix Makefiles, Ninja)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:58,usability,error,errors,58,"@atolosadelgado I can reproduce it (and many more similar errors) using the XCode generator. We need to investigate if this is possible to fix at all within our current build system. Would you perhaps know a bit more about why it behaves differently from traditional ones (e.g. Unix Makefiles, Ninja)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:83,availability,error,error,83,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:174,availability,Error,Error,174,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:745,availability,error,error,745,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:637,deployability,depend,dependency,637,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:704,deployability,build,build,704,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:183,energy efficiency,core,core,183,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:311,energy efficiency,core,core,311,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:637,integrability,depend,dependency,637,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:637,modifiability,depend,dependency,637,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:83,performance,error,error,83,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:155,performance,time,times,155,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:174,performance,Error,Error,174,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:745,performance,error,error,745,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:83,safety,error,error,83,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:174,safety,Error,Error,174,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:580,safety,compl,complexDict,580,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:637,safety,depend,dependency,637,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:745,safety,error,error,745,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:580,security,compl,complexDict,580,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:637,testability,depend,dependency,637,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:83,usability,error,error,83,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:174,usability,Error,Error,174,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:220,usability,custom,custom,220,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:227,usability,command,command,227,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:248,usability,User,Users,248,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:303,usability,minim,minimal,303,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14595:745,usability,error,error,745,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times). ```. CMake Error in core/clingutils/CMakeLists.txt:. The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict. listDict. forward_listDict. dequeDict. mapDict. map2Dict. unordered_mapDict. multimapDict. multimap2Dict. unordered_multimapDict. setDict. unordered_setDict. multisetDict. unordered_multisetDict. complexDict. valarrayDict. but none of these is a common dependency of the other(s). This is not. allowed by the Xcode ""new build system"". ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14595
https://github.com/root-project/root/issues/14598:212,availability,failur,failure,212,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:212,deployability,fail,failure,212,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:212,performance,failur,failure,212,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:212,reliability,fail,failure,212,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:207,safety,test,test,207,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:207,testability,test,test,207,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:30,usability,behavi,behavior,30,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:39,security,access,access,39,I can look into this. But I don't have access to an intel mac machine to reproduce this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:160,availability,state,state,160,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:392,availability,state,states,392,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:6,deployability,observ,observations,6,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:160,integrability,state,state,160,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:392,integrability,state,states,392,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:327,performance,memor,memory,327,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:6,testability,observ,observations,6,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:327,usability,memor,memory,327,"Final observations before I hand over to Dev:. * printing just the iteration number shows that the code is properly executed. * AFAICT it suffices to print the state so that all bins are actually filled. * printing the passed name in `TH2Poly::Fill` shows that `alabama` is correctly passed, but the ones after are some random memory locations with invalid data, and definitely not the other states.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1021,deployability,upgrad,upgrade,1021,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1500,deployability,manag,manager,1500,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:46,energy efficiency,reduc,reduced,46,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:262,energy efficiency,model,model,262,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:388,energy efficiency,reduc,reduced,388,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1265,energy efficiency,measur,measure,1265,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1420,energy efficiency,model,model,1420,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1500,energy efficiency,manag,manager,1500,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1237,integrability,sub,submit,1237,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1021,modifiability,upgrad,upgrade,1021,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:61,reliability,doe,does,61,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:415,safety,test,test-stressgraphics-interpreted,415,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:852,safety,except,except,852,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1500,safety,manag,manager,1500,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:262,security,model,model,262,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1041,security,isO,isOSBinFormatMachO,1041,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1110,security,isO,isOSBinFormatMachO,1110,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1420,security,model,model,1420,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:415,testability,test,test-stressgraphics-interpreted,415,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1368,usability,hint,hinted,1368,"Two important notes:. * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS). * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index 0fb4b59ba6..d8fbf13ce5 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {. // Set the small code except for macOS on AArch64 - it results in relocation. // targets that are out-of-range. // TODO: Investigate / report upstream and re-evaluate after a future LLVM. // upgrade. - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)). + if (!TT.isOSBinFormatMachO()). JTMB.setCodeModel(CodeModel::Small);. }. . return cantFail(JTMB.createTargetMachine());. ```. Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:109,deployability,updat,update,109,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:181,deployability,build,buildPerModuleDefaultPipeline,181,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:752,deployability,Modul,ModulePassManager,752,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:787,deployability,Modul,ModuleInlinerPass,787,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1185,deployability,Modul,ModulePassManager,1185,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:752,modifiability,Modul,ModulePassManager,752,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:787,modifiability,Modul,ModuleInlinerPass,787,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1185,modifiability,Modul,ModulePassManager,1185,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:109,safety,updat,update,109,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:752,safety,Modul,ModulePassManager,752,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:787,safety,Modul,ModuleInlinerPass,787,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1185,safety,Modul,ModulePassManager,1185,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:109,security,updat,update,109,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:1537,usability,support,supports,1537,"I found the issue; it's the `RelLookupTableConverterPass` that was causing the issue. Before the passmanager update, the function `populateModulePassManager` was called instead of `buildPerModuleDefaultPipeline` to set the default set of passes. But the former did not have `RelLookupTableConverterPass` turned on by default. Here's a fix by explicitly disabling `RelLookupTableConverterPass`:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/BackendPasses.cpp b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. index 2f8249e132..67da4cc55e 100644. --- a/interpreter/cling/lib/Interpreter/BackendPasses.cpp. +++ b/interpreter/cling/lib/Interpreter/BackendPasses.cpp. @@ -378,6 +378,7 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. P.equals(""ModuleInlinerPass"") || P.equals(""InlinerPass"") ||. P.equals(""InlineAdvisorAnalysis"") ||. P.equals(""PartiallyInlineLibCallsPass"") ||. + P.equals(""RelLookupTableConverterPass"") ||. P.equals(""InlineCostAnnotationPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysisPrinterPass"") ||. P.equals(""InlineSizeEstimatorAnalysis"")). @@ -385,6 +386,11 @@ void BackendPasses::CreatePasses(int OptLevel, llvm::ModulePassManager& MPM,. . return true;. });. + } else {. + // Register a callback for disabling RelLookupTableConverterPass. + PIC.registerShouldRunOptionalPassCallback([](StringRef P, Any) {. + return !P.equals(""RelLookupTableConverterPass""). + });. }. ```. When `CodeModel::Small` is set, `RelLookupTableConverterPass` was running as the target now supports relative lookup tables. When it is not set (fix suggested by Jonas), relative lookup tables are unsupported by default and not run. I'm happy to open a PR with either of the fixes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:442,availability,state,states,442,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:517,availability,state,states,517,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:75,deployability,patch,patch,75,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:207,deployability,patch,patch,207,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:442,integrability,state,states,442,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:517,integrability,state,states,517,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:75,safety,patch,patch,75,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:207,safety,patch,patch,207,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:563,safety,test,tested,563,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:75,security,patch,patch,75,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:207,security,patch,patch,207,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:563,testability,test,tested,563,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14598:358,usability,user,user,358,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14598
https://github.com/root-project/root/issues/14599:45,availability,state,state,45,"It seems to be July 1st, 2009:. http://eadiv.state.wy.us/pop/st-09est.htm. I proposed to add it in https://github.com/root-project/root/pull/14600",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/issues/14599:45,integrability,state,state,45,"It seems to be July 1st, 2009:. http://eadiv.state.wy.us/pop/st-09est.htm. I proposed to add it in https://github.com/root-project/root/pull/14600",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14599
https://github.com/root-project/root/pull/14600:38,interoperability,conflict,conflict,38,This needs to be rebased due to merge conflict.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14600
https://github.com/root-project/root/issues/14601:272,deployability,upgrad,upgrade,272,"Correct, this is a duplicate of https://github.com/root-project/root/issues/12993. The short summary of https://github.com/root-project/root/issues/12993#issuecomment-1590752593 is that LLVM 13 in ROOT 6.30 didn't implement `__builtin_source_location`. It works after the upgrade to LLVM 16 that is not yet in a ROOT release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:317,deployability,releas,release,317,"Correct, this is a duplicate of https://github.com/root-project/root/issues/12993. The short summary of https://github.com/root-project/root/issues/12993#issuecomment-1590752593 is that LLVM 13 in ROOT 6.30 didn't implement `__builtin_source_location`. It works after the upgrade to LLVM 16 that is not yet in a ROOT release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14601:272,modifiability,upgrad,upgrade,272,"Correct, this is a duplicate of https://github.com/root-project/root/issues/12993. The short summary of https://github.com/root-project/root/issues/12993#issuecomment-1590752593 is that LLVM 13 in ROOT 6.30 didn't implement `__builtin_source_location`. It works after the upgrade to LLVM 16 that is not yet in a ROOT release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14601
https://github.com/root-project/root/issues/14602:143,availability,error,error,143,"> I thought we got rid of the implicit using namespace std? I don't know, but that's not good enough anyway (Cling fails too, but with another error). And:. ```. root [1] cout << ""hello"" << endl;. hello. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:115,deployability,fail,fails,115,"> I thought we got rid of the implicit using namespace std? I don't know, but that's not good enough anyway (Cling fails too, but with another error). And:. ```. root [1] cout << ""hello"" << endl;. hello. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:143,performance,error,error,143,"> I thought we got rid of the implicit using namespace std? I don't know, but that's not good enough anyway (Cling fails too, but with another error). And:. ```. root [1] cout << ""hello"" << endl;. hello. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:115,reliability,fail,fails,115,"> I thought we got rid of the implicit using namespace std? I don't know, but that's not good enough anyway (Cling fails too, but with another error). And:. ```. root [1] cout << ""hello"" << endl;. hello. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:143,safety,error,error,143,"> I thought we got rid of the implicit using namespace std? I don't know, but that's not good enough anyway (Cling fails too, but with another error). And:. ```. root [1] cout << ""hello"" << endl;. hello. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:143,usability,error,error,143,"> I thought we got rid of the implicit using namespace std? I don't know, but that's not good enough anyway (Cling fails too, but with another error). And:. ```. root [1] cout << ""hello"" << endl;. hello. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:113,energy efficiency,core,core,113,> I thought we got rid of the implicit using namespace std? See https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1335-L1336,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/issues/14602:108,usability,help,help,108,Yes the PR that removes it is still in Draft mode https://github.com/root-project/root/pull/11027 and needs help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14602
https://github.com/root-project/root/pull/14603:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14603
https://github.com/root-project/root/issues/14605:337,deployability,stack,stack,337,"I think it behaves just as expected:. NOCLEAR By default the background of the histograms is erased before drawing the histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a [THStack](https://root.cern/doc/master/classTHStack.html) on top of another plot. If the patterns used to draw the histograms in the stack are transparent, then the plot behind will be visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:107,energy efficiency,draw,drawing,107,"I think it behaves just as expected:. NOCLEAR By default the background of the histograms is erased before drawing the histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a [THStack](https://root.cern/doc/master/classTHStack.html) on top of another plot. If the patterns used to draw the histograms in the stack are transparent, then the plot behind will be visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:194,energy efficiency,draw,drawing,194,"I think it behaves just as expected:. NOCLEAR By default the background of the histograms is erased before drawing the histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a [THStack](https://root.cern/doc/master/classTHStack.html) on top of another plot. If the patterns used to draw the histograms in the stack are transparent, then the plot behind will be visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:310,energy efficiency,draw,draw,310,"I think it behaves just as expected:. NOCLEAR By default the background of the histograms is erased before drawing the histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a [THStack](https://root.cern/doc/master/classTHStack.html) on top of another plot. If the patterns used to draw the histograms in the stack are transparent, then the plot behind will be visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:152,safety,avoid,avoids,152,"I think it behaves just as expected:. NOCLEAR By default the background of the histograms is erased before drawing the histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a [THStack](https://root.cern/doc/master/classTHStack.html) on top of another plot. If the patterns used to draw the histograms in the stack are transparent, then the plot behind will be visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:164,usability,behavi,behavior,164,"I think it behaves just as expected:. NOCLEAR By default the background of the histograms is erased before drawing the histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a [THStack](https://root.cern/doc/master/classTHStack.html) on top of another plot. If the patterns used to draw the histograms in the stack are transparent, then the plot behind will be visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:218,energy efficiency,draw,drawn,218,"But none of the histograms have transparent fills. This is a solid fill with the white color. It seems like ROOT is mistakenly interpreting that specific fill color on the first histogram as if the histogram should be drawn transparently. . <img width=""626"" alt=""Screenshot 2024-02-07 at 10 31 35"" src=""https://github.com/root-project/root/assets/18280829/dc8f48f0-c092-408d-a724-768334009ca5"">. This is picture of it drawing incorrectly using the reproducer .... the bottom histogram should be filled white, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:418,energy efficiency,draw,drawing,418,"But none of the histograms have transparent fills. This is a solid fill with the white color. It seems like ROOT is mistakenly interpreting that specific fill color on the first histogram as if the histogram should be drawn transparently. . <img width=""626"" alt=""Screenshot 2024-02-07 at 10 31 35"" src=""https://github.com/root-project/root/assets/18280829/dc8f48f0-c092-408d-a724-768334009ca5"">. This is picture of it drawing incorrectly using the reproducer .... the bottom histogram should be filled white, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:145,interoperability,specif,specific,145,"But none of the histograms have transparent fills. This is a solid fill with the white color. It seems like ROOT is mistakenly interpreting that specific fill color on the first histogram as if the histogram should be drawn transparently. . <img width=""626"" alt=""Screenshot 2024-02-07 at 10 31 35"" src=""https://github.com/root-project/root/assets/18280829/dc8f48f0-c092-408d-a724-768334009ca5"">. This is picture of it drawing incorrectly using the reproducer .... the bottom histogram should be filled white, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:34,deployability,stack,stack,34,What the help says is: . When the stack is drawn each histogram is painted twice: . - First in the background color (most of the time white) to erase what is behind the histogram . - and a 2nd time with the fill style and color of the histogram (in your case solid). . But sometimes one wants to skip the first painting in the background color and do only the 2nd step. That is triggered with the option `noclear`. **That can be useful when the fill style of the histogram is hatched for instance**. . Why do you want to have this option `noclear`? it makes no sense if your histogram fill style is solid. What is your use case? do you have an example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:43,energy efficiency,draw,drawn,43,What the help says is: . When the stack is drawn each histogram is painted twice: . - First in the background color (most of the time white) to erase what is behind the histogram . - and a 2nd time with the fill style and color of the histogram (in your case solid). . But sometimes one wants to skip the first painting in the background color and do only the 2nd step. That is triggered with the option `noclear`. **That can be useful when the fill style of the histogram is hatched for instance**. . Why do you want to have this option `noclear`? it makes no sense if your histogram fill style is solid. What is your use case? do you have an example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:129,performance,time,time,129,What the help says is: . When the stack is drawn each histogram is painted twice: . - First in the background color (most of the time white) to erase what is behind the histogram . - and a 2nd time with the fill style and color of the histogram (in your case solid). . But sometimes one wants to skip the first painting in the background color and do only the 2nd step. That is triggered with the option `noclear`. **That can be useful when the fill style of the histogram is hatched for instance**. . Why do you want to have this option `noclear`? it makes no sense if your histogram fill style is solid. What is your use case? do you have an example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:193,performance,time,time,193,What the help says is: . When the stack is drawn each histogram is painted twice: . - First in the background color (most of the time white) to erase what is behind the histogram . - and a 2nd time with the fill style and color of the histogram (in your case solid). . But sometimes one wants to skip the first painting in the background color and do only the 2nd step. That is triggered with the option `noclear`. **That can be useful when the fill style of the histogram is hatched for instance**. . Why do you want to have this option `noclear`? it makes no sense if your histogram fill style is solid. What is your use case? do you have an example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:9,usability,help,help,9,What the help says is: . When the stack is drawn each histogram is painted twice: . - First in the background color (most of the time white) to erase what is behind the histogram . - and a 2nd time with the fill style and color of the histogram (in your case solid). . But sometimes one wants to skip the first painting in the background color and do only the 2nd step. That is triggered with the option `noclear`. **That can be useful when the fill style of the histogram is hatched for instance**. . Why do you want to have this option `noclear`? it makes no sense if your histogram fill style is solid. What is your use case? do you have an example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:397,availability,consist,consistent,397,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:50,deployability,stack,stack,50,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:162,deployability,stack,stack,162,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:491,energy efficiency,draw,draw,491,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:535,energy efficiency,draw,drawn,535,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:367,modifiability,maintain,maintain,367,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:367,safety,maintain,maintain,367,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:101,usability,user,user,101,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:108,usability,prefer,preferences,108,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:190,usability,user,user,190,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:380,usability,behavi,behaviour,380,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:397,usability,consist,consistent,397,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:436,usability,help,help,436,"This is in some generic code that is assembling a stack of histograms that are styled according to a user's preferences, so I wanted to use ""noclear"" so that the stack is see-through if the user opts for fill styles that are partially transparent, like hatching as you say. ""noclear"" felt like the most appropriate generic option to go for in my application. I still maintain the behaviour is not consistent with what is written in the help - the first histogram is a solid white fill. If I draw that with ""noclear"" it should still be drawn as solid white color, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:41,energy efficiency,green,green,41,"Yes, white is a special case. If you use green it behaves as you expect. I will check if something can be done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:605,energy efficiency,Draw,DrawFrame,605,"Indeed that's not an issue with THStack. It comes from the fact kWhite = 0 and, since the very beginning of ROOT, a fill color equal to 0 meant ""not filled""... I know it is bad but that's just like that for 30 years. You can see what I mean with the following example. ```. {. auto h1 = new TH1D(""h1"",""h1"",10,0,11);. auto h2 = new TH1D(""h2"",""h2"",10,0,11);. auto h3 = new TH1D(""h3"",""h3"",10,0,11);. h1->SetBinContent(2,1);. h2->SetBinContent(4,1);. h3->SetBinContent(6,1);. . h1->SetFillColor(kWhite);. h2->SetFillColor(kRed);. h3->SetFillColor(kGreen);. . auto c = new TCanvas();. c->SetFillColor(30);. c->DrawFrame(0., 0.,11.,1.5);. h1->Draw(""SAME"");. h2->Draw(""SAME"");. h3->Draw(""SAME"");. }. ```. The workaround in your case will be to define a white color not attached to index 0. Like:. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. int kWhite2 = 345;. TColor *color = new TColor(kWhite2, 1., 1., 1.);. h1->SetFillColor(kWhite2);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:637,energy efficiency,Draw,Draw,637,"Indeed that's not an issue with THStack. It comes from the fact kWhite = 0 and, since the very beginning of ROOT, a fill color equal to 0 meant ""not filled""... I know it is bad but that's just like that for 30 years. You can see what I mean with the following example. ```. {. auto h1 = new TH1D(""h1"",""h1"",10,0,11);. auto h2 = new TH1D(""h2"",""h2"",10,0,11);. auto h3 = new TH1D(""h3"",""h3"",10,0,11);. h1->SetBinContent(2,1);. h2->SetBinContent(4,1);. h3->SetBinContent(6,1);. . h1->SetFillColor(kWhite);. h2->SetFillColor(kRed);. h3->SetFillColor(kGreen);. . auto c = new TCanvas();. c->SetFillColor(30);. c->DrawFrame(0., 0.,11.,1.5);. h1->Draw(""SAME"");. h2->Draw(""SAME"");. h3->Draw(""SAME"");. }. ```. The workaround in your case will be to define a white color not attached to index 0. Like:. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. int kWhite2 = 345;. TColor *color = new TColor(kWhite2, 1., 1., 1.);. h1->SetFillColor(kWhite2);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:656,energy efficiency,Draw,Draw,656,"Indeed that's not an issue with THStack. It comes from the fact kWhite = 0 and, since the very beginning of ROOT, a fill color equal to 0 meant ""not filled""... I know it is bad but that's just like that for 30 years. You can see what I mean with the following example. ```. {. auto h1 = new TH1D(""h1"",""h1"",10,0,11);. auto h2 = new TH1D(""h2"",""h2"",10,0,11);. auto h3 = new TH1D(""h3"",""h3"",10,0,11);. h1->SetBinContent(2,1);. h2->SetBinContent(4,1);. h3->SetBinContent(6,1);. . h1->SetFillColor(kWhite);. h2->SetFillColor(kRed);. h3->SetFillColor(kGreen);. . auto c = new TCanvas();. c->SetFillColor(30);. c->DrawFrame(0., 0.,11.,1.5);. h1->Draw(""SAME"");. h2->Draw(""SAME"");. h3->Draw(""SAME"");. }. ```. The workaround in your case will be to define a white color not attached to index 0. Like:. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. int kWhite2 = 345;. TColor *color = new TColor(kWhite2, 1., 1., 1.);. h1->SetFillColor(kWhite2);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:675,energy efficiency,Draw,Draw,675,"Indeed that's not an issue with THStack. It comes from the fact kWhite = 0 and, since the very beginning of ROOT, a fill color equal to 0 meant ""not filled""... I know it is bad but that's just like that for 30 years. You can see what I mean with the following example. ```. {. auto h1 = new TH1D(""h1"",""h1"",10,0,11);. auto h2 = new TH1D(""h2"",""h2"",10,0,11);. auto h3 = new TH1D(""h3"",""h3"",10,0,11);. h1->SetBinContent(2,1);. h2->SetBinContent(4,1);. h3->SetBinContent(6,1);. . h1->SetFillColor(kWhite);. h2->SetFillColor(kRed);. h3->SetFillColor(kGreen);. . auto c = new TCanvas();. c->SetFillColor(30);. c->DrawFrame(0., 0.,11.,1.5);. h1->Draw(""SAME"");. h2->Draw(""SAME"");. h3->Draw(""SAME"");. }. ```. The workaround in your case will be to define a white color not attached to index 0. Like:. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. int kWhite2 = 345;. TColor *color = new TColor(kWhite2, 1., 1., 1.);. h1->SetFillColor(kWhite2);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:1103,energy efficiency,Draw,Draw,1103,"Indeed that's not an issue with THStack. It comes from the fact kWhite = 0 and, since the very beginning of ROOT, a fill color equal to 0 meant ""not filled""... I know it is bad but that's just like that for 30 years. You can see what I mean with the following example. ```. {. auto h1 = new TH1D(""h1"",""h1"",10,0,11);. auto h2 = new TH1D(""h2"",""h2"",10,0,11);. auto h3 = new TH1D(""h3"",""h3"",10,0,11);. h1->SetBinContent(2,1);. h2->SetBinContent(4,1);. h3->SetBinContent(6,1);. . h1->SetFillColor(kWhite);. h2->SetFillColor(kRed);. h3->SetFillColor(kGreen);. . auto c = new TCanvas();. c->SetFillColor(30);. c->DrawFrame(0., 0.,11.,1.5);. h1->Draw(""SAME"");. h2->Draw(""SAME"");. h3->Draw(""SAME"");. }. ```. The workaround in your case will be to define a white color not attached to index 0. Like:. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. int kWhite2 = 345;. TColor *color = new TColor(kWhite2, 1., 1., 1.);. h1->SetFillColor(kWhite2);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:152,safety,avoid,avoid,152,"Right, thanks for the explanation. I see now there is a comment about this @ https://root.cern.ch/doc/master/classTColor.html ... I'll tell my users to avoid thinking that kWhite fillcolor is a white fill color. It would be nice if there was a predefined actually-white fill color, but for now I'll try to work around this ""feature"" with the users. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:143,usability,user,users,143,"Right, thanks for the explanation. I see now there is a comment about this @ https://root.cern.ch/doc/master/classTColor.html ... I'll tell my users to avoid thinking that kWhite fillcolor is a white fill color. It would be nice if there was a predefined actually-white fill color, but for now I'll try to work around this ""feature"" with the users. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:342,usability,user,users,342,"Right, thanks for the explanation. I see now there is a comment about this @ https://root.cern.ch/doc/master/classTColor.html ... I'll tell my users to avoid thinking that kWhite fillcolor is a white fill color. It would be nice if there was a predefined actually-white fill color, but for now I'll try to work around this ""feature"" with the users. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:81,energy efficiency,core,core,81,"Actually such color exists, it is number 10 (it does not have a name defined in `core/base/inc/Rtypes.h`):. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. h1->SetFillColor(10);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:346,energy efficiency,Draw,Draw,346,"Actually such color exists, it is number 10 (it does not have a name defined in `core/base/inc/Rtypes.h`):. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. h1->SetFillColor(10);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:48,reliability,doe,does,48,"Actually such color exists, it is number 10 (it does not have a name defined in `core/base/inc/Rtypes.h`):. ```. {. auto h1 = new TH1D(""h"",""h"",1,0,1);. auto h2 = new TH1D(""h2"",""h2"",1,0,1);. h1->SetBinContent(1,4);. h2->SetBinContent(1,6);. h1->SetFillColor(10);. h2->SetFillColor(kRed);. auto hs = new THStack();. hs->Add(h1);. hs->Add(h2);. hs->Draw(""noclear"");. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:9,usability,prototyp,prototype,9,"I made a prototype of a static function returning the color by name:. ```. h1->SetFillColor(TColor::GetColorByName(""white""));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:25,usability,close,closed,25,"I think the issue can be closed. The outcome from our user side is they need to use ""10"" rather than ""kWhite"" when they actually want white fill color. . I guess I could ask the question ""how bad would it be if we re-assigned kWhite to 10 rather than 0?"" but I'm not gonna press for it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:54,usability,user,user,54,"I think the issue can be closed. The outcome from our user side is they need to use ""10"" rather than ""kWhite"" when they actually want white fill color. . I guess I could ask the question ""how bad would it be if we re-assigned kWhite to 10 rather than 0?"" but I'm not gonna press for it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/issues/14605:16,usability,close,close,16,@will-cern ok I close it. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14605
https://github.com/root-project/root/pull/14608:0,availability,ping,pinging,0,"pinging, I think it's ready to merge, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14608
https://github.com/root-project/root/pull/14613:48,safety,test,test-result-comment,48,We probably want the same in `.github/workflows/test-result-comment.yml` to get rid of the comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:48,testability,test,test-result-comment,48,We probably want the same in `.github/workflows/test-result-comment.yml` to get rid of the comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:38,usability,workflow,workflows,38,We probably want the same in `.github/workflows/test-result-comment.yml` to get rid of the comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:249,integrability,event,event,249,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:151,safety,test,test-result-comment,151,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:420,safety,test,test-result-comment,420,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:151,testability,test,test-result-comment,151,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:420,testability,test,test-result-comment,420,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:141,usability,workflow,workflows,141,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:367,usability,workflow,workflows,367,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:112,safety,test,test-result-comment,112,"@dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:112,testability,test,test-result-comment,112,"@dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:102,usability,workflow,workflows,102,"@dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:82,safety,test,test-result-comment,82,You can see what I mean at https://github.com/root-project/root/actions/workflows/test-result-comment.yml.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:82,testability,test,test-result-comment,82,You can see what I mean at https://github.com/root-project/root/actions/workflows/test-result-comment.yml.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:72,usability,workflow,workflows,72,You can see what I mean at https://github.com/root-project/root/actions/workflows/test-result-comment.yml.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:114,safety,test,test-result-comment,114,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:419,safety,reme,remember,419,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:481,security,secur,security,481,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:551,security,privil,privileges,551,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:652,security,modif,modify,652,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:114,testability,test,test-result-comment,114,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:104,usability,workflow,workflows,104,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14613:574,usability,document,documentation,574,"> @dpiparo @hahnjo No amount of changes to the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml seem to do literally anything on this PR, I even changed the name of the job and that is not reflected, I don't know what to outside merging this PR as it is (removing the debug commits ofc). It *could* be that the definition for `workflow_run` are taken from the target branch. I remember that this is the case for `pull_request_target`; for security reasons you don't want to run arbitrary code with ""elevated"" privileges. The GitHub documentation is unfortunately very scarce on this, so yes I agree, we should modify to the best of our knowledge and then merge. In the better case, it just works or in the worst case, we'll have to live with an empty comment :shrug:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14613
https://github.com/root-project/root/pull/14614:219,security,access,access-from-command-shell,219,@vepadulano . All information is in the description of the PR. THttpServer implements different kind of http requests. Most of them described here:. https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html#data-access-from-command-shell. This PR adds one more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:180,usability,guid,guides,180,@vepadulano . All information is in the description of the PR. THttpServer implements different kind of http requests. Most of them described here:. https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html#data-access-from-command-shell. This PR adds one more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:231,usability,command,command-shell,231,@vepadulano . All information is in the description of the PR. THttpServer implements different kind of http requests. Most of them described here:. https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html#data-access-from-command-shell. This PR adds one more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:82,availability,down,download,82,"So it produces a ROOT file with any type of created object in it, then a user can download it? Is it a read-only file? What can users do with it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:73,usability,user,user,73,"So it produces a ROOT file with any type of created object in it, then a user can download it? Is it a read-only file? What can users do with it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:128,usability,user,users,128,"So it produces a ROOT file with any type of created object in it, then a user can download it? Is it a read-only file? What can users do with it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:63,availability,down,downloaded,63,"@vepadulano . It is ROOT file with ROOT object. It only can be downloaded using `wget` or any other utility. . > Is it a read-only file? File does not exists on the server - it is temporary TMemFile instance during http request. > What can users do with it? ??? Open, draw histogram, analyze, ???",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:268,energy efficiency,draw,draw,268,"@vepadulano . It is ROOT file with ROOT object. It only can be downloaded using `wget` or any other utility. . > Is it a read-only file? File does not exists on the server - it is temporary TMemFile instance during http request. > What can users do with it? ??? Open, draw histogram, analyze, ???",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:142,reliability,doe,does,142,"@vepadulano . It is ROOT file with ROOT object. It only can be downloaded using `wget` or any other utility. . > Is it a read-only file? File does not exists on the server - it is temporary TMemFile instance during http request. > What can users do with it? ??? Open, draw histogram, analyze, ???",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:240,usability,user,users,240,"@vepadulano . It is ROOT file with ROOT object. It only can be downloaded using `wget` or any other utility. . > Is it a read-only file? File does not exists on the server - it is temporary TMemFile instance during http request. > What can users do with it? ??? Open, draw histogram, analyze, ???",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:109,interoperability,xml,xml,109,"@vepadulano . `TRootSniffer` is class which can ""sniff"" ROOT objects around and convert them into image/json/xml/bin/root files. `THttpServer` uses sniffer in processing http requests via different engines. There is special ""lightweight"" sniffer which used together with webgui and does not includes all extras. I do not like to include all kind of such basic infos in each PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14614:282,reliability,doe,does,282,"@vepadulano . `TRootSniffer` is class which can ""sniff"" ROOT objects around and convert them into image/json/xml/bin/root files. `THttpServer` uses sniffer in processing http requests via different engines. There is special ""lightweight"" sniffer which used together with webgui and does not includes all extras. I do not like to include all kind of such basic infos in each PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14614
https://github.com/root-project/root/pull/14615:86,interoperability,specif,specify,86,"For example, does this change affect nightlies? Maybe so, but then we want to further specify the `event_name` part of the condition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:13,reliability,doe,does,13,"For example, does this change affect nightlies? Maybe so, but then we want to further specify the `event_name` part of the condition.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:30,deployability,build,builds,30,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:38,deployability,build,builds,38,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:110,energy efficiency,schedul,schedule,110,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:205,integrability,repositor,repository,205,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:205,interoperability,repositor,repository,205,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:110,performance,schedul,schedule,110,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:233,reliability,pra,practice,233,"This is used for *all* non-PR builds: builds on branches (ie `master`), maybe at some point tags, nightlies (`schedule`), and manual triggers (`workflow_call`). Having CI on by default for the ""canonical"" repository is a very common practice. Is that a problem somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:320,integrability,repositor,repository,320,"> > Is that a problem somewhere? > . > Yes, here #14613 as far as I can tell. You mean the weirdly looking list of actions? Btw I think this change would also break GitHub Actions for external contributors that are not member of the `root-project` organization, in which case `pull_request` runs in the context of their repository... (or maybe that's only a caveat in GitLab? :thinking:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:320,interoperability,repositor,repository,320,"> > Is that a problem somewhere? > . > Yes, here #14613 as far as I can tell. You mean the weirdly looking list of actions? Btw I think this change would also break GitHub Actions for external contributors that are not member of the `root-project` organization, in which case `pull_request` runs in the context of their repository... (or maybe that's only a caveat in GitLab? :thinking:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:303,testability,context,context,303,"> > Is that a problem somewhere? > . > Yes, here #14613 as far as I can tell. You mean the weirdly looking list of actions? Btw I think this change would also break GitHub Actions for external contributors that are not member of the `root-project` organization, in which case `pull_request` runs in the context of their repository... (or maybe that's only a caveat in GitLab? :thinking:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:107,deployability,contain,contains,107,"> You mean the weirdly looking list of actions? I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:123,integrability,event,event,123,"> You mean the weirdly looking list of actions? I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:115,deployability,contain,contains,115,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:296,deployability,build,builds,296,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:510,deployability,contain,contains,510,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:131,integrability,event,event,131,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:329,integrability,repositor,repository,329,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:526,integrability,event,event,526,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:329,interoperability,repositor,repository,329,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14615:314,testability,context,context,314,"> > You mean the weirdly looking list of actions? > . > I mean that without changing `||` to `&&`, the condition `!contains(github.event.pull_request.title, '[skip-ci]')` is irrelevant, since even when it is false, the action would be run anyway. Yes, that's probably only for you because our PR builds run in the context of the repository. In that case probably something like `if: (github.repository_owner == 'root-project' && github.event_name != 'pull_request') || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, ""[ski-ci]""))`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14615
https://github.com/root-project/root/pull/14616:159,energy efficiency,measur,measure,159,"> Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:104,performance,perform,performance,104,"> Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:104,usability,perform,performance,104,"> Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:333,availability,cluster,cluster,333,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:333,deployability,cluster,cluster,333,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:167,energy efficiency,measur,measure,167,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:294,energy efficiency,measur,measurable,294,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:602,energy efficiency,current,current,602,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:662,energy efficiency,model,model,662,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:753,energy efficiency,reduc,reduced,753,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:106,performance,perform,performance,106,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:341,performance,cach,cache,341,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:374,performance,cach,cache,374,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:780,performance,cach,caching,780,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:662,security,model,model,662,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14616:106,usability,perform,performance,106,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. > . > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14616
https://github.com/root-project/root/pull/14618:102,deployability,configurat,configuration,102,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14618:102,integrability,configur,configuration,102,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14618:102,modifiability,configur,configuration,102,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14618:156,performance,time,timed,156,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14618:102,security,configur,configuration,102,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14618:12,usability,cancel,cancelled,12,@mdessole I cancelled the CI jobs on `mac12` and `mac13` - they were stuck since 3 hours in the CMake configuration step (same result as previous runs that timed out after 6 hours). Maybe try rebasing the PR with the latest CI fixes in `master`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14618:2,usability,cancel,cancelled,2,I cancelled the stuck `mac12` and `mac13` once more...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14618
https://github.com/root-project/root/pull/14622:11,deployability,build,build,11,"@phsft-bot build also on mac12/default, mac13/default with flags -DCTEST_TEST_EXCLUDE_NONE=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14622
https://github.com/root-project/root/pull/14626:12,availability,failur,failures,12,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:12,deployability,fail,failures,12,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:144,deployability,fail,fails,144,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:370,deployability,updat,updated,370,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:12,performance,failur,failures,12,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:12,reliability,fail,failures,12,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:144,reliability,fail,fails,144,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:370,safety,updat,updated,370,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14626:370,security,updat,updated,370,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14626
https://github.com/root-project/root/pull/14627:0,deployability,Fail,Failing,0,Failing test seems unrelated (not enough space on node),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:0,reliability,Fail,Failing,0,Failing test seems unrelated (not enough space on node),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:8,safety,test,test,8,Failing test seems unrelated (not enough space on node),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:8,testability,test,test,8,Failing test seems unrelated (not enough space on node),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:23,safety,review,review,23,Thanks to you for your review! Should we add a new issue to keep track of applying similar changes in the future to:. - TBufferSQL*. - TBufferJSON*. - TBufferXML*,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:23,testability,review,review,23,Thanks to you for your review! Should we add a new issue to keep track of applying similar changes in the future to:. - TBufferSQL*. - TBufferJSON*. - TBufferXML*,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:25,safety,review,review,25,> Thanks to you for your review! > . > Should we add a new issue to keep track of applying similar changes in the future to:. > . > * TBufferSQL*. > . > * TBufferJSON*. > . > * TBufferXML*. Done https://github.com/root-project/root/issues/14770,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:25,testability,review,review,25,> Thanks to you for your review! > . > Should we add a new issue to keep track of applying similar changes in the future to:. > . > * TBufferSQL*. > . > * TBufferJSON*. > . > * TBufferXML*. Done https://github.com/root-project/root/issues/14770,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:232,safety,review,review,232,"@ferdymercury Maybe also in this PR it would be nice to clean the commit history, I guess we want to keep the first two commits as they are independent non-trivial changes but squash the following 2 commits as they were part of the review process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:232,testability,review,review,232,"@ferdymercury Maybe also in this PR it would be nice to clean the commit history, I guess we want to keep the first two commits as they are independent non-trivial changes but squash the following 2 commits as they were part of the review process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:234,safety,review,review,234,"> @ferdymercury Maybe also in this PR it would be nice to clean the commit history, I guess we want to keep the first two commits as they are independent non-trivial changes but squash the following 2 commits as they were part of the review process. Done :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:234,testability,review,review,234,"> @ferdymercury Maybe also in this PR it would be nice to clean the commit history, I guess we want to keep the first two commits as they are independent non-trivial changes but squash the following 2 commits as they were part of the review process. Done :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:26,availability,failur,failure,26,I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:26,deployability,fail,failure,26,I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:26,performance,failur,failure,26,I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:26,reliability,fail,failure,26,I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,availability,failur,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limited to this PR .... Weird. No clue. I just see:. ```. grep -r WriteFast * -n. bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:50: buf->WriteFastArray(PyBytes_AS_STRING(pybuf), PyBytes_GET_SIZE(pybuf));. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,deployability,fail,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limited to this PR .... Weird. No clue. I just see:. ```. grep -r WriteFast * -n. bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:50: buf->WriteFastArray(PyBytes_AS_STRING(pybuf), PyBytes_GET_SIZE(pybuf));. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:225,interoperability,bind,bindings,225,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limited to this PR .... Weird. No clue. I just see:. ```. grep -r WriteFast * -n. bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:50: buf->WriteFastArray(PyBytes_AS_STRING(pybuf), PyBytes_GET_SIZE(pybuf));. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:225,modifiability,bind,bindings,225,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limited to this PR .... Weird. No clue. I just see:. ```. grep -r WriteFast * -n. bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:50: buf->WriteFastArray(PyBytes_AS_STRING(pybuf), PyBytes_GET_SIZE(pybuf));. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,performance,failur,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limited to this PR .... Weird. No clue. I just see:. ```. grep -r WriteFast * -n. bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:50: buf->WriteFastArray(PyBytes_AS_STRING(pybuf), PyBytes_GET_SIZE(pybuf));. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,reliability,fail,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limited to this PR .... Weird. No clue. I just see:. ```. grep -r WriteFast * -n. bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:50: buf->WriteFastArray(PyBytes_AS_STRING(pybuf), PyBytes_GET_SIZE(pybuf));. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,availability,failur,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,deployability,fail,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:190,deployability,fail,fails,190,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:204,interoperability,platform,platform,204,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:300,interoperability,platform,platform,300,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,performance,failur,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:228,performance,time,time,228,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:28,reliability,fail,failure,28,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:190,reliability,fail,fails,190,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:172,safety,test,test,172,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:172,testability,test,test,172,"> I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR .... This test sporadically fails on that platform, not the first time I see it. I doubt it is related to this PR. Let me rerun just that platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:36,availability,error,error,36,"Latest ubuntu2310 run is green, the error is not related to this PR strictly. Merging now, thanks again @ferdymercury for the contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:25,energy efficiency,green,green,25,"Latest ubuntu2310 run is green, the error is not related to this PR strictly. Merging now, thanks again @ferdymercury for the contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:36,performance,error,error,36,"Latest ubuntu2310 run is green, the error is not related to this PR strictly. Merging now, thanks again @ferdymercury for the contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:36,safety,error,error,36,"Latest ubuntu2310 run is green, the error is not related to this PR strictly. Merging now, thanks again @ferdymercury for the contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14627:36,usability,error,error,36,"Latest ubuntu2310 run is green, the error is not related to this PR strictly. Merging now, thanks again @ferdymercury for the contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14627
https://github.com/root-project/root/pull/14628:1844,availability,error,errorout,1844,"efix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1915,availability,recov,recover,1915,"def COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1934,availability,error,errors,1934,"// PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""),",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:418,deployability,Automat,Automatically,418,"Tablegen'd file for reference:. ```bash. dvalapar@emmanouil:~/work/root (dev.cling-tablegen)$ llvm-tblgen-16 -I /home/dvalapar/work/root/interpreter/llvm-project/llvm/include /home/dvalapar/work/root/interpreter/cling/include/cling/Interpreter/ClingOptions.td -gen. -opt-parser-defs . /*===- TableGen'erated file -------------------------------------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1915,deployability,recov,recover,1915,"def COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3278,deployability,version,version,3278,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3289,deployability,version,version,3289,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3358,deployability,version,version,3358,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2359,energy efficiency,Load,Load,2359,", nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3182,integrability,inject,injection,3182,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3278,integrability,version,version,3278,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3289,integrability,version,version,3289,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3358,integrability,version,version,3358,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3278,modifiability,version,version,3278,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3289,modifiability,version,version,3289,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3358,modifiability,version,version,3358,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1844,performance,error,errorout,1844,"efix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1934,performance,error,errors,1934,"// PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""),",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2359,performance,Load,Load,2359,", nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler ver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1915,reliability,recov,recover,1915,"def COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1321,safety,input,input,1321,"--------------------------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1331,safety,INPUT,INPUT,1331,"----------------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1338,safety,Input,Input,1338,"---------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1844,safety,error,errorout,1844,"efix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1915,safety,recov,recover,1915,"def COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1928,safety,input,input,1928,"endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""norunt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1934,safety,error,errors,1934,"// PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""),",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3203,safety,valid,validity,3203,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1915,security,recov,recover,1915,"def COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3182,security,inject,injection,3182,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:418,testability,Automat,Automatically,418,"Tablegen'd file for reference:. ```bash. dvalapar@emmanouil:~/work/root (dev.cling-tablegen)$ llvm-tblgen-16 -I /home/dvalapar/work/root/interpreter/llvm-project/llvm/include /home/dvalapar/work/root/interpreter/cling/include/cling/Interpreter/ClingOptions.td -gen. -opt-parser-defs . /*===- TableGen'erated file -------------------------------------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3574,testability,Simpl,SimpleEnumValue,3574,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3640,testability,Simpl,SimpleEnumValueTable,3640,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3670,testability,Simpl,SimpleEnumValue,3670,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3728,testability,Simpl,SimpleEnumValueTable,3728,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3749,testability,Simpl,SimpleEnumValueTables,3749,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3802,testability,Simpl,SimpleEnumValueTablesSize,3802,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3840,testability,Simpl,SimpleEnumValueTables,3840,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1321,usability,input,input,1321,"--------------------------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1331,usability,INPUT,INPUT,1331,"----------------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1338,usability,Input,Input,1338,"---------*- C++ -*-===*\. |* *|. |* Option Parsing Definitions *|. |* *|. |* Automatically generated file, do not edit! *|. |* *|. \*===----------------------------------------------------------------------===*/. /////////. // Prefixes. #ifdef PREFIX. #define COMMA ,. PREFIX(prefix_0, {llvm::StringLiteral("""")}). PREFIX(prefix_3, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_2, {llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). PREFIX(prefix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1844,usability,error,errorout,1844,"efix_1, {llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1928,usability,input,input,1928,"endif // PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""norunt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:1934,usability,error,errors,1934,"// PREFIX. /////////. // Prefix Union. #ifdef PREFIX_UNION. #define COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""),",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2000,usability,help,help,2000,"ne COMMA ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2008,usability,help,help,2008," ,. PREFIX_UNION({. llvm::StringLiteral(""-"") COMMA llvm::StringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2066,usability,help,help,2066,"tringLiteral(""--"") COMMA llvm::StringLiteral("""")}). #undef COMMA. #endif // PREFIX_UNION. /////////. // ValuesCode. #ifdef OPTTABLE_VALUES_CODE. #endif. /////////. // Groups. #ifdef OPTION. //////////. // Options. OPTION(prefix_0, llvm::StringLiteral(""<input>""), INPUT, Input, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_0, llvm::StringLiteral(""<unknown>""), UNKNOWN, Unknown, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2532,usability,command,command,2532,"OPTION(prefix_1, llvm::StringLiteral(""debug-only=""), _debugFlags_EQ, Joined, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:2695,usability,command,command,2695,"ringLiteral(""debug-only""), _debugFlags, Flag, INVALID, INVALID, nullptr, 0, 0, nullptr, nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""errorout""), _errorout, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3006,usability,support,support,3006,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3574,usability,Simpl,SimpleEnumValue,3574,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3640,usability,Simpl,SimpleEnumValueTable,3640,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3670,usability,Simpl,SimpleEnumValue,3670,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3728,usability,Simpl,SimpleEnumValueTable,3728,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3749,usability,Simpl,SimpleEnumValueTables,3749,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3802,usability,Simpl,SimpleEnumValueTablesSize,3802,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:3840,usability,Simpl,SimpleEnumValueTables,3840,"0,. ""Do not recover from input errors"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print this help text"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Add directory to library search path"", ""<directory>"", nullptr). OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,. ""Load a library before prompt"", ""<library>"", nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,. ""Set the meta command tag, default '.'"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Do not show startup-banner"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr). OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable injection of pointer validity checks"", nullptr, nullptr). OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Print the compiler version"", nullptr, nullptr). OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,. ""Enable verbose output"", nullptr, nullptr). #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {. const char *Name;. unsigned Value;. };. struct SimpleEnumValueTable {. const SimpleEnumValue *Table;. unsigned Size;. };. static const SimpleEnumValueTable SimpleEnumValueTables[] = {};. static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);. #endif // SIMPLE_ENUM_VALUE_TABLE. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:124,deployability,build,build,124,"> Try to change these lines. on Windows, the binaries are in the `$<CONFIG>/bin` directory, `$<CONFIG>` being only known at build time. Thanks @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:130,performance,time,time,130,"> Try to change these lines. on Windows, the binaries are in the `$<CONFIG>/bin` directory, `$<CONFIG>` being only known at build time. Thanks @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:63,availability,failur,failures,63,The `roottest-root-roofitstats-RooDataSet_ASCII_out_WILL_FAIL` failures on Windows are known and will be fixed soon (a PR is there already),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:63,deployability,fail,failures,63,The `roottest-root-roofitstats-RooDataSet_ASCII_out_WILL_FAIL` failures on Windows are known and will be fixed soon (a PR is there already),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:63,performance,failur,failures,63,The `roottest-root-roofitstats-RooDataSet_ASCII_out_WILL_FAIL` failures on Windows are known and will be fixed soon (a PR is there already),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14628:63,reliability,fail,failures,63,The `roottest-root-roofitstats-RooDataSet_ASCII_out_WILL_FAIL` failures on Windows are known and will be fixed soon (a PR is there already),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14628
https://github.com/root-project/root/pull/14629:5,safety,reme,remember,5,I'll remember 😉,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14629
https://github.com/root-project/root/issues/14634:39,integrability,coupl,couple,39,"@linev might be interested, he fixed a couple of issue with `nlohman/json` in the past",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:39,modifiability,coupl,couple,39,"@linev might be interested, he fixed a couple of issue with `nlohman/json` in the past",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:39,testability,coupl,couple,39,"@linev might be interested, he fixed a couple of issue with `nlohman/json` in the past",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:137,deployability,version,version,137,Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? Strange that `v3.10.4` makes problem. . ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:137,integrability,version,version,137,Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? Strange that `v3.10.4` makes problem. . ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:204,interoperability,compatib,compatible,204,Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? Strange that `v3.10.4` makes problem. . ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:137,modifiability,version,version,137,Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? Strange that `v3.10.4` makes problem. . ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:8,testability,understand,understand,8,Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? Strange that `v3.10.4` makes problem. . ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:198,deployability,version,version,198,"> Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? > . I used default options, so `builtin_nlohmannjson=OFF`. > Strange that `v3.10.4` makes problem. ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. yes, that's strange. I haven't checked the diff between 3.10.5 and 3.10.4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:198,integrability,version,version,198,"> Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? > . I used default options, so `builtin_nlohmannjson=OFF`. > Strange that `v3.10.4` makes problem. ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. yes, that's strange. I haven't checked the diff between 3.10.5 and 3.10.4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:265,interoperability,compatib,compatible,265,"> Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? > . I used default options, so `builtin_nlohmannjson=OFF`. > Strange that `v3.10.4` makes problem. ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. yes, that's strange. I haven't checked the diff between 3.10.5 and 3.10.4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:198,modifiability,version,version,198,"> Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? > . I used default options, so `builtin_nlohmannjson=OFF`. > Strange that `v3.10.4` makes problem. ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. yes, that's strange. I haven't checked the diff between 3.10.5 and 3.10.4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:10,testability,understand,understand,10,"> Just to understand - is ROOT compiled with external or builtin `nlohmann/json.hpp`? > . I used default options, so `builtin_nlohmannjson=OFF`. > Strange that `v3.10.4` makes problem. ROOT builtin version is `3.10.5` and definitions in `REveElement.hxx` should be compatible with it. yes, that's strange. I haven't checked the diff between 3.10.5 and 3.10.4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:72,deployability,releas,release,72,I remove usage of `nlohmann/json_fwd.hpp` in 6.30 branch. . Fix will be release with 6.30.06 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:93,deployability,version,version,93,I remove usage of `nlohmann/json_fwd.hpp` in 6.30 branch. . Fix will be release with 6.30.06 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:93,integrability,version,version,93,I remove usage of `nlohmann/json_fwd.hpp` in 6.30 branch. . Fix will be release with 6.30.06 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/issues/14634:93,modifiability,version,version,93,I remove usage of `nlohmann/json_fwd.hpp` in 6.30 branch. . Fix will be release with 6.30.06 version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14634
https://github.com/root-project/root/pull/14635:30,safety,input,input,30,@ferdymercury thanks for your input. I will make a new PR because this one is outdated (to many in TColor in between). I'll look at your suggestions though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14635
https://github.com/root-project/root/pull/14635:30,usability,input,input,30,@ferdymercury thanks for your input. I will make a new PR because this one is outdated (to many in TColor in between). I'll look at your suggestions though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14635
https://github.com/root-project/root/pull/14636:51,availability,cluster,cluster,51,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:175,availability,cluster,clusters,175,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:51,deployability,cluster,cluster,51,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:175,deployability,cluster,clusters,175,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:237,deployability,log,logic,237,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:237,safety,log,logic,237,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:16,security,sign,significant,16,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:237,security,log,logic,237,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/pull/14636:237,testability,log,logic,237,"This can have a significant influence on the first cluster size: Because the written bytes are misreported, it will grow quite large (by factors above the target size). Later clusters will sort of auto-correct with the compression ratio logic...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14636
https://github.com/root-project/root/issues/14642:382,energy efficiency,current,current,382,"As discussed, it will be more difficult than #16356 to correctly implement the (recursive) collection writer, and probably require the use of a specialized sink where the writer writes to. Let's try a different approach:. - We map the leaf lists to a list of `std::vector`. Same page merging, in the vast majority of cases, will make sure that the on-disk size is comparable to the current importer result. - We drop the collection writer / collection field altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14642
https://github.com/root-project/root/issues/14642:351,performance,disk,disk,351,"As discussed, it will be more difficult than #16356 to correctly implement the (recursive) collection writer, and probably require the use of a specialized sink where the writer writes to. Let's try a different approach:. - We map the leaf lists to a list of `std::vector`. Same page merging, in the vast majority of cases, will make sure that the on-disk size is comparable to the current importer result. - We drop the collection writer / collection field altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14642
https://github.com/root-project/root/pull/14645:12,integrability,messag,message,12,New warning message (for reference):. ![Screenshot from 2024-02-09 11-19-18](https://github.com/root-project/root/assets/29475282/cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:12,interoperability,messag,message,12,New warning message (for reference):. ![Screenshot from 2024-02-09 11-19-18](https://github.com/root-project/root/assets/29475282/cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:95,safety,compl,completely,95,> There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. Please list those here. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:95,security,compl,completely,95,> There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. Please list those here. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:82,usability,close,closed,82,> There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. Please list those here. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:145,availability,error,error,145,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:105,deployability,patch,patches,105,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:18,integrability,messag,messages,18,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:74,integrability,messag,message,74,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:151,integrability,messag,messages,151,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:263,integrability,messag,message,263,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:18,interoperability,messag,messages,18,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:74,interoperability,messag,message,74,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:151,interoperability,messag,messages,151,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:263,interoperability,messag,message,263,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:32,modifiability,reu,reusing,32,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:145,performance,error,error,145,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:105,safety,patch,patches,105,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:145,safety,error,error,145,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:105,security,patch,patches,105,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:138,usability,custom,custom,138,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:145,usability,error,error,145,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:14,integrability,messag,message,14,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:932,integrability,messag,message,932,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:14,interoperability,messag,message,14,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:932,interoperability,messag,message,932,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:188,security,jwt,jwt,188,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:94,usability,user,user-images,94,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:56,deployability,infrastructur,infrastructure,56,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:147,deployability,continu,continues,147,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:339,energy efficiency,core,core,339,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:416,integrability,repositor,repository,416,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:416,interoperability,repositor,repository,416,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:173,performance,time,time,173,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:39,safety,test,test,39,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:275,safety,test,test,275,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:354,safety,test,test,354,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:394,safety,test,test,394,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:39,testability,test,test,39,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:255,testability,coverag,coverage,255,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:275,testability,test,test,275,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:354,testability,test,test,354,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:394,testability,test,test,394,"> In principle LGTM; is it possible to test this in our infrastructure, to make sure the warning pops up where we expect it and that the ""feature"" continues to work for the time being? After removing the instances from `roottest`, we would otherwise lack coverage... Is this test sufficient? https://github.com/devajithvs/root/blob/master/core/metacling/test/TClingTests.cxx#L91. Or should the test go in `roottest` repository.?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:73,availability,error,errors,73,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:113,integrability,messag,message,113,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:113,interoperability,messag,message,113,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:73,performance,error,errors,73,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:34,safety,test,test,34,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:73,safety,error,errors,73,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:34,testability,test,test,34,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:73,usability,error,errors,73,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:. ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:4,availability,failur,failure,4,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:238,availability,failur,failures,238,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:4,deployability,fail,failure,4,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:40,deployability,modul,modules,40,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:91,deployability,depend,depend,91,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:238,deployability,fail,failures,238,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:267,deployability,modul,modules,267,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:295,deployability,fail,failing,295,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:67,energy efficiency,core,core,67,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:91,integrability,depend,depend,91,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:40,modifiability,modul,modules,40,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:91,modifiability,depend,depend,91,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:267,modifiability,modul,modules,267,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:4,performance,failur,failure,4,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:238,performance,failur,failures,238,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:4,reliability,fail,failure,4,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:83,reliability,doe,doesn,83,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:238,reliability,fail,failures,238,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:254,reliability,doe,doesn,254,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:295,reliability,fail,failing,295,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:40,safety,modul,modules,40,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:91,safety,depend,depend,91,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:267,safety,modul,modules,267,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:91,testability,depend,depend,91,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:32,availability,error,error,32,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:89,availability,failur,failure,89,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:89,deployability,fail,failure,89,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:139,energy efficiency,core,core-metacling-test-TClingTest,139,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:117,interoperability,architectur,architectures,117,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:32,performance,error,error,32,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:50,performance,disk,diskspace,50,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:89,performance,failur,failure,89,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:89,reliability,fail,failure,89,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:32,safety,error,error,32,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:84,safety,test,test,84,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:154,safety,test,test-TClingTest,154,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:84,testability,test,test,84,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:154,testability,test,test-TClingTest,154,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:32,usability,error,error,32,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:92,availability,failur,failures,92,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:92,deployability,fail,failures,92,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:121,deployability,modul,modules,121,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:149,deployability,fail,failing,149,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:121,modifiability,modul,modules,121,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:92,performance,failur,failures,92,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:92,reliability,fail,failures,92,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:108,reliability,doe,doesn,108,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:149,reliability,fail,failing,149,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:121,safety,modul,modules,121,"> can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether 🤞. No luck :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:45,deployability,modul,modules,45,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:72,deployability,build,build,72,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:133,deployability,fail,fails,133,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:193,deployability,configurat,configuration,193,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:193,integrability,configur,configuration,193,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:45,modifiability,modul,modules,45,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:193,modifiability,configur,configuration,193,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:133,reliability,fail,fails,133,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:45,safety,modul,modules,45,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:143,safety,test,test,143,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:193,security,configur,configuration,193,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:143,testability,test,test,143,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:398,safety,reme,remember,398,"> EDIT: Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. > . > https://its.cern.ch/jira/browse/ROOT-10309 https://its.cern.ch/jira/browse/ROOT-10593 https://its.cern.ch/jira/browse/ROOT-10284 https://its.cern.ch/jira/browse/ROOT-8828 https://its.cern.ch/jira/browse/ROOT-8538 https://its.cern.ch/jira/browse/ROOT-7970. Thanks for this!! Please remember to close the associated issues :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:71,usability,close,closed,71,"> EDIT: Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. > . > https://its.cern.ch/jira/browse/ROOT-10309 https://its.cern.ch/jira/browse/ROOT-10593 https://its.cern.ch/jira/browse/ROOT-10284 https://its.cern.ch/jira/browse/ROOT-8828 https://its.cern.ch/jira/browse/ROOT-8538 https://its.cern.ch/jira/browse/ROOT-7970. Thanks for this!! Please remember to close the associated issues :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:410,usability,close,close,410,"> EDIT: Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. > . > https://its.cern.ch/jira/browse/ROOT-10309 https://its.cern.ch/jira/browse/ROOT-10593 https://its.cern.ch/jira/browse/ROOT-10284 https://its.cern.ch/jira/browse/ROOT-8828 https://its.cern.ch/jira/browse/ROOT-8538 https://its.cern.ch/jira/browse/ROOT-7970. Thanks for this!! Please remember to close the associated issues :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:27,safety,reme,remember,27,> Thanks for this!! Please remember to close the associated issues :). I'm not sure if we can close these issues now or only when we completely remove the feature :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:133,safety,compl,completely,133,> Thanks for this!! Please remember to close the associated issues :). I'm not sure if we can close these issues now or only when we completely remove the feature :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:133,security,compl,completely,133,> Thanks for this!! Please remember to close the associated issues :). I'm not sure if we can close these issues now or only when we completely remove the feature :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:39,usability,close,close,39,> Thanks for this!! Please remember to close the associated issues :). I'm not sure if we can close these issues now or only when we completely remove the feature :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14645:94,usability,close,close,94,> Thanks for this!! Please remember to close the associated issues :). I'm not sure if we can close these issues now or only when we completely remove the feature :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14645
https://github.com/root-project/root/pull/14648:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:20,deployability,build,buildconfig,20,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:62,deployability,releas,releases,62,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:113,deployability,depend,dependencies,113,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:113,integrability,depend,dependencies,113,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:113,modifiability,depend,dependencies,113,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:113,safety,depend,dependencies,113,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:113,testability,depend,dependencies,113,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:109,deployability,build,build,109,"Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:134,deployability,releas,release,134,"Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:45,modifiability,pac,packages,45,"Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:71,usability,user,user,71,"Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:94,usability,user,users,94,"Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:111,deployability,build,build,111,"> Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:136,deployability,releas,release,136,"> Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:47,modifiability,pac,packages,47,"> Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:313,modifiability,pac,packages,313,"> Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:73,usability,user,user,73,"> Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:96,usability,user,users,96,"> Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:70,deployability,build,build,70,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:76,deployability,releas,released,76,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:40,interoperability,platform,platforms,40,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:85,interoperability,platform,platform,85,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:4,safety,test,testing,4,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:4,testability,test,testing,4,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:85,interoperability,platform,platform,85,"Also, it's not really math, but SOFIE is not built nor tested via GH actions, on any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:55,safety,test,tested,55,"Also, it's not really math, but SOFIE is not built nor tested via GH actions, on any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:55,testability,test,tested,55,"Also, it's not really math, but SOFIE is not built nor tested via GH actions, on any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:113,deployability,build,build,113,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:138,deployability,releas,release,138,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:470,interoperability,distribut,distributed,470,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:536,interoperability,distribut,distributed,536,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:561,interoperability,share,shared,561,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:49,modifiability,pac,packages,49,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:321,modifiability,pac,packages,321,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:495,modifiability,pac,packages,495,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:593,modifiability,responsibil,responsibility,593,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:75,usability,user,user,75,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:98,usability,user,users,98,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:615,usability,user,users,615,"> > Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release. > . > Ok, that's a decision that deviates from what was implemented in the past, I don't think this should just be done in a PR. Also it will be hugely confusing if the math packages only appear in alma9. If the new decision is to include them, that must be a global switch IMHO. In the past (prior to 6.30) we have always distributed the GPL Math packages in the binaries. They have been distributed as separated shared libraries, so it was the responsibility of the users to what to link",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:26,deployability,fail,failing,26,Why is Fedora and Windows failing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:26,reliability,fail,failing,26,Why is Fedora and Windows failing?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:139,deployability,build,buildconfig,139,"If we decide to go this way, it should be properly implemented: Options for all platforms should go into `.github/workflows/root-ci-config/buildconfig/global.txt`, the files touched right now are reserved for platform specific overrides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:80,interoperability,platform,platforms,80,"If we decide to go this way, it should be properly implemented: Options for all platforms should go into `.github/workflows/root-ci-config/buildconfig/global.txt`, the files touched right now are reserved for platform specific overrides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:209,interoperability,platform,platform,209,"If we decide to go this way, it should be properly implemented: Options for all platforms should go into `.github/workflows/root-ci-config/buildconfig/global.txt`, the files touched right now are reserved for platform specific overrides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:218,interoperability,specif,specific,218,"If we decide to go this way, it should be properly implemented: Options for all platforms should go into `.github/workflows/root-ci-config/buildconfig/global.txt`, the files touched right now are reserved for platform specific overrides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14648:114,usability,workflow,workflows,114,"If we decide to go this way, it should be properly implemented: Options for all platforms should go into `.github/workflows/root-ci-config/buildconfig/global.txt`, the files touched right now are reserved for platform specific overrides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14648
https://github.com/root-project/root/pull/14650:160,deployability,build,build,160,"Summary on mac x86-64 Core i7:. - With LLVM asserts: 1955 s. - Without LLVM asserts: 1656 s. It's 15% less, 5 minutes in absolute terms. For comparison, a full build takes about 40 minutes (w/o ccache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14650
https://github.com/root-project/root/pull/14650:22,energy efficiency,Core,Core,22,"Summary on mac x86-64 Core i7:. - With LLVM asserts: 1955 s. - Without LLVM asserts: 1656 s. It's 15% less, 5 minutes in absolute terms. For comparison, a full build takes about 40 minutes (w/o ccache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14650
https://github.com/root-project/root/pull/14650:44,testability,assert,asserts,44,"Summary on mac x86-64 Core i7:. - With LLVM asserts: 1955 s. - Without LLVM asserts: 1656 s. It's 15% less, 5 minutes in absolute terms. For comparison, a full build takes about 40 minutes (w/o ccache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14650
https://github.com/root-project/root/pull/14650:76,testability,assert,asserts,76,"Summary on mac x86-64 Core i7:. - With LLVM asserts: 1955 s. - Without LLVM asserts: 1656 s. It's 15% less, 5 minutes in absolute terms. For comparison, a full build takes about 40 minutes (w/o ccache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14650
https://github.com/root-project/root/pull/14654:45,safety,test,test,45,"@guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:148,safety,test,testRooFuncWrapper,148,"@guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:45,testability,test,test,45,"@guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:148,testability,test,testRooFuncWrapper,148,"@guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:47,safety,test,test,47,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:150,safety,test,testRooFuncWrapper,150,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:373,safety,test,test,373,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:426,safety,test,tests,426,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:489,safety,test,tests,489,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:47,testability,test,test,47,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:150,testability,test,testRooFuncWrapper,150,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:373,testability,test,test,373,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:426,testability,test,tests,426,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:489,testability,test,tests,489,"> @guitargeek, can you remind me which was the test case that we had disabled on Windows and we found out that it mostly works now? I thought it was `testRooFuncWrapper.cxx` but I could not find any windows-related ifdefs... You don't see any ifdefs because the whole file is excluded at the CMake level:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/CMakeLists.txt#L51. However, in the HistFactory tests, your are doing the right thing by only excluding the AD tests :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:91,deployability,fail,fails,91,I wanted to test out re-enabling this other test and only suppressing whichever part of it fails...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:91,reliability,fail,fails,91,I wanted to test out re-enabling this other test and only suppressing whichever part of it fails...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:12,safety,test,test,12,I wanted to test out re-enabling this other test and only suppressing whichever part of it fails...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:44,safety,test,test,44,I wanted to test out re-enabling this other test and only suppressing whichever part of it fails...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:12,testability,test,test,12,I wanted to test out re-enabling this other test and only suppressing whichever part of it fails...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:44,testability,test,test,44,I wanted to test out re-enabling this other test and only suppressing whichever part of it fails...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:132,availability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:337,availability,servic,services,337,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:541,availability,failur,failure,541,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:2,deployability,Build,Build,2,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:8,deployability,fail,failed,8,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:56,deployability,build,build,56,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:90,deployability,build,build,90,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:132,deployability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:184,deployability,build,build,184,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:217,deployability,Fail,Failing,217,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:337,deployability,servic,services,337,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:389,deployability,build,build,389,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:541,deployability,fail,failure,541,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:132,integrability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:337,integrability,servic,services,337,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:132,modifiability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:337,modifiability,servic,services,337,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:541,performance,failur,failure,541,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:8,reliability,fail,failed,8,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:217,reliability,Fail,Failing,217,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:541,reliability,fail,failure,541,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:225,safety,test,tests,225,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:268,safety,test,test,268,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:402,safety,test,testReport,402,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:443,safety,test,test,443,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:225,testability,test,tests,225,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:268,testability,test,test,268,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:402,testability,test,testReport,402,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:443,testability,test,test,443,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/console). > . > ### Failing tests:. > * [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195088/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/). @guitargeek, could you take a look at the failure and maybe suggest what needs suppressing on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:688,availability,failur,failure,688,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:235,deployability,fail,fails,235,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:688,deployability,fail,failure,688,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:71,interoperability,specif,specific,71,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:688,performance,failur,failure,688,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:235,reliability,fail,fails,235,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:688,reliability,fail,failure,688,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:24,safety,test,testRooFuncWrapper,24,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:80,safety,test,tests,80,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:155,safety,test,test,155,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:160,safety,test,testRooFuncWrapper,160,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:349,safety,test,testing,349,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:562,safety,test,testing,562,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:571,safety,Test,TestParamInfo,571,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:24,testability,test,testRooFuncWrapper,24,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:80,testability,test,tests,80,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:155,testability,test,test,155,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:160,testability,test,testRooFuncWrapper,160,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:349,testability,test,testing,349,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:562,testability,test,testing,562,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:571,testability,Test,TestParamInfo,571,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. ```c++. INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. testing::Values(param1, param2,. #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). param3,. #endif. param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. param12, param13),. [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. return paramInfo.param._name;. });. ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:729,availability,failur,failure,729,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:242,deployability,fail,fails,242,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:729,deployability,fail,failure,729,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:73,interoperability,specif,specific,73,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:729,performance,failur,failure,729,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:242,reliability,fail,fails,242,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:729,reliability,fail,failure,729,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:26,safety,test,testRooFuncWrapper,26,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:82,safety,test,tests,82,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:156,safety,test,test,156,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:161,safety,test,testRooFuncWrapper,161,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:366,safety,test,testing,366,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:591,safety,test,testing,591,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:600,safety,Test,TestParamInfo,600,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:26,testability,test,testRooFuncWrapper,26,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:82,testability,test,tests,82,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:156,testability,test,test,156,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:161,testability,test,testRooFuncWrapper,161,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:366,testability,test,testing,366,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:591,testability,test,testing,591,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:600,testability,Test,TestParamInfo,600,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:877,testability,understand,understand,877,"> It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests: https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. > . > In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:. > . > ```c++. > INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,. > testing::Values(param1, param2,. > #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS). > param3,. > #endif. > param4, param5, param6, param7, param8, param8p1, param9, param10, param11,. > param12, param13),. > [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {. > return paramInfo.param._name;. > });. > ```. > . > By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR. I do not understand the change but I've added it. Let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:36,availability,failur,failures,36,"I do not see how the GitHub actions failures are related to this PR. Let’s move forward, jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:36,deployability,fail,failures,36,"I do not see how the GitHub actions failures are related to this PR. Let’s move forward, jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:100,energy efficiency,green,green,100,"I do not see how the GitHub actions failures are related to this PR. Let’s move forward, jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:36,performance,failur,failures,36,"I do not see how the GitHub actions failures are related to this PR. Let’s move forward, jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14654:36,reliability,fail,failures,36,"I do not see how the GitHub actions failures are related to this PR. Let’s move forward, jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14654
https://github.com/root-project/root/pull/14655:107,deployability,automat,automatically,107,"Since this change is now also in upstream CPyCppyy, we don't need to merge this PR. We will get the change automatically with the syncronization PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14655
https://github.com/root-project/root/pull/14655:107,testability,automat,automatically,107,"Since this change is now also in upstream CPyCppyy, we don't need to merge this PR. We will get the change automatically with the syncronization PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14655
https://github.com/root-project/root/pull/14657:8,availability,error,error,8,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:312,availability,monitor,monitoring-and-troubleshooting-workflows,312,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1082,availability,down,downloaded,1082,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1232,availability,down,downloads,1232,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:104,deployability,build,build,104,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:181,deployability,artifact,artifact,181,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:216,deployability,log,logs,216,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:232,deployability,artifact,artifact,232,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:312,deployability,monitor,monitoring-and-troubleshooting-workflows,312,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:368,deployability,log,logging,368,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:396,deployability,log,logging,396,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:405,deployability,Artifact,Artifact,405,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:429,deployability,Contain,Container,429,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:443,deployability,artifact,artifact,443,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:478,deployability,Releas,Release,478,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:640,deployability,artifact,artifact,640,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:657,deployability,Artifact,Artifact,657,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1207,deployability,artifact,artifact,1207,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1223,deployability,artifact,artifact-downloads,1223,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1244,deployability,Artifact,Artifact,1244,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1278,deployability,Releas,Release,1278,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:312,energy efficiency,monitor,monitoring-and-troubleshooting-workflows,312,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1022,energy efficiency,reduc,reduce,1022,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:14,integrability,messag,message,14,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:14,interoperability,messag,message,14,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:769,interoperability,specif,specified,769,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:8,performance,error,error,8,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1046,performance,time,time,1046,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:312,reliability,monitor,monitoring-and-troubleshooting-workflows,312,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:8,safety,error,error,8,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:216,safety,log,logs,216,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:312,safety,monitor,monitoring-and-troubleshooting-workflows,312,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:368,safety,log,logging,368,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:396,safety,log,logging,396,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:422,safety,valid,valid,422,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:453,safety,Test,Test,453,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1253,safety,Test,Test,1253,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:216,security,log,logs,216,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:368,security,log,logging,368,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:396,security,log,logging,396,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1109,security,sign,significantly,1109,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:216,testability,log,logs,216,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:312,testability,monitor,monitoring-and-troubleshooting-workflows,312,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:368,testability,log,logging,368,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:396,testability,log,logging,396,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:453,testability,Test,Test,453,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:1253,testability,Test,Test,1253,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:8,usability,error,error,8,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:79,usability,statu,status,79,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14657:343,usability,workflow,workflows,343,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:. ```. With the provided path, there will be 1 file uploaded. Starting artifact upload. For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging. Artifact name is valid! Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s). Total size of all the files uploaded is 661143 bytes. File upload process has finished. Finalizing the artifact upload. Artifact has been finalized. All files have been successfully uploaded! The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes. The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded! ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14657
https://github.com/root-project/root/pull/14660:2,deployability,updat,updated,2,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:102,deployability,updat,update,102,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:2,safety,updat,updated,2,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:102,safety,updat,update,102,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:144,safety,review,review,144,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:2,security,updat,updated,2,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:102,security,updat,update,102,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14660:144,testability,review,review,144,"I updated the PR with a small example and explaining the possibility to use non-qualifying names. The update is in a separate commit for easier review, but will be squashed on merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14660
https://github.com/root-project/root/pull/14661:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14661
https://github.com/root-project/root/pull/14662:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:19,testability,verif,verify,19,"We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:459,availability,error,error,459,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:695,deployability,version,version,695,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:465,integrability,messag,message,465,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:695,integrability,version,version,695,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:465,interoperability,messag,message,465,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:695,modifiability,version,version,695,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:459,performance,error,error,459,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:669,reliability,doe,doesn,669,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:459,safety,error,error,459,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:640,safety,compl,complies,640,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:640,security,compl,complies,640,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:21,testability,verif,verify,21,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:459,usability,error,error,459,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:467,availability,error,error,467,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:723,deployability,version,version,723,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:473,integrability,messag,message,473,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:723,integrability,version,version,723,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:473,interoperability,messag,message,473,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:723,modifiability,version,version,723,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:467,performance,error,error,467,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:697,reliability,doe,doesn,697,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:467,safety,error,error,467,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:668,safety,compl,complies,668,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:668,security,compl,complies,668,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:23,testability,verif,verify,23,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/pull/14662:467,usability,error,error,467,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... > . > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14662
https://github.com/root-project/root/issues/14664:21,availability,error,error,21,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:167,availability,error,error,167,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:15,deployability,Build,Build,15,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1516,deployability,version,version,1516,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1558,deployability,version,version,1558,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1616,energy efficiency,model,model,1616,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1516,integrability,version,version,1516,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1558,integrability,version,version,1558,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:76,interoperability,Platform,Platforms,76,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:93,interoperability,platform,platform,93,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:986,interoperability,Platform,Platforms,986,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1003,interoperability,platform,platform,1003,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1308,interoperability,Platform,Platforms,1308,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1325,interoperability,platform,platform,1325,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1425,modifiability,paramet,parameter,1425,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1516,modifiability,version,version,1516,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1558,modifiability,version,version,1558,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:21,performance,error,error,21,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:57,performance,Content,Contents,57,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:151,performance,memor,memory,151,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:167,performance,error,error,167,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:967,performance,Content,Contents,967,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1061,performance,memor,memory,1061,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1289,performance,Content,Contents,1289,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1383,performance,memor,memory,1383,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:21,safety,error,error,21,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:167,safety,error,error,167,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1616,security,model,model,1616,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:21,usability,error,error,21,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:151,usability,memor,memory,151,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:167,usability,error,error,167,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:328,usability,User,Users,328,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:673,usability,User,Users,673,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1061,usability,memor,memory,1061,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1190,usability,user,user-declared,1190,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:1383,usability,memor,memory,1383,"More details:. Build error. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'. __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());. ^~~. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here. return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));. ^. /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor. std::unique_ptr<RFieldBase::RDeleter> fDeleter;. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor. unique_ptr(unique_ptr&& __u) _NOEXCEPT. ^. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here. __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a). ^. ```. Compiler version:. ```. % clang -v. Homebrew clang version 16.0.1. Target: x86_64-apple-darwin20.6.0. Thread model: posix. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:91,interoperability,platform,platform,91,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:190,interoperability,platform,platform,190,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:221,reliability,doe,does,221,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:5,usability,support,support,5,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/issues/14664:175,usability,support,supporting,175,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14664
https://github.com/root-project/root/pull/14665:44,interoperability,conflict,conflict,44,Thanks! Side note: A potential future merge conflict may arise with: https://github.com/root-project/root/pull/14600,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14665
https://github.com/root-project/root/pull/14666:0,availability,Failur,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14666
https://github.com/root-project/root/pull/14666:0,deployability,Fail,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14666
https://github.com/root-project/root/pull/14666:0,performance,Failur,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14666
https://github.com/root-project/root/pull/14666:0,reliability,Fail,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14666
https://github.com/root-project/root/pull/14666:314,interoperability,standard,standard,314,"First of all FLT_MAX is equivalent to std::numeric_limits<float>::max(), so if you are using double numbers you should not use the maximum for the float. . I think, in general, it would be better to use in C++ std::numeric_limits. I am not 100% sure if the macro definitions FLT_MAX or DBL_MAX are part now of the standard in C++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14666
https://github.com/root-project/root/pull/14668:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14668
https://github.com/root-project/root/pull/14668:10,deployability,build,build,10,phsft-bot build on ROOT-ubuntu2204/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14668
https://github.com/root-project/root/pull/14669:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:27,safety,test,test,27,The newly added `std::set` test exposed a new issue: `std::set` is not working in windows PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:32,security,expos,exposed,32,The newly added `std::set` test exposed a new issue: `std::set` is not working in windows PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:27,testability,test,test,27,The newly added `std::set` test exposed a new issue: `std::set` is not working in windows PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:0,availability,Failur,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:0,deployability,Fail,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:0,performance,Failur,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14669:0,reliability,Fail,Failures,0,"Failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14669
https://github.com/root-project/root/pull/14671:140,deployability,Updat,Update,140,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:35,reliability,doe,does,35,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:140,safety,Updat,Update,140,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:104,security,Modif,ModifiedUpdated,104,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:140,security,Updat,Update,140,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:152,security,Modif,Modified,152,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:16,testability,understand,understanding,16,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:71,usability,user,user,71,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:223,usability,document,documentation,223,"Just for my own understanding, how does this fix the linked issue? The user is responsible for calling `ModifiedUpdated()` instead of just `Update` or `Modified`? This means they have to change their code, so we would need documentation and a tutorial for that. Let me know if I misunderstood perhaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:90,deployability,Updat,Update,90,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:219,deployability,Updat,Update,219,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:55,integrability,buffer,buffers,55,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:288,performance,perform,perform,288,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:90,safety,Updat,Update,90,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:154,safety,reme,remember,154,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:219,safety,Updat,Update,219,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:90,security,Updat,Update,90,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:219,security,Updat,Update,219,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:238,security,Modif,Modified,238,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:288,usability,perform,perform,288,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:359,usability,user,user,359,"On Mac, an extra ""ProcessEvent"" is needed to flush the buffers. It can not be included in Update() (many long discussions with Timur about that. I do not remember the details but that was the conclusion). As very often Update() goes with Modified(), the idea was to group them and on Mac perform the extra ProcessEvent. That's the best we can do to allow the user code to be the same on different machines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:171,usability,user,user,171,"Right, so this means this PR is adding a new method that allows to address the cases such as the one reported by the linked issue, but it's not a drop-in replacement, the user needs to actively know that the new method exists and use it. All clear now, thanks for the explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:242,usability,clear,clear,242,"Right, so this means this PR is adding a new method that allows to address the cases such as the one reported by the linked issue, but it's not a drop-in replacement, the user needs to actively know that the new method exists and use it. All clear now, thanks for the explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:35,availability,failur,failures,35,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:35,deployability,fail,failures,35,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:35,performance,failur,failures,35,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:35,reliability,fail,failures,35,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:30,safety,test,test,30,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:30,testability,test,test,30,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:92,usability,close,close,92,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/pull/14671:27,availability,ping,ping,27,"Hi @couet, @linev , gentle ping, can this PR be merged ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14671
https://github.com/root-project/root/issues/14672:12,deployability,instal,install,12,"How did you install Python 3.10? I see it's a static library, is that the default on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:14,deployability,instal,install,14,"> How did you install Python 3.10? I see it's a static library, is that the default on macOS? No, it is not a default, I'm using `conda` to manage my environments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:140,deployability,manag,manage,140,"> How did you install Python 3.10? I see it's a static library, is that the default on macOS? No, it is not a default, I'm using `conda` to manage my environments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:140,energy efficiency,manag,manage,140,"> How did you install Python 3.10? I see it's a static library, is that the default on macOS? No, it is not a default, I'm using `conda` to manage my environments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:140,safety,manag,manage,140,"> How did you install Python 3.10? I see it's a static library, is that the default on macOS? No, it is not a default, I'm using `conda` to manage my environments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:91,interoperability,platform,platform,91,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:190,interoperability,platform,platform,190,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:221,reliability,doe,does,221,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:5,usability,support,support,5,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/issues/14672:175,usability,support,supporting,175,"With support for MacOS 11 being dropped since late 2023, we are not running our CI on that platform anymore, so related issues are probably best discarded as we don't foresee supporting the platform any longer than Apple does. Sorry for the inconvenience.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14672
https://github.com/root-project/root/pull/14674:82,usability,document,documentation,82,"Thanks!! It's not related, but maybe you can also fix this copy-paste typo in the documentation:. https://github.com/root-project/root/blob/master/hist/hist/inc/THnSparse.h#L110. it should say Add, not Set",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14674
https://github.com/root-project/root/issues/14675:23,safety,safe,safety,23,"OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:45,safety,reme,remember,45,"OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:158,safety,test,test,158,"OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:158,testability,test,test,158,"OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:465,performance,time,timeline,465,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:25,safety,safe,safety,25,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:47,safety,reme,remember,47,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:179,safety,test,test,179,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:399,safety,test,test-chain,399,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:179,testability,test,test,179,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/issues/14675:399,testability,test,test-chain,399,"> OK, I un-commented the safety check, I don't remember the reason why I disabled it in the first place. Thanks for this. > Please open a separate issue if needed with a macro to test for the random sequence. In principle, `gRandom->Rndm()` is used for sampling, which should produce the same sequence if not seeded elsewhere. Will do. This is low priority for us as we found some workaround in our test-chain, but the issue is kept open in our tracker with a long timeline and assigned to me, so probably the kind we dig out during the summer activity dip.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14675
https://github.com/root-project/root/pull/14676:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:254,availability,slo,slowdowns,254,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:271,energy efficiency,alloc,allocations,271,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:216,integrability,discover,discovering,216,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:228,integrability,rout,routine,228,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:216,interoperability,discover,discovering,216,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:264,performance,memor,memory,264,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:254,reliability,slo,slowdowns,254,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:248,safety,avoid,avoid,248,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:299,security,access,accesses,299,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:216,usability,discov,discovering,216,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:264,usability,memor,memory,264,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:18,integrability,event,eventually,18,"There is a lookup eventually in `TClassEdit::GetNormalizedName`, but this is not happening in the hot loop, so I believe we can bear it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:98,safety,hot,hot,98,"There is a lookup eventually in `TClassEdit::GetNormalizedName`, but this is not happening in the hot loop, so I believe we can bear it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:24,safety,test,tests,24,I agree. Let's have the tests fixed though before approving and merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:24,testability,test,tests,24,I agree. Let's have the tests fixed though before approving and merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14676:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14676
https://github.com/root-project/root/pull/14677:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:35,deployability,updat,updated,35,I suspect the tests may need to be updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:14,safety,test,tests,14,I suspect the tests may need to be updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:35,safety,updat,updated,35,I suspect the tests may need to be updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:35,security,updat,updated,35,I suspect the tests may need to be updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:14,testability,test,tests,14,I suspect the tests may need to be updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:26,safety,test,tests,26,Hi @Nowakus I started the tests but leave all comments to @jblomer . One thing I can say already now is that a random file seems to be part of the changes at the moment and should perhaps be removed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14677:26,testability,test,tests,26,Hi @Nowakus I started the tests but leave all comments to @jblomer . One thing I can say already now is that a random file seems to be part of the changes at the moment and should perhaps be removed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14677
https://github.com/root-project/root/pull/14681:10,deployability,build,build,10,phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14681
https://github.com/root-project/root/pull/14681:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14681
https://github.com/root-project/root/pull/14684:14,deployability,modul,modules,14,"> C++ runtime modules are now used by default, so this macro can be removed. That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:200,interoperability,platform,platforms,200,"> C++ runtime modules are now used by default, so this macro can be removed. That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:300,interoperability,platform,platform,300,"> C++ runtime modules are now used by default, so this macro can be removed. That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:14,modifiability,modul,modules,14,"> C++ runtime modules are now used by default, so this macro can be removed. That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:14,safety,modul,modules,14,"> C++ runtime modules are now used by default, so this macro can be removed. That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:152,usability,support,support,152,"> C++ runtime modules are now used by default, so this macro can be removed. That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:56,deployability,build,builds,56,This is a very nice improvement. Another issue could be builds without modules enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:71,deployability,modul,modules,71,This is a very nice improvement. Another issue could be builds without modules enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:71,modifiability,modul,modules,71,This is a very nice improvement. Another issue could be builds without modules enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:71,safety,modul,modules,71,This is a very nice improvement. Another issue could be builds without modules enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:16,deployability,modul,modules,16,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:374,deployability,updat,updated,374,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:208,interoperability,platform,platforms,208,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:308,interoperability,platform,platform,308,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:16,modifiability,modul,modules,16,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:16,safety,modul,modules,16,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:374,safety,updat,updated,374,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:374,security,updat,updated,374,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:160,usability,support,support,160,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Thanks for the clarification! I've updated the PR and commit description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:128,availability,servic,services,128,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:59,deployability,build,builds,59,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:74,deployability,modul,modules,74,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:128,deployability,servic,services,128,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:180,deployability,build,build,180,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:128,integrability,servic,services,128,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:74,modifiability,modul,modules,74,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:128,modifiability,servic,services,128,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:74,safety,modul,modules,74,> This is a very nice improvements. Another issue could be builds without modules enabled. This also works fine: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195260/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:16,deployability,modul,modules,16,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:352,deployability,build,building,352,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:208,interoperability,platform,platforms,208,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:308,interoperability,platform,platform,308,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:16,modifiability,modul,modules,16,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:16,safety,modul,modules,16,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:160,usability,support,support,160,"> > C++ runtime modules are now used by default, so this macro can be removed. > . > That's only part of the story: It's not used on Windows (yet) and we still support disabling `runtime_cxxmodules` on other platforms. But the tutorials seem to work even after removing the `R__LOAD_LIBRARY` (unless some CI platform proves us wrong now). Are the bots building non-runtime_cxxmodules with ROOT7 on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2204/nortcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:64,testability,simpl,simplifying,64,Please note that this is a double edge sword. On one hand it is simplifying the tutorials in a way that works well. On the other hand it removes any demonstration (or did we keep at least one?) of how to use `R__LOAD_LIBRARY` that is necessary in case the library is (intentionally) not on the `LD_LIBRARY_PATH`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:64,usability,simpl,simplifying,64,Please note that this is a double edge sword. On one hand it is simplifying the tutorials in a way that works well. On the other hand it removes any demonstration (or did we keep at least one?) of how to use `R__LOAD_LIBRARY` that is necessary in case the library is (intentionally) not on the `LD_LIBRARY_PATH`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:571,interoperability,specif,specific,571,"> > On the other hand it removes any demonstration (or did we keep at least one?) of how to use `R__LOAD_LIBRARY` that is necessary in case the library is (intentionally) not on the `LD_LIBRARY_PATH`. > . > I don't see how that's the case: The argument to `R__LOAD_LIBRARY` is a library name. How would ROOT find it if it's not in `LD_LIBRARY_PATH`? An example would be of a user-created library, e.g. as demonstrated by https://github.com/root-project/root/blob/master/tutorials/tree/tree4.C. In principle, we could add or tweak an existing tutorial to demonstrate this specific use case, but I don't believe we should use `R__LOAD_LIBRARY` everywhere when it's not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:375,usability,user,user-created,375,"> > On the other hand it removes any demonstration (or did we keep at least one?) of how to use `R__LOAD_LIBRARY` that is necessary in case the library is (intentionally) not on the `LD_LIBRARY_PATH`. > . > I don't see how that's the case: The argument to `R__LOAD_LIBRARY` is a library name. How would ROOT find it if it's not in `LD_LIBRARY_PATH`? An example would be of a user-created library, e.g. as demonstrated by https://github.com/root-project/root/blob/master/tutorials/tree/tree4.C. In principle, we could add or tweak an existing tutorial to demonstrate this specific use case, but I don't believe we should use `R__LOAD_LIBRARY` everywhere when it's not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14684:79,interoperability,specif,specific,79,"> In principle, we could add or tweak an existing tutorial to demonstrate this specific use case, but I don't believe we should use R__LOAD_LIBRARY everywhere when it's not necessary. I totally agree with this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14684
https://github.com/root-project/root/pull/14685:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:55,performance,time,time,55,Running this through CI won't do much; the interesting time will be once this is merged and the CI images are rebuilt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:30,integrability,contract,contract,30,This change would clarify the contract with our users: @vepadulano would you agree?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:30,interoperability,contract,contract,30,This change would clarify the contract with our users: @vepadulano would you agree?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:48,usability,user,users,48,This change would clarify the contract with our users: @vepadulano would you agree?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:198,safety,review,reviewers,198,"> Hello @lobis! Can you pls rebase the PR on top of ROOT `master`? Thanks! Done. Sorry about the spam, I did the rebasing quickly and modified a bunch of unintended files which triggered these many reviewers (I cannot remove them).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:134,security,modif,modified,134,"> Hello @lobis! Can you pls rebase the PR on top of ROOT `master`? Thanks! Done. Sorry about the spam, I did the rebasing quickly and modified a bunch of unintended files which triggered these many reviewers (I cannot remove them).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14685:198,testability,review,reviewers,198,"> Hello @lobis! Can you pls rebase the PR on top of ROOT `master`? Thanks! Done. Sorry about the spam, I did the rebasing quickly and modified a bunch of unintended files which triggered these many reviewers (I cannot remove them).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14685
https://github.com/root-project/root/pull/14686:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14686
https://github.com/root-project/root/pull/14686:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14686
https://github.com/root-project/root/pull/14686:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14686
https://github.com/root-project/root/pull/14686:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14686
https://github.com/root-project/root/pull/14687:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14687
https://github.com/root-project/root/pull/14688:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14688
https://github.com/root-project/root/pull/14688:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14688
https://github.com/root-project/root/issues/14689:71,energy efficiency,draw,drawing,71,"I cannot reproduce problem. Maybe @vepadulano can check. To get proper drawing, one should do:. ```. h1 = ROOT.TH1F(""h1"",""h1"",100,-10,10). h1.FillRandom(""gaus"",1000). c1 = ROOT.TCanvas(""c1"",""c1"",600,400). h1.Draw(). c1.Draw(). c1.Print(""test.pdf""). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:208,energy efficiency,Draw,Draw,208,"I cannot reproduce problem. Maybe @vepadulano can check. To get proper drawing, one should do:. ```. h1 = ROOT.TH1F(""h1"",""h1"",100,-10,10). h1.FillRandom(""gaus"",1000). c1 = ROOT.TCanvas(""c1"",""c1"",600,400). h1.Draw(). c1.Draw(). c1.Print(""test.pdf""). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:219,energy efficiency,Draw,Draw,219,"I cannot reproduce problem. Maybe @vepadulano can check. To get proper drawing, one should do:. ```. h1 = ROOT.TH1F(""h1"",""h1"",100,-10,10). h1.FillRandom(""gaus"",1000). c1 = ROOT.TCanvas(""c1"",""c1"",600,400). h1.Draw(). c1.Draw(). c1.Print(""test.pdf""). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:237,safety,test,test,237,"I cannot reproduce problem. Maybe @vepadulano can check. To get proper drawing, one should do:. ```. h1 = ROOT.TH1F(""h1"",""h1"",100,-10,10). h1.FillRandom(""gaus"",1000). c1 = ROOT.TCanvas(""c1"",""c1"",600,400). h1.Draw(). c1.Draw(). c1.Print(""test.pdf""). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:237,testability,test,test,237,"I cannot reproduce problem. Maybe @vepadulano can check. To get proper drawing, one should do:. ```. h1 = ROOT.TH1F(""h1"",""h1"",100,-10,10). h1.FillRandom(""gaus"",1000). c1 = ROOT.TCanvas(""c1"",""c1"",600,400). h1.Draw(). c1.Draw(). c1.Print(""test.pdf""). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:193,energy efficiency,draw,drawing,193,"I guess, one can close problem. `%reset -f` does not cleanup ROOT, all histograms and canvases remains. If executing correct macro again, one just get warnings about canvas with same name, but drawing works as expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:44,reliability,doe,does,44,"I guess, one can close problem. `%reset -f` does not cleanup ROOT, all histograms and canvases remains. If executing correct macro again, one just get warnings about canvas with same name, but drawing works as expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:17,usability,close,close,17,"I guess, one can close problem. `%reset -f` does not cleanup ROOT, all histograms and canvases remains. If executing correct macro again, one just get warnings about canvas with same name, but drawing works as expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/issues/14689:11,energy efficiency,draw,drawing,11,Issue with drawing new canvas with same name probably was resolved by https://github.com/root-project/root/pull/15943,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14689
https://github.com/root-project/root/pull/14690:176,integrability,schema,schema,176,"Ah, one more thing before merging: could you perhaps squash your two commits? Unless there's a clear motivation to keep them separate, but it appears to be both are related to schema compliance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:183,integrability,complian,compliance,183,"Ah, one more thing before merging: could you perhaps squash your two commits? Unless there's a clear motivation to keep them separate, but it appears to be both are related to schema compliance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:183,safety,compl,compliance,183,"Ah, one more thing before merging: could you perhaps squash your two commits? Unless there's a clear motivation to keep them separate, but it appears to be both are related to schema compliance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:183,security,compl,compliance,183,"Ah, one more thing before merging: could you perhaps squash your two commits? Unless there's a clear motivation to keep them separate, but it appears to be both are related to schema compliance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:95,usability,clear,clear,95,"Ah, one more thing before merging: could you perhaps squash your two commits? Unless there's a clear motivation to keep them separate, but it appears to be both are related to schema compliance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:17,deployability,version,version,17,Do we know which version of `clang-format` supports this `.clang-format` syntax?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:17,integrability,version,version,17,Do we know which version of `clang-format` supports this `.clang-format` syntax?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:35,interoperability,format,format,35,Do we know which version of `clang-format` supports this `.clang-format` syntax?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:65,interoperability,format,format,65,Do we know which version of `clang-format` supports this `.clang-format` syntax?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:17,modifiability,version,version,17,Do we know which version of `clang-format` supports this `.clang-format` syntax?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:43,usability,support,supports,43,Do we know which version of `clang-format` supports this `.clang-format` syntax?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:19,deployability,version,version,19,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:165,deployability,updat,updated,165,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:228,deployability,version,version,228,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:324,deployability,version,version,324,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:409,deployability,version,version,409,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:451,deployability,version,version,451,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:19,integrability,version,version,19,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:228,integrability,version,version,228,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:281,integrability,schema,schema,281,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:324,integrability,version,version,324,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:409,integrability,version,version,409,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:451,integrability,version,version,451,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:37,interoperability,format,format,37,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:67,interoperability,format,format,67,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:402,interoperability,format,format,402,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:438,interoperability,incompatib,incompatible,438,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:474,interoperability,format,format,474,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:19,modifiability,version,version,19,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:228,modifiability,version,version,228,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:324,modifiability,version,version,324,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:409,modifiability,version,version,409,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:451,modifiability,version,version,451,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:165,safety,updat,updated,165,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:165,security,updat,updated,165,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:45,usability,support,supports,45,"> Do we know which version of `clang-format` supports this `.clang-format` syntax? I checked in https://clang.llvm.org/docs/ClangFormatStyleOptions.html and all the updated options (and likely every other option) should work on version >3.8, which is really old. I don't think the schema for a given option changes from one version to another so this should work for both very old and the latest clang-format version. . In the case of an incompatible version I think `clang-format` just ignores the option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:101,availability,error,error,101,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:7,interoperability,format,format,7,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:89,interoperability,format,format,89,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:127,modifiability,scal,scalar,127,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:101,performance,error,error,101,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:33,safety,compl,complains,33,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:101,safety,error,error,101,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:185,safety,test,tested,185,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:33,security,compl,complains,33,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:185,testability,test,tested,185,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:101,usability,error,error,101,`clang-format` 14.0 in our check complains now:. ```. /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. Enabled: false. ^. ```. Unfortunately this wasn't tested with `[skip-ci]`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:111,availability,error,error,111,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:12641,availability,operat,operators,12641,"3cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026amp;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003cli\u003e\n \u003cp\u003e\u003cb\u003ebool PadOperators\u003c/b\u003e Only for \u003cb\u003eAlignConsecutiveAssignments\u003c/b\u003e. Whether short assignment\n operators are left-padded to the same length as long ones in order to\n put all assignment operators to the right of the left hand side.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003etrue:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:12732,availability,operat,operators,12732,"r: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026amp;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003cli\u003e\n \u003cp\u003e\u003cb\u003ebool PadOperators\u003c/b\u003e Only for \u003cb\u003eAlignConsecutiveAssignments\u003c/b\u003e. Whether short assignment\n operators are left-padded to the same length as long ones in order to\n put all assignment operators to the right of the left hand side.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003etrue:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:1473,deployability,configurat,configuration,1473,"3c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003eAcrossEmptyLines\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e:\u003c/span\u003e\n \u003cspan style\u003d\""color: #cc7832;\""\u003eEnabled\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:15517,deployability,version,versions,15517,"u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003c/ul\u003e"",. ""anyOf"": [. {. ""type"": ""object"",. ""properties"": {. ""Enabled"": {. ""type"": ""boolean"". },. ""AcrossEmptyLines"": {. ""type"": ""boolean"". },. ""AcrossComments"": {. ""type"": ""boolean"". },. ""AlignCompound"": {. ""type"": ""boolean"". },. ""PadOperators"": {. ""type"": ""boolean"". }. }. },. {. ""type"": ""string"",. ""enum"": [. ""None"",. ""Consecutive"",. ""AcrossEmptyLines"",. ""AcrossComments"",. ""AcrossEmptyLinesAndComments"". ]. }. ]. },. ```. But maybe the object option was added later on. Taking another look I think this option should just be `None`. I opened a PR with a fix: https://github.com/root-project/root/pull/14741. Hopefully after these changes it remains compatible with much older clang-format versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:219,integrability,schema,schema,219,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:427,integrability,sub,sub,427,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:1473,integrability,configur,configuration,1473,"3c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003eAcrossEmptyLines\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e:\u003c/span\u003e\n \u003cspan style\u003d\""color: #cc7832;\""\u003eEnabled\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:15517,integrability,version,versions,15517,"u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003c/ul\u003e"",. ""anyOf"": [. {. ""type"": ""object"",. ""properties"": {. ""Enabled"": {. ""type"": ""boolean"". },. ""AcrossEmptyLines"": {. ""type"": ""boolean"". },. ""AcrossComments"": {. ""type"": ""boolean"". },. ""AlignCompound"": {. ""type"": ""boolean"". },. ""PadOperators"": {. ""type"": ""boolean"". }. }. },. {. ""type"": ""string"",. ""enum"": [. ""None"",. ""Consecutive"",. ""AcrossEmptyLines"",. ""AcrossComments"",. ""AcrossEmptyLinesAndComments"". ]. }. ]. },. ```. But maybe the object option was added later on. Taking another look I think this option should just be `None`. I opened a PR with a fix: https://github.com/root-project/root/pull/14741. Hopefully after these changes it remains compatible with much older clang-format versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:9,interoperability,format,format,9,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:99,interoperability,format,format,99,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:409,interoperability,format,format,409,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:506,interoperability,format,formattings,506,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:1608,interoperability,compatib,compatibility,1608,"tyle\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003eAcrossEmptyLines\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e:\u003c/span\u003e\n \u003cspan style\u003d\""color: #cc7832;\""\u003eEnabled\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003etrue\u003c/span\u003e\n \u003cspan style\u003d\""color: #cc7832;\""\u003eAcrossEmptyLines\u003c/span\u003e\u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:15477,interoperability,compatib,compatible,15477,"u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003c/ul\u003e"",. ""anyOf"": [. {. ""type"": ""object"",. ""properties"": {. ""Enabled"": {. ""type"": ""boolean"". },. ""AcrossEmptyLines"": {. ""type"": ""boolean"". },. ""AcrossComments"": {. ""type"": ""boolean"". },. ""AlignCompound"": {. ""type"": ""boolean"". },. ""PadOperators"": {. ""type"": ""boolean"". }. }. },. {. ""type"": ""string"",. ""enum"": [. ""None"",. ""Consecutive"",. ""AcrossEmptyLines"",. ""AcrossComments"",. ""AcrossEmptyLinesAndComments"". ]. }. ]. },. ```. But maybe the object option was added later on. Taking another look I think this option should just be `None`. I opened a PR with a fix: https://github.com/root-project/root/pull/14741. Hopefully after these changes it remains compatible with much older clang-format versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:15510,interoperability,format,format,15510,"u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003c/ul\u003e"",. ""anyOf"": [. {. ""type"": ""object"",. ""properties"": {. ""Enabled"": {. ""type"": ""boolean"". },. ""AcrossEmptyLines"": {. ""type"": ""boolean"". },. ""AcrossComments"": {. ""type"": ""boolean"". },. ""AlignCompound"": {. ""type"": ""boolean"". },. ""PadOperators"": {. ""type"": ""boolean"". }. }. },. {. ""type"": ""string"",. ""enum"": [. ""None"",. ""Consecutive"",. ""AcrossEmptyLines"",. ""AcrossComments"",. ""AcrossEmptyLinesAndComments"". ]. }. ]. },. ```. But maybe the object option was added later on. Taking another look I think this option should just be `None`. I opened a PR with a fix: https://github.com/root-project/root/pull/14741. Hopefully after these changes it remains compatible with much older clang-format versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:137,modifiability,scal,scalar,137,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:1473,modifiability,configur,configuration,1473,"3c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003eAcrossEmptyLines\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e:\u003c/span\u003e\n \u003cspan style\u003d\""color: #cc7832;\""\u003eEnabled\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:15517,modifiability,version,versions,15517,"u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003e\u003ci\u003efalse:\u003c/i\u003e\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #a9b7c6;\""\u003ebbb \u0026gt;\u0026gt;\u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003c/li\u003e\n \u003c/ul\u003e"",. ""anyOf"": [. {. ""type"": ""object"",. ""properties"": {. ""Enabled"": {. ""type"": ""boolean"". },. ""AcrossEmptyLines"": {. ""type"": ""boolean"". },. ""AcrossComments"": {. ""type"": ""boolean"". },. ""AlignCompound"": {. ""type"": ""boolean"". },. ""PadOperators"": {. ""type"": ""boolean"". }. }. },. {. ""type"": ""string"",. ""enum"": [. ""None"",. ""Consecutive"",. ""AcrossEmptyLines"",. ""AcrossComments"",. ""AcrossEmptyLinesAndComments"". ]. }. ]. },. ```. But maybe the object option was added later on. Taking another look I think this option should just be `None`. I opened a PR with a fix: https://github.com/root-project/root/pull/14741. Hopefully after these changes it remains compatible with much older clang-format versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:111,performance,error,error,111,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:35,safety,compl,complains,35,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:111,safety,error,error,111,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:196,safety,compl,complied,196,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:35,security,compl,complains,35,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:196,security,compl,complied,196,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:1473,security,configur,configuration,1473,"3c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003eAcrossEmptyLines\u003c/span\u003e\n\n\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMacros\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e:\u003c/span\u003e\n \u003cspan style\u003d\""color: #cc7832;\""\u003eEnabled\u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003e: \u003c/span\u003e\u003cspan style\u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14690:111,usability,error,error,111,"> `clang-format` 14.0 in our check complains now:. > . > ```. > /home/runner/work/root/root/.clang-format:5:3: error: unknown enumerated scalar. > Enabled: false. > ^. > ```. Sorry about that, It complied with my local schema:. ```. ""AlignConsecutiveAssignments"": {. ""title"": ""Style of aligning consecutive assignments."",. ""x-intellij-html-description"": ""\u003csub style\u003d\""color:gray\""\u003e(since clang-format 3.8)\u003c/sub\u003e\n \u003cp\u003e\u003cb\u003eConsecutive\u003c/b\u003e will result in formattings like:\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ea \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e1\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003eint \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003esomelongname \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e2\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\n\u003cspan style\u003d\""color: #cc7832;\""\u003edouble \u003c/span\u003e\u003cspan style\u003d\""color: #a9b7c6;\""\u003ec \u003d \u003c/span\u003e\u003cspan style\u003d\""color: #6897bb;\""\u003e3\u003c/span\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003e;\u003c/span\u003e\u003c/pre\u003e\n \u003cp\u003eNested configuration flags:\u003c/p\u003e\n \u003cp\u003eAlignment options.\u003c/p\u003e\n \u003cp\u003eThey can also be read as a whole for compatibility. The choices are:\n - None\n - Consecutive\n - AcrossEmptyLines\n - AcrossComments\n - AcrossEmptyLinesAndComments\u003c/p\u003e\n \u003cp\u003eFor example, to align across empty lines and not across comments, either\n of these work.\u003c/p\u003e\n \u003cpre style\u003d\u0027background-color: 2b2b2b\u0027\u003e\u003cspan style\u003d\""color: #cc7832;\""\u003eAlignConsecutiveMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14690
https://github.com/root-project/root/pull/14691:49,safety,test,tests,49,"hopefully, all comments addressed. Let's see the tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14691
https://github.com/root-project/root/pull/14691:49,testability,test,tests,49,"hopefully, all comments addressed. Let's see the tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14691
https://github.com/root-project/root/pull/14692:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:41,deployability,fail,fail,41,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:217,deployability,updat,update,217,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:41,reliability,fail,fail,41,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:30,safety,test,tests,30,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:217,safety,updat,update,217,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:228,safety,test,tests,228,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:217,security,updat,update,217,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:30,testability,test,tests,30,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:228,testability,test,tests,228,@vepadulano - the RDF Display tests will fail to compare the strings with floats due to different precision between `std::to_string` and `cling::printValue`. I'll leave it to you to decide what you want to do: either update the tests or change the precision when floats are converted to a string.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:35,safety,test,tests,35,"@vepadulano - I think, now all the tests should pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:35,testability,test,tests,35,"@vepadulano - I think, now all the tests should pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:40,safety,test,tests,40,"@hahnjo - could you, please trigger the tests? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:40,testability,test,tests,40,"@hahnjo - could you, please trigger the tests? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14692:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14692
https://github.com/root-project/root/pull/14694:183,availability,error,error,183,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:23,deployability,updat,update,23,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:148,deployability,fail,fail,148,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:189,integrability,messag,message,189,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:189,interoperability,messag,message,189,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:183,performance,error,error,183,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:148,reliability,fail,fail,148,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:23,safety,updat,update,23,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:69,safety,test,test,69,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:183,safety,error,error,183,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:23,security,updat,update,23,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:69,testability,test,test,69,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14694:183,usability,error,error,183,"> Thanks for this nice update. Would it be perhaps possible to add a test? Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14694
https://github.com/root-project/root/pull/14695:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14695:129,integrability,translat,translate,129,"Thanks for this very nice improvement. I like the idea of doing the same of a widely adopted tool. Do you think it's possible to translate this to Macos and, perhaps more difficult, Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14695:129,interoperability,translat,translate,129,"Thanks for this very nice improvement. I like the idea of doing the same of a widely adopted tool. Do you think it's possible to translate this to Macos and, perhaps more difficult, Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14695:93,usability,tool,tool,93,"Thanks for this very nice improvement. I like the idea of doing the same of a widely adopted tool. Do you think it's possible to translate this to Macos and, perhaps more difficult, Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14695:9,energy efficiency,current,currently,9,MacOS is currently WIP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14695:189,energy efficiency,current,currently,189,What are the expected values for mac? htop uses `used = active + wired` (https://github.com/htop-dev/htop/blob/2503239d9fb453b5d67d3b33690c5a8e914bc58c/darwin/Platform.c#L305) while we are currently using `used = active + inactive + wired`. . Should we keep Used as-is and have `fMemAvailable = fMemTotal - (active + wired)` (i.e. `fMemAvailable = inactive + free`) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14695:159,interoperability,Platform,Platform,159,What are the expected values for mac? htop uses `used = active + wired` (https://github.com/htop-dev/htop/blob/2503239d9fb453b5d67d3b33690c5a8e914bc58c/darwin/Platform.c#L305) while we are currently using `used = active + inactive + wired`. . Should we keep Used as-is and have `fMemAvailable = fMemTotal - (active + wired)` (i.e. `fMemAvailable = inactive + free`) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14695
https://github.com/root-project/root/pull/14699:65,usability,document,documentation,65,"Thanks for the PR!! I'd suggest also to add the following in the documentation of TSystem::CompileMacro:. - Default behavior is to remove libraries after closing ROOT, ie to call TSystem::CleanCompiledMacros. - The default behavior of .L script.C+ is the opposite one, to leave things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14699
https://github.com/root-project/root/pull/14699:116,usability,behavi,behavior,116,"Thanks for the PR!! I'd suggest also to add the following in the documentation of TSystem::CompileMacro:. - Default behavior is to remove libraries after closing ROOT, ie to call TSystem::CleanCompiledMacros. - The default behavior of .L script.C+ is the opposite one, to leave things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14699
https://github.com/root-project/root/pull/14699:223,usability,behavi,behavior,223,"Thanks for the PR!! I'd suggest also to add the following in the documentation of TSystem::CompileMacro:. - Default behavior is to remove libraries after closing ROOT, ie to call TSystem::CleanCompiledMacros. - The default behavior of .L script.C+ is the opposite one, to leave things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14699
https://github.com/root-project/root/pull/14700:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14700
https://github.com/root-project/root/pull/14700:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14700
https://github.com/root-project/root/pull/14700:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14700
https://github.com/root-project/root/pull/14700:38,energy efficiency,current,current,38,"Ok, I need to rethink this, since the current change looses command elements after code key. Part of the problem is code fragment can include either curly braces or quotes, so finding the end of the key isn't quite as trivial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14700
https://github.com/root-project/root/pull/14700:60,usability,command,command,60,"Ok, I need to rethink this, since the current change looses command elements after code key. Part of the problem is code fragment can include either curly braces or quotes, so finding the end of the key isn't quite as trivial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14700
https://github.com/root-project/root/pull/14700:5,usability,close,close,5,I'll close this and open a new PR when I find a better solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14700
https://github.com/root-project/root/pull/14702:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14702
https://github.com/root-project/root/pull/14702:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14702
https://github.com/root-project/root/pull/14702:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14702
https://github.com/root-project/root/pull/14702:91,safety,test,tests,91,@lmoneta @kjvbrt it seems to me we are very near to the fix: what is missing to make these tests succeed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14702
https://github.com/root-project/root/pull/14702:91,testability,test,tests,91,@lmoneta @kjvbrt it seems to me we are very near to the fix: what is missing to make these tests succeed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14702
https://github.com/root-project/root/issues/14710:52,deployability,upgrad,upgrade,52,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:82,deployability,build,build,82,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:332,deployability,fail,failed,332,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:52,modifiability,upgrad,upgrade,52,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:16,reliability,doe,doesn,16,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:332,reliability,fail,failed,332,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:389,safety,valid,valid,389,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:322,testability,Assert,Assertion,322,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/issues/14710:209,usability,help,help,209,"Note this still doesn't work after yesterdays cppyy upgrade:. ```txt. C:\root-dev\build\x64\debug>python. Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> s = ROOT.std.set['int'](). Assertion failed: Loc.isValid() && ""point of instantiation must be valid!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/AST/DeclTemplate.h, line 2010. *** Break *** abort. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14710
https://github.com/root-project/root/pull/14712:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14712
https://github.com/root-project/root/pull/14712:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14712
https://github.com/root-project/root/pull/14713:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:348,integrability,event,event-,348,"Dear Vincenzo,. That's great, thank you for all your help! Cheers,. Daniel. On Tue, 27 Feb 2024 at 13:21, Vincenzo Eduardo Padulano <. ***@***.***> wrote:. > Merged #14713 <https://github.com/root-project/root/pull/14713> into. > master. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14713#event-11934071904>, or. > unsubscribe. > <https://github.com/notifications/unsubscribe-auth/APZZFPHYZAW2ZKTEERUFCI3YVWXTXAVCNFSM6AAAAABDIBYBJSVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJRHEZTIMBXGE4TANA>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:626,integrability,Messag,Message,626,"Dear Vincenzo,. That's great, thank you for all your help! Cheers,. Daniel. On Tue, 27 Feb 2024 at 13:21, Vincenzo Eduardo Padulano <. ***@***.***> wrote:. > Merged #14713 <https://github.com/root-project/root/pull/14713> into. > master. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14713#event-11934071904>, or. > unsubscribe. > <https://github.com/notifications/unsubscribe-auth/APZZFPHYZAW2ZKTEERUFCI3YVWXTXAVCNFSM6AAAAABDIBYBJSVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJRHEZTIMBXGE4TANA>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:626,interoperability,Messag,Message,626,"Dear Vincenzo,. That's great, thank you for all your help! Cheers,. Daniel. On Tue, 27 Feb 2024 at 13:21, Vincenzo Eduardo Padulano <. ***@***.***> wrote:. > Merged #14713 <https://github.com/root-project/root/pull/14713> into. > master. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14713#event-11934071904>, or. > unsubscribe. > <https://github.com/notifications/unsubscribe-auth/APZZFPHYZAW2ZKTEERUFCI3YVWXTXAVCNFSM6AAAAABDIBYBJSVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJRHEZTIMBXGE4TANA>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:435,security,auth,auth,435,"Dear Vincenzo,. That's great, thank you for all your help! Cheers,. Daniel. On Tue, 27 Feb 2024 at 13:21, Vincenzo Eduardo Padulano <. ***@***.***> wrote:. > Merged #14713 <https://github.com/root-project/root/pull/14713> into. > master. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14713#event-11934071904>, or. > unsubscribe. > <https://github.com/notifications/unsubscribe-auth/APZZFPHYZAW2ZKTEERUFCI3YVWXTXAVCNFSM6AAAAABDIBYBJSVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJRHEZTIMBXGE4TANA>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14713:53,usability,help,help,53,"Dear Vincenzo,. That's great, thank you for all your help! Cheers,. Daniel. On Tue, 27 Feb 2024 at 13:21, Vincenzo Eduardo Padulano <. ***@***.***> wrote:. > Merged #14713 <https://github.com/root-project/root/pull/14713> into. > master. >. > —. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/pull/14713#event-11934071904>, or. > unsubscribe. > <https://github.com/notifications/unsubscribe-auth/APZZFPHYZAW2ZKTEERUFCI3YVWXTXAVCNFSM6AAAAABDIBYBJSVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJRHEZTIMBXGE4TANA>. > . > You are receiving this because you were mentioned.Message ID:. > ***@***.***>. >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14713
https://github.com/root-project/root/pull/14714:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:302,availability,avail,available,302,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:1000,availability,avail,available,1000,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:526,energy efficiency,current,currently,526,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:281,reliability,pra,practice,281,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:302,reliability,availab,available,302,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:1000,reliability,availab,available,1000,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:1075,reliability,doe,doesn,1075,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:302,safety,avail,available,302,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:1000,safety,avail,available,1000,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:302,security,availab,available,302,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:1000,security,availab,available,1000,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:491,usability,document,document,491,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:640,usability,document,documentation,640,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:307,usability,user,user,307,"Thanks @vepadulano for the comment. I agree with your proposal. I went for an approach with addition of new options because I found `SetCompression{Algorithm,Level}` and assumed that it's desirable to have that level of flexibility. But I think since `SetCompressionSettings` takes care of both, the better user experience is to have single option with better documentation. Hence, I'll revert the changes from b5200e148be517112143fcb5e6d489dbc2d86dd4 and improve documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:312,usability,experien,experience,312,"Thanks @vepadulano for the comment. I agree with your proposal. I went for an approach with addition of new options because I found `SetCompression{Algorithm,Level}` and assumed that it's desirable to have that level of flexibility. But I think since `SetCompressionSettings` takes care of both, the better user experience is to have single option with better documentation. Hence, I'll revert the changes from b5200e148be517112143fcb5e6d489dbc2d86dd4 and improve documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:360,usability,document,documentation,360,"Thanks @vepadulano for the comment. I agree with your proposal. I went for an approach with addition of new options because I found `SetCompression{Algorithm,Level}` and assumed that it's desirable to have that level of flexibility. But I think since `SetCompressionSettings` takes care of both, the better user experience is to have single option with better documentation. Hence, I'll revert the changes from b5200e148be517112143fcb5e6d489dbc2d86dd4 and improve documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14714:464,usability,document,documentation,464,"Thanks @vepadulano for the comment. I agree with your proposal. I went for an approach with addition of new options because I found `SetCompression{Algorithm,Level}` and assumed that it's desirable to have that level of flexibility. But I think since `SetCompressionSettings` takes care of both, the better user experience is to have single option with better documentation. Hence, I'll revert the changes from b5200e148be517112143fcb5e6d489dbc2d86dd4 and improve documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14714
https://github.com/root-project/root/pull/14716:160,security,team,team,160,I am not totally convinced that allowing misplaced whitespace at the end of the code block of a read rule is worth using regex. That decision is up to the ROOT team :) .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:203,availability,failur,failures,203,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:269,availability,servic,services,269,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:203,deployability,fail,failures,203,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:269,deployability,servic,services,269,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:47,energy efficiency,load,loading,47,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:63,energy efficiency,model,model,63,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:269,integrability,servic,services,269,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:269,modifiability,servic,services,269,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:47,performance,load,loading,47,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:203,performance,failur,failures,203,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:203,reliability,fail,failures,203,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:399,safety,avoid,avoid,399,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:63,security,model,model,63,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue. https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:210,availability,robust,robust,210,"Hi @lmoneta ,. Sorry for that. . To be honest I was not too happy with using regex either, but that was the only thing I found that works and I limited it to case where the rule was mistyped. . I feel the most robust solution may be to not change the original code, but make having no whitespace between } and "" a requirement. . Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:210,reliability,robust,robust,210,"Hi @lmoneta ,. Sorry for that. . To be honest I was not too happy with using regex either, but that was the only thing I found that works and I limited it to case where the rule was mistyped. . I feel the most robust solution may be to not change the original code, but make having no whitespace between } and "" a requirement. . Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:210,safety,robust,robust,210,"Hi @lmoneta ,. Sorry for that. . To be honest I was not too happy with using regex either, but that was the only thing I found that works and I limited it to case where the rule was mistyped. . I feel the most robust solution may be to not change the original code, but make having no whitespace between } and "" a requirement. . Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14716:145,usability,user,user,145,"We already had this problem with `std::regexp` see https://github.com/root-project/root/pull/13674#issuecomment-1733208800. This will affect any user of PyROOT and pytorch (if one imports ROOT before torch). . Can you change the code to remove the whitespace to not use regexp, for example with something like: . ```. std::string str = "" a b c "";. char rep = 0;. auto isSpaceChar = [](char ch) { return std::isspace(static_cast<unsigned char>(ch)); };. std::replace_if(str.begin(),str.end(),isSpaceChar, rep);. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14716
https://github.com/root-project/root/pull/14717:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14717
https://github.com/root-project/root/pull/14718:15,deployability,fail,failed,15,re-running the failed jobs to check the results of the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14718
https://github.com/root-project/root/pull/14718:15,reliability,fail,failed,15,re-running the failed jobs to check the results of the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14718
https://github.com/root-project/root/pull/14718:55,safety,test,tests,55,re-running the failed jobs to check the results of the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14718
https://github.com/root-project/root/pull/14718:55,testability,test,tests,55,re-running the failed jobs to check the results of the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14718
https://github.com/root-project/root/pull/14719:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14719:48,usability,person,personal,48,"Thank you for the additional information. In my personal opinion it would make more sense to have splines non-owning, however the decision is not up to me. To summarize, you suggest changing all the spline classes so they always copy the graph passed by a pointer in the constructor?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14719:340,deployability,version,version,340,"Yes, I would do it for TSpline1 and TSpline2. Note that TSpline3 and TSpline5 from the hist library used the passed TGraph just to get the points. . A possible alternative, which I would even prefer more, it would be to store in TSpline1 and TSpline2 just the data points (e.g. as 2 std::vector's). Nobody uses these classes for I/O (class version is 0), so it should be fine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14719:340,integrability,version,version,340,"Yes, I would do it for TSpline1 and TSpline2. Note that TSpline3 and TSpline5 from the hist library used the passed TGraph just to get the points. . A possible alternative, which I would even prefer more, it would be to store in TSpline1 and TSpline2 just the data points (e.g. as 2 std::vector's). Nobody uses these classes for I/O (class version is 0), so it should be fine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14719:340,modifiability,version,version,340,"Yes, I would do it for TSpline1 and TSpline2. Note that TSpline3 and TSpline5 from the hist library used the passed TGraph just to get the points. . A possible alternative, which I would even prefer more, it would be to store in TSpline1 and TSpline2 just the data points (e.g. as 2 std::vector's). Nobody uses these classes for I/O (class version is 0), so it should be fine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14719:329,performance,I/O,I/O,329,"Yes, I would do it for TSpline1 and TSpline2. Note that TSpline3 and TSpline5 from the hist library used the passed TGraph just to get the points. . A possible alternative, which I would even prefer more, it would be to store in TSpline1 and TSpline2 just the data points (e.g. as 2 std::vector's). Nobody uses these classes for I/O (class version is 0), so it should be fine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14719:192,usability,prefer,prefer,192,"Yes, I would do it for TSpline1 and TSpline2. Note that TSpline3 and TSpline5 from the hist library used the passed TGraph just to get the points. . A possible alternative, which I would even prefer more, it would be to store in TSpline1 and TSpline2 just the data points (e.g. as 2 std::vector's). Nobody uses these classes for I/O (class version is 0), so it should be fine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14719
https://github.com/root-project/root/pull/14720:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2204/nortcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14720
https://github.com/root-project/root/pull/14722:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14722
https://github.com/root-project/root/pull/14726:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:29,deployability,fail,failing,29,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:60,deployability,updat,updated,60,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:29,reliability,fail,failing,29,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:37,safety,test,tests,37,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:60,safety,updat,updated,60,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:60,security,updat,updated,60,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:37,testability,test,tests,37,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:21,deployability,build,builds,21,"thanks, launched the builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14726:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14726
https://github.com/root-project/root/pull/14727:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14727
https://github.com/root-project/root/pull/14727:29,interoperability,format,format,29,Thanks. I've just run `clang-format` locally: 3b364c1e87e3e00b9f9f0534d14cca7fb461dd71,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14727
https://github.com/root-project/root/pull/14728:171,availability,restor,restore,171,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:497,availability,recov,recover,497,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:497,deployability,recov,recover,497,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:748,deployability,log,logic,748,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:474,modifiability,exten,extend,474,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:730,modifiability,deco,decoding,730,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:191,performance,memor,memory,191,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:4,reliability,doe,does,4,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:171,reliability,restor,restore,171,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:497,reliability,recov,recover,497,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:581,reliability,pra,practically,581,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:497,safety,recov,recover,497,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:748,safety,log,logic,748,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:230,security,hack,hack,230,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:497,security,recov,recover,497,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:748,security,log,logic,748,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:748,testability,log,logic,748,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:191,usability,memor,memory,191,"why does this need to be its own field type when we can in principle just store these as in a `0x04` (Byte) column and go from there? Shouldn't it be application's job to restore bytes to in-memory representation if they need to ""hack"" it to store unsupported objects in RNTuple? IMHO adding this field is opening up to potential abuse of this feature and I can imagine experiments decide to store everything in 0x05 fields and basically void the purpose of RNTuple to some extend (i.e. you can't recover the data unless you're exactly using this experiment's C++ framework). More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:214,availability,state,statement,214,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:174,deployability,log,logic,174,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:254,energy efficiency,current,current,254,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:214,integrability,state,statement,214,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:156,modifiability,deco,decoding,156,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:7,reliability,pra,practically,7,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:174,safety,log,logic,174,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:174,security,log,logic,174,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:174,testability,log,logic,174,"> More practically speaking, anything in filed 0x05 is impossible to read for 3rd party libraries unless they have the C++ class definitions as well as the decoding streamer logic? That is actually too strict of a statement. It is true for the PR in its current form, but the unsplit field is not considered finished yet. We will also add the streamer info so that everything remains self-described.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:169,interoperability,specif,specified,169,">We will also add the streamer info so that everything remains self-described. while this is good for functionality wise, it also makes the RNTuple spec no longer fully specified? unless we can include TStreamer and stuff as part of the spec, and also document how to go from Streamer to in-memory objects, which IIUC menns including all the T{Axis, Label, etc.} into spec as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:291,performance,memor,memory,291,">We will also add the streamer info so that everything remains self-described. while this is good for functionality wise, it also makes the RNTuple spec no longer fully specified? unless we can include TStreamer and stuff as part of the spec, and also document how to go from Streamer to in-memory objects, which IIUC menns including all the T{Axis, Label, etc.} into spec as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:252,usability,document,document,252,">We will also add the streamer info so that everything remains self-described. while this is good for functionality wise, it also makes the RNTuple spec no longer fully specified? unless we can include TStreamer and stuff as part of the spec, and also document how to go from Streamer to in-memory objects, which IIUC menns including all the T{Axis, Label, etc.} into spec as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14728:291,usability,memor,memory,291,">We will also add the streamer info so that everything remains self-described. while this is good for functionality wise, it also makes the RNTuple spec no longer fully specified? unless we can include TStreamer and stuff as part of the spec, and also document how to go from Streamer to in-memory objects, which IIUC menns including all the T{Axis, Label, etc.} into spec as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14728
https://github.com/root-project/root/pull/14730:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:116,usability,minim,minimal,116,@atolosadelgado : we are 1 typo away from merging the PR and closing the issue. Do you have a moment to address the minimal comment which was made?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:10,deployability,build,building,10,"triggered building and testing. If everything goes well, for me the PR is ready to be merged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:23,safety,test,testing,23,"triggered building and testing. If everything goes well, for me the PR is ready to be merged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:23,testability,test,testing,23,"triggered building and testing. If everything goes well, for me the PR is ready to be merged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:20,reliability,doe,doesn,20,"@vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:221,safety,avoid,avoid,221,"@vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:128,usability,cancel,cancel,128,"@vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:22,reliability,doe,doesn,22,"> @vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that... Thank you for noticing. I have just sync the branch, I hope now the tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:223,safety,avoid,avoid,223,"> @vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that... Thank you for noticing. I have just sync the branch, I hope now the tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:305,safety,test,tests,305,"> @vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that... Thank you for noticing. I have just sync the branch, I hope now the tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:305,testability,test,tests,305,"> @vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that... Thank you for noticing. I have just sync the branch, I hope now the tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14730:130,usability,cancel,cancel,130,"> @vepadulano this PR doesn't have Philippe's fix and therefore blocks the `mac12` and `mac13` nodes (until I notice and manually cancel the jobs). If this needs more CI runs, please consider rebasing on latest `master` to avoid that... Thank you for noticing. I have just sync the branch, I hope now the tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14730
https://github.com/root-project/root/pull/14731:81,modifiability,variab,variable,81,"Changes LGTM, but Windows isn't happy. I suppose this is because of the `static` variable... @bellenot can you help here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:111,usability,help,help,111,"Changes LGTM, but Windows isn't happy. I suppose this is because of the `static` variable... @bellenot can you help here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:83,modifiability,variab,variable,83,"> Changes LGTM, but Windows isn't happy. I suppose this is because of the `static` variable... @bellenot can you help here? I'll take a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:113,usability,help,help,113,"> Changes LGTM, but Windows isn't happy. I suppose this is because of the `static` variable... @bellenot can you help here? I'll take a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:31,interoperability,Bind,BindRawPtr,31,"Right. Move the definition of `BindRawPtr` from the header to the source. E.g.:. In `tree\ntuple\v7\inc\ROOT\RField.hxx`:. ```c++. void BindRawPtr(void *rawPtr);. ```. And in `tree\ntuple\v7\src\RField.cxx`. ```c++. //------------------------------------------------------------------------------. std::shared_ptr<void> ROOT::Experimental::RFieldBase::RValue::fgRawPtrCtrlBlock = nullptr;. void ROOT::Experimental::RFieldBase::RValue::BindRawPtr(void *rawPtr). {. fObjPtr = std::shared_ptr<void>(fgRawPtrCtrlBlock, rawPtr);. }. //------------------------------------------------------------------------------. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:136,interoperability,Bind,BindRawPtr,136,"Right. Move the definition of `BindRawPtr` from the header to the source. E.g.:. In `tree\ntuple\v7\inc\ROOT\RField.hxx`:. ```c++. void BindRawPtr(void *rawPtr);. ```. And in `tree\ntuple\v7\src\RField.cxx`. ```c++. //------------------------------------------------------------------------------. std::shared_ptr<void> ROOT::Experimental::RFieldBase::RValue::fgRawPtrCtrlBlock = nullptr;. void ROOT::Experimental::RFieldBase::RValue::BindRawPtr(void *rawPtr). {. fObjPtr = std::shared_ptr<void>(fgRawPtrCtrlBlock, rawPtr);. }. //------------------------------------------------------------------------------. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:435,interoperability,Bind,BindRawPtr,435,"Right. Move the definition of `BindRawPtr` from the header to the source. E.g.:. In `tree\ntuple\v7\inc\ROOT\RField.hxx`:. ```c++. void BindRawPtr(void *rawPtr);. ```. And in `tree\ntuple\v7\src\RField.cxx`. ```c++. //------------------------------------------------------------------------------. std::shared_ptr<void> ROOT::Experimental::RFieldBase::RValue::fgRawPtrCtrlBlock = nullptr;. void ROOT::Experimental::RFieldBase::RValue::BindRawPtr(void *rawPtr). {. fObjPtr = std::shared_ptr<void>(fgRawPtrCtrlBlock, rawPtr);. }. //------------------------------------------------------------------------------. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:31,modifiability,Bind,BindRawPtr,31,"Right. Move the definition of `BindRawPtr` from the header to the source. E.g.:. In `tree\ntuple\v7\inc\ROOT\RField.hxx`:. ```c++. void BindRawPtr(void *rawPtr);. ```. And in `tree\ntuple\v7\src\RField.cxx`. ```c++. //------------------------------------------------------------------------------. std::shared_ptr<void> ROOT::Experimental::RFieldBase::RValue::fgRawPtrCtrlBlock = nullptr;. void ROOT::Experimental::RFieldBase::RValue::BindRawPtr(void *rawPtr). {. fObjPtr = std::shared_ptr<void>(fgRawPtrCtrlBlock, rawPtr);. }. //------------------------------------------------------------------------------. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:136,modifiability,Bind,BindRawPtr,136,"Right. Move the definition of `BindRawPtr` from the header to the source. E.g.:. In `tree\ntuple\v7\inc\ROOT\RField.hxx`:. ```c++. void BindRawPtr(void *rawPtr);. ```. And in `tree\ntuple\v7\src\RField.cxx`. ```c++. //------------------------------------------------------------------------------. std::shared_ptr<void> ROOT::Experimental::RFieldBase::RValue::fgRawPtrCtrlBlock = nullptr;. void ROOT::Experimental::RFieldBase::RValue::BindRawPtr(void *rawPtr). {. fObjPtr = std::shared_ptr<void>(fgRawPtrCtrlBlock, rawPtr);. }. //------------------------------------------------------------------------------. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:435,modifiability,Bind,BindRawPtr,435,"Right. Move the definition of `BindRawPtr` from the header to the source. E.g.:. In `tree\ntuple\v7\inc\ROOT\RField.hxx`:. ```c++. void BindRawPtr(void *rawPtr);. ```. And in `tree\ntuple\v7\src\RField.cxx`. ```c++. //------------------------------------------------------------------------------. std::shared_ptr<void> ROOT::Experimental::RFieldBase::RValue::fgRawPtrCtrlBlock = nullptr;. void ROOT::Experimental::RFieldBase::RValue::BindRawPtr(void *rawPtr). {. fObjPtr = std::shared_ptr<void>(fgRawPtrCtrlBlock, rawPtr);. }. //------------------------------------------------------------------------------. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:105,performance,perform,performance-critical,105,"Thank you! I made the modification. Still not clear to me, why it is necessary. But this is not a (very) performance-critical path, so it's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:22,security,modif,modification,22,"Thank you! I made the modification. Still not clear to me, why it is necessary. But this is not a (very) performance-critical path, so it's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:46,usability,clear,clear,46,"Thank you! I made the modification. Still not clear to me, why it is necessary. But this is not a (very) performance-critical path, so it's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:105,usability,perform,performance-critical,105,"Thank you! I made the modification. Still not clear to me, why it is necessary. But this is not a (very) performance-critical path, so it's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:48,deployability,version,version,48,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:66,energy efficiency,alloc,allocate,66,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:25,integrability,messag,message,25,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:48,integrability,version,version,48,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:25,interoperability,messag,message,25,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:48,modifiability,version,version,48,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:77,security,control,control,77,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14731:77,testability,control,control,77,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14731
https://github.com/root-project/root/pull/14733:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14733
https://github.com/root-project/root/pull/14733:57,safety,review,review,57,"@guitargeek this MR seems to fix all open issues, please review and merge at your convenience!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14733
https://github.com/root-project/root/pull/14733:57,testability,review,review,57,"@guitargeek this MR seems to fix all open issues, please review and merge at your convenience!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14733
https://github.com/root-project/root/pull/14734:11,deployability,build,build,11,@phsft-bot build just on macos.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14734
https://github.com/root-project/root/pull/14734:11,deployability,build,build,11,@phsft-bot build just on mac12arm/cxx20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14734
https://github.com/root-project/root/pull/14740:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14740
https://github.com/root-project/root/pull/14742:67,safety,test,test-testRooRealL,67,"Hi @guitargeek, this seems to have broken `gtest-roofit-roofitcore-test-testRooRealL` on `mac14arm`, as shown in the new CI. Can you please have a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14742
https://github.com/root-project/root/pull/14742:67,testability,test,test-testRooRealL,67,"Hi @guitargeek, this seems to have broken `gtest-roofit-roofitcore-test-testRooRealL` on `mac14arm`, as shown in the new CI. Can you please have a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14742
https://github.com/root-project/root/pull/14747:4,availability,failur,failure,4,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:54,availability,servic,services,54,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:4,deployability,fail,failure,4,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:54,deployability,servic,services,54,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:106,deployability,build,build,106,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:54,integrability,servic,services,54,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:54,modifiability,servic,services,54,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:4,performance,failur,failure,4,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:4,reliability,fail,failure,4,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:119,safety,test,testReport,119,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:119,testability,test,testReport,119,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:6,availability,failur,failure,6,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:56,availability,servic,services,56,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:6,deployability,fail,failure,6,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:56,deployability,servic,services,56,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:108,deployability,build,build,108,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:56,integrability,servic,services,56,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:56,modifiability,servic,services,56,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:6,performance,failur,failure,6,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:6,reliability,fail,failure,6,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:121,safety,test,testReport,121,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:121,testability,test,testReport,121,> The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising. Shall we do a binary diff to investigate?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:68,deployability,releas,release,68,"This is the result of m2->Map(""forcomp"");. for 6.30.04 ubu22 binary release (left) vs this branch ubu22 debug build (right). ![image](https://github.com/root-project/root/assets/10653970/9069407e-74cf-4444-b57f-b7b3247dea1d).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:110,deployability,build,build,110,"This is the result of m2->Map(""forcomp"");. for 6.30.04 ubu22 binary release (left) vs this branch ubu22 debug build (right). ![image](https://github.com/root-project/root/assets/10653970/9069407e-74cf-4444-b57f-b7b3247dea1d).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:753,deployability,Build,BuildRealData,753,"It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. . . ```. 1 TCling::GetClassSharedLibs TCling.cxx 7040 0x7f404bbfcd9b . 2 TClingLookupHelper__ExistingTypeCheck TCling.cxx 997 0x7f404bbe07f0 . 3 ROOT::TMetaUtils::TClingLookupHelper::ExistingTypeCheck TClingUtils.cxx 506 0x7f404b9ec5d4 . 4 TClassEdit::GetNormalizedName TClassEdit.cxx 897 0x7f4053e0d34c . 5 TClass::GetClass TClass.cxx 3055 0x7f4053e330ba . 6 TClass::GetClass TClass.cxx 2970 0x7f4053e32d07 . 7 TBuildRealData::Inspect TClass.cxx 850 0x7f4053e28f60 . 8 TCling::InspectMembers TCling.cxx 2926 0x7f404bbeb0c9 . 9 TClass::CallShowMembers TClass.cxx 2225 0x7f4053e306b9 . 10 TClass::BuildRealData TClass.cxx 2080 0x7f4053e2fb1a . 11 TStreamerInfo::Build TStreamerInfo.cxx 307 0x7f4052ee7510 . 12 TClass::GetStreamerInfoImpl TClass.cxx 4669 0x7f4053e3924b . 13 TClass::GetStreamerInfo TClass.cxx 4629 0x7f4053e38fa8 . 14 TBufferFile::WriteClassBuffer TBufferFile.cxx 3625 0x7f4052e0ea05 . 15 TTree::Streamer TTree.cxx 9626 0x7f4039614d97 . 16 TKey::TKey TKey.cxx 249 0x7f4052ed5cda . 17 TFile::CreateKey TFile.cxx 1031 0x7f4052e96a51 . 18 TDirectoryFile::WriteTObject TDirectoryFile.cxx 1970 0x7f4052e80db2 . 19 TObject::Write TObject.cxx 869 0x7f4053d43f02 . 20 TTree::Write TTree.cxx 9737 0x7f40396152e2 . 21 TTree::Write TTree.cxx 9746 0x7f4039615324 . 22 TDirectoryFile::Write TDirectoryFile.cxx 1849 0x7f4052e8079f . 23 TFile::Write TFile.cxx 2436 0x7f4052e9bb23 . 24 execCheckClusterRange execCheckClusterRange.C 74 0x7f40535a9a33 . 25 ?? 0x7f405383602d . 26 ?? 0x7ffcb5d81320 . 27 ?? 0x561b0b74a930 . 28 ?? 0x7ffcb5d81320 . 29 cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value *) const 0x7f404beb4788 . 30 cling::Interpreter::RunFunction(clang::FunctionDecl const *, cling::Value *) 0x7f404be3787c . 31 cling::Interpreter::EvaluateInternal(std::string const&, cling::CompilationOptions, cling::Value *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:818,deployability,Build,Build,818,"It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. . . ```. 1 TCling::GetClassSharedLibs TCling.cxx 7040 0x7f404bbfcd9b . 2 TClingLookupHelper__ExistingTypeCheck TCling.cxx 997 0x7f404bbe07f0 . 3 ROOT::TMetaUtils::TClingLookupHelper::ExistingTypeCheck TClingUtils.cxx 506 0x7f404b9ec5d4 . 4 TClassEdit::GetNormalizedName TClassEdit.cxx 897 0x7f4053e0d34c . 5 TClass::GetClass TClass.cxx 3055 0x7f4053e330ba . 6 TClass::GetClass TClass.cxx 2970 0x7f4053e32d07 . 7 TBuildRealData::Inspect TClass.cxx 850 0x7f4053e28f60 . 8 TCling::InspectMembers TCling.cxx 2926 0x7f404bbeb0c9 . 9 TClass::CallShowMembers TClass.cxx 2225 0x7f4053e306b9 . 10 TClass::BuildRealData TClass.cxx 2080 0x7f4053e2fb1a . 11 TStreamerInfo::Build TStreamerInfo.cxx 307 0x7f4052ee7510 . 12 TClass::GetStreamerInfoImpl TClass.cxx 4669 0x7f4053e3924b . 13 TClass::GetStreamerInfo TClass.cxx 4629 0x7f4053e38fa8 . 14 TBufferFile::WriteClassBuffer TBufferFile.cxx 3625 0x7f4052e0ea05 . 15 TTree::Streamer TTree.cxx 9626 0x7f4039614d97 . 16 TKey::TKey TKey.cxx 249 0x7f4052ed5cda . 17 TFile::CreateKey TFile.cxx 1031 0x7f4052e96a51 . 18 TDirectoryFile::WriteTObject TDirectoryFile.cxx 1970 0x7f4052e80db2 . 19 TObject::Write TObject.cxx 869 0x7f4053d43f02 . 20 TTree::Write TTree.cxx 9737 0x7f40396152e2 . 21 TTree::Write TTree.cxx 9746 0x7f4039615324 . 22 TDirectoryFile::Write TDirectoryFile.cxx 1849 0x7f4052e8079f . 23 TFile::Write TFile.cxx 2436 0x7f4052e9bb23 . 24 execCheckClusterRange execCheckClusterRange.C 74 0x7f40535a9a33 . 25 ?? 0x7f405383602d . 26 ?? 0x7ffcb5d81320 . 27 ?? 0x561b0b74a930 . 28 ?? 0x7ffcb5d81320 . 29 cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value *) const 0x7f404beb4788 . 30 cling::Interpreter::RunFunction(clang::FunctionDecl const *, cling::Value *) 0x7f404be3787c . 31 cling::Interpreter::EvaluateInternal(std::string const&, cling::CompilationOptions, cling::Value *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:45,performance,time,times,45,"It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. . . ```. 1 TCling::GetClassSharedLibs TCling.cxx 7040 0x7f404bbfcd9b . 2 TClingLookupHelper__ExistingTypeCheck TCling.cxx 997 0x7f404bbe07f0 . 3 ROOT::TMetaUtils::TClingLookupHelper::ExistingTypeCheck TClingUtils.cxx 506 0x7f404b9ec5d4 . 4 TClassEdit::GetNormalizedName TClassEdit.cxx 897 0x7f4053e0d34c . 5 TClass::GetClass TClass.cxx 3055 0x7f4053e330ba . 6 TClass::GetClass TClass.cxx 2970 0x7f4053e32d07 . 7 TBuildRealData::Inspect TClass.cxx 850 0x7f4053e28f60 . 8 TCling::InspectMembers TCling.cxx 2926 0x7f404bbeb0c9 . 9 TClass::CallShowMembers TClass.cxx 2225 0x7f4053e306b9 . 10 TClass::BuildRealData TClass.cxx 2080 0x7f4053e2fb1a . 11 TStreamerInfo::Build TStreamerInfo.cxx 307 0x7f4052ee7510 . 12 TClass::GetStreamerInfoImpl TClass.cxx 4669 0x7f4053e3924b . 13 TClass::GetStreamerInfo TClass.cxx 4629 0x7f4053e38fa8 . 14 TBufferFile::WriteClassBuffer TBufferFile.cxx 3625 0x7f4052e0ea05 . 15 TTree::Streamer TTree.cxx 9626 0x7f4039614d97 . 16 TKey::TKey TKey.cxx 249 0x7f4052ed5cda . 17 TFile::CreateKey TFile.cxx 1031 0x7f4052e96a51 . 18 TDirectoryFile::WriteTObject TDirectoryFile.cxx 1970 0x7f4052e80db2 . 19 TObject::Write TObject.cxx 869 0x7f4053d43f02 . 20 TTree::Write TTree.cxx 9737 0x7f40396152e2 . 21 TTree::Write TTree.cxx 9746 0x7f4039615324 . 22 TDirectoryFile::Write TDirectoryFile.cxx 1849 0x7f4052e8079f . 23 TFile::Write TFile.cxx 2436 0x7f4052e9bb23 . 24 execCheckClusterRange execCheckClusterRange.C 74 0x7f40535a9a33 . 25 ?? 0x7f405383602d . 26 ?? 0x7ffcb5d81320 . 27 ?? 0x561b0b74a930 . 28 ?? 0x7ffcb5d81320 . 29 cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value *) const 0x7f404beb4788 . 30 cling::Interpreter::RunFunction(clang::FunctionDecl const *, cling::Value *) 0x7f404be3787c . 31 cling::Interpreter::EvaluateInternal(std::string const&, cling::CompilationOptions, cling::Value *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:144,testability,trace,trace,144,"It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. . . ```. 1 TCling::GetClassSharedLibs TCling.cxx 7040 0x7f404bbfcd9b . 2 TClingLookupHelper__ExistingTypeCheck TCling.cxx 997 0x7f404bbe07f0 . 3 ROOT::TMetaUtils::TClingLookupHelper::ExistingTypeCheck TClingUtils.cxx 506 0x7f404b9ec5d4 . 4 TClassEdit::GetNormalizedName TClassEdit.cxx 897 0x7f4053e0d34c . 5 TClass::GetClass TClass.cxx 3055 0x7f4053e330ba . 6 TClass::GetClass TClass.cxx 2970 0x7f4053e32d07 . 7 TBuildRealData::Inspect TClass.cxx 850 0x7f4053e28f60 . 8 TCling::InspectMembers TCling.cxx 2926 0x7f404bbeb0c9 . 9 TClass::CallShowMembers TClass.cxx 2225 0x7f4053e306b9 . 10 TClass::BuildRealData TClass.cxx 2080 0x7f4053e2fb1a . 11 TStreamerInfo::Build TStreamerInfo.cxx 307 0x7f4052ee7510 . 12 TClass::GetStreamerInfoImpl TClass.cxx 4669 0x7f4053e3924b . 13 TClass::GetStreamerInfo TClass.cxx 4629 0x7f4053e38fa8 . 14 TBufferFile::WriteClassBuffer TBufferFile.cxx 3625 0x7f4052e0ea05 . 15 TTree::Streamer TTree.cxx 9626 0x7f4039614d97 . 16 TKey::TKey TKey.cxx 249 0x7f4052ed5cda . 17 TFile::CreateKey TFile.cxx 1031 0x7f4052e96a51 . 18 TDirectoryFile::WriteTObject TDirectoryFile.cxx 1970 0x7f4052e80db2 . 19 TObject::Write TObject.cxx 869 0x7f4053d43f02 . 20 TTree::Write TTree.cxx 9737 0x7f40396152e2 . 21 TTree::Write TTree.cxx 9746 0x7f4039615324 . 22 TDirectoryFile::Write TDirectoryFile.cxx 1849 0x7f4052e8079f . 23 TFile::Write TFile.cxx 2436 0x7f4052e9bb23 . 24 execCheckClusterRange execCheckClusterRange.C 74 0x7f40535a9a33 . 25 ?? 0x7f405383602d . 26 ?? 0x7ffcb5d81320 . 27 ?? 0x561b0b74a930 . 28 ?? 0x7ffcb5d81320 . 29 cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value *) const 0x7f404beb4788 . 30 cling::Interpreter::RunFunction(clang::FunctionDecl const *, cling::Value *) 0x7f404be3787c . 31 cling::Interpreter::EvaluateInternal(std::string const&, cling::CompilationOptions, cling::Value *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:47,performance,time,times,47,"> It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. That's okay and it should not result in a different StreamerInfo. What is the difference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:146,testability,trace,trace,146,"> It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. That's okay and it should not result in a different StreamerInfo. What is the difference?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:284,energy efficiency,Core,Core,284,"> > It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. > . > That's okay and it should not result in a different StreamerInfo. What is the difference? My guess is that the word ""Core"" is now part of the class metadata, so 4 bytes more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:49,performance,time,times,49,"> > It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. > . > That's okay and it should not result in a different StreamerInfo. What is the difference? My guess is that the word ""Core"" is now part of the class metadata, so 4 bytes more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:148,testability,trace,trace,148,"> > It seems that the TMemFile::Write calls many times the GetClassSharedLibs function, and the resulting StreamerInfo is not exactly the same, see trace here:. > . > That's okay and it should not result in a different StreamerInfo. What is the difference? My guess is that the word ""Core"" is now part of the class metadata, so 4 bytes more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:8,deployability,stage,stage,8,"At this stage, there are already changes for the different Write in the script:. TFile.cxx:2436 Int_t nbytes = TDirectoryFile::Write(0, opt, bufsiz); // Write directory tree. Before --> After. 826 --> 826. 862 --> 862. 2394 --> 2394. 946 --> 946. 656 --> 658. 759 --> 765",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:29,energy efficiency,Core,Core,29,"> My guess is that the word ""Core"" is now part of the class metadata. How?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:47,performance,content,content,47,Could it be that the order changes but not the content? So that compression changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:151,energy efficiency,load,loading,151,"It seems the 2 files are not ""exactly"" before and after this PR. The difference between the 2 records (after sorting since indeed the order of library loading might alter the order in the list of StreamerInfo) is:. ```. 735,736c735,736. < ""fTitle"" : ""(=kTRUE if leaf has a range, kFALSE otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement."",. < ""fTitle"" : ""(=kTRUE if unsigned, kFALSE otherwise)"",. ---. > ""fTitle"" : ""(=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement."",. > ""fTitle"" : ""(=true if unsigned, false otherwise)"",. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:151,performance,load,loading,151,"It seems the 2 files are not ""exactly"" before and after this PR. The difference between the 2 records (after sorting since indeed the order of library loading might alter the order in the list of StreamerInfo) is:. ```. 735,736c735,736. < ""fTitle"" : ""(=kTRUE if leaf has a range, kFALSE otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement."",. < ""fTitle"" : ""(=kTRUE if unsigned, kFALSE otherwise)"",. ---. > ""fTitle"" : ""(=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement."",. > ""fTitle"" : ""(=true if unsigned, false otherwise)"",. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:105,deployability,Modul,Module,105,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:126,deployability,contain,contains,126,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:269,deployability,depend,dependencies,269,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:199,energy efficiency,Core,Core,199,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:437,energy efficiency,core,core,437,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:587,energy efficiency,Core,Core,587,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:269,integrability,depend,dependencies,269,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:317,integrability,interfac,interface,317,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:413,integrability,interfac,interface,413,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:317,interoperability,interfac,interface,317,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:413,interoperability,interfac,interface,413,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:105,modifiability,Modul,Module,105,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:269,modifiability,depend,dependencies,269,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:317,modifiability,interfac,interface,317,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:413,modifiability,interfac,interface,413,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:486,reliability,doe,does,486,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:105,safety,Modul,Module,105,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:179,safety,except,except,179,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:210,safety,except,exception,210,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:269,safety,depend,dependencies,269,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:269,testability,depend,dependencies,269,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:107,deployability,Modul,Module,107,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:128,deployability,contain,contains,128,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:271,deployability,depend,dependencies,271,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:527,deployability,build,building,527,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:831,deployability,depend,depends,831,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:983,deployability,depend,dependency,983,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:201,energy efficiency,Core,Core,201,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:649,energy efficiency,core,core,649,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:799,energy efficiency,Core,Core,799,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:858,energy efficiency,Core,Core,858,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:973,energy efficiency,Core,Core,973,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:271,integrability,depend,dependencies,271,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:319,integrability,interfac,interface,319,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:625,integrability,interfac,interface,625,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:831,integrability,depend,depends,831,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:983,integrability,depend,dependency,983,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:319,interoperability,interfac,interface,319,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:625,interoperability,interfac,interface,625,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:892,interoperability,share,shared,892,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:107,modifiability,Modul,Module,107,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:271,modifiability,depend,dependencies,271,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:319,modifiability,interfac,interface,319,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:625,modifiability,interfac,interface,625,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:831,modifiability,depend,depends,831,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:918,modifiability,inherit,inheritance,918,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:983,modifiability,depend,dependency,983,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:698,reliability,doe,does,698,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:107,safety,Modul,Module,107,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:181,safety,except,except,181,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:212,safety,except,exception,212,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:271,safety,depend,dependencies,271,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:831,safety,depend,depends,831,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:983,safety,depend,dependency,983,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:271,testability,depend,dependencies,271,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:831,testability,depend,depends,831,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:839,testability,simul,simultaneously,839,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:983,testability,depend,dependency,983,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:548,usability,document,documentation,548,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:270,deployability,continu,continue,270,"> > Right, I was using 6.30.04 as reference. I can rerun if needed. > . > Yes, when comparing files it is essential that the only difference is the change being investigated. With the new commit following vgvassilevs suggestion, the test passes, so not sure if I should continue in this direction?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:233,safety,test,test,233,"> > Right, I was using 6.30.04 as reference. I can rerun if needed. > . > Yes, when comparing files it is essential that the only difference is the change being investigated. With the new commit following vgvassilevs suggestion, the test passes, so not sure if I should continue in this direction?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:233,testability,test,test,233,"> > Right, I was using 6.30.04 as reference. I can rerun if needed. > . > Yes, when comparing files it is essential that the only difference is the change being investigated. With the new commit following vgvassilevs suggestion, the test passes, so not sure if I should continue in this direction?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:97,deployability,continu,continue,97,"> With the new commit following vgvassilevs suggestion, the test passes, so not sure if I should continue in this direction? No need. As Vassil suggested the original change had unintended consequences (that are of course gone with the latest commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:60,safety,test,test,60,"> With the new commit following vgvassilevs suggestion, the test passes, so not sure if I should continue in this direction? No need. As Vassil suggested the original change had unintended consequences (that are of course gone with the latest commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14747:60,testability,test,test,60,"> With the new commit following vgvassilevs suggestion, the test passes, so not sure if I should continue in this direction? No need. As Vassil suggested the original change had unintended consequences (that are of course gone with the latest commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14747
https://github.com/root-project/root/pull/14750:636,availability,state,state,636,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:89,deployability,fail,failing,89,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:111,deployability,build,builds,111,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:179,deployability,fail,failing,179,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:320,deployability,configurat,configuration,320,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:627,energy efficiency,green,green,627,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:320,integrability,configur,configuration,320,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:636,integrability,state,state,636,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:320,modifiability,configur,configuration,320,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:569,modifiability,maintain,maintain,569,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:89,reliability,fail,failing,89,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:179,reliability,fail,failing,179,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:43,safety,test,test,43,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:448,safety,test,test,448,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:512,safety,test,test,512,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:569,safety,maintain,maintain,569,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:605,safety,test,test,605,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:320,security,configur,configuration,320,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:13,testability,understand,understand,13,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:43,testability,test,test,43,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:448,testability,test,test,448,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:512,testability,test,test,512,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:605,testability,test,test,605,"Hi @linev, I understand that disabling the test is not the ideal action, but this one is failing in 90% of the builds since a week and this is not acceptable. It is now also seen failing on Jenkins (https://github.com/root-project/root/pull/14755#issuecomment-1951712063) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`. If you are unhappy about disabling this test, please investigate with critical priority how to make the test pass. If that cannot be done within a day or two, I maintain that we should disable the test and go back to a green CI state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:58,availability,servic,services,58,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:35,deployability,build,build,35,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:58,deployability,servic,services,58,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:110,deployability,build,build,110,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:205,deployability,configurat,configurations,205,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:58,integrability,servic,services,58,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:205,integrability,configur,configurations,205,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:58,modifiability,servic,services,58,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:205,modifiability,configur,configurations,205,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:205,security,configur,configurations,205,"@hahnjo . How can I reproduce this build:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. I only see that is executed on `olbdw-01` host, but no any docker/vm configurations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:71,availability,servic,services,71,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:42,deployability,build,build,42,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:71,deployability,servic,services,71,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:123,deployability,build,build,123,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:224,deployability,configurat,configurations,224,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:285,deployability,contain,container,285,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:332,deployability,log,logging,332,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:360,deployability,contain,container,360,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:421,deployability,build,build,421,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:71,integrability,servic,services,71,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:224,integrability,configur,configurations,224,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:71,modifiability,servic,services,71,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:224,modifiability,configur,configurations,224,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:332,safety,log,logging,332,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:224,security,configur,configurations,224,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:332,security,log,logging,332,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:347,security,SSH,SSH,347,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:332,testability,log,logging,332,"> @hahnjo. > . > How can I reproduce this build:. > . > https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196057/consoleFull. > . > I only see that is executed on `olbdw-01` host, but no any docker/vm configurations. Because that one is the ""old"" Jenkins, ie no container. There the old procedure applies, ie logging in via SSH. For the container based CI, there's instructions at the end of every build how to reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:2,availability,down,download,2,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:123,deployability,build,build,123,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:499,deployability,fail,failed,499,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:151,reliability,rca,rcanvas-rline,151,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:195,reliability,rca,rcanvas-rline,195,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:261,reliability,rca,rcanvas-,261,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:311,reliability,rca,rcanvas-,311,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:377,reliability,rca,rcanvas-,377,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:427,reliability,rca,rcanvas-,427,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:499,reliability,fail,failed,499,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:89,safety,Test,Test,89,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:174,safety,Test,Test,174,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:290,safety,Test,Test,290,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:406,safety,Test,Test,406,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:477,safety,test,tests,477,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:493,safety,test,tests,493,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:89,testability,Test,Test,89,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:174,testability,Test,Test,174,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:290,testability,Test,Test,290,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:406,testability,Test,Test,406,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:477,testability,test,tests,477,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:493,testability,test,tests,493,"I download docker for fedora39 on my machine, rebuild ROOT and do:. ```. ctest -R rline. Test project /github/home/ROOT-CI/build. Start 1109: tutorial-rcanvas-rline.cxx. 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec. Start 1110: tutorial-rcanvas-rline_style.cxx. 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec. Start 1111: tutorial-rcanvas-rline_width.cxx. 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,testability,simpl,simply,5,Also simply running `rline.cxx` macro in the docker also works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,usability,simpl,simply,5,Also simply running `rline.cxx` macro in the docker also works.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:64,deployability,fail,failing,64,"Yes fine, but that doesn't change the fact that it is regularly failing in the CI environment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:19,reliability,doe,doesn,19,"Yes fine, but that doesn't change the fact that it is regularly failing in the CI environment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:64,reliability,fail,failing,64,"Yes fine, but that doesn't change the fact that it is regularly failing in the CI environment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:66,deployability,contain,container,66,One should try to return back shared memory config parameters for container.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:30,interoperability,share,shared,30,One should try to return back shared memory config parameters for container.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:51,modifiability,paramet,parameters,51,One should try to return back shared memory config parameters for container.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:37,performance,memor,memory,37,One should try to return back shared memory config parameters for container.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:37,usability,memor,memory,37,One should try to return back shared memory config parameters for container.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:115,deployability,fail,failing,115,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:276,deployability,configurat,configuration,276,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:276,integrability,configur,configuration,276,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:276,modifiability,configur,configuration,276,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:115,reliability,fail,failing,115,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:276,security,configur,configuration,276,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,deployability,resourc,resources,5,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:69,deployability,contain,container,69,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,energy efficiency,resourc,resources,5,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,performance,resourc,resources,5,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:34,performance,memor,memory,34,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:93,performance,parallel,parallel,93,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:175,performance,parallel,parallel,175,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,safety,resourc,resources,5,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:5,testability,resourc,resources,5,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:34,usability,memor,memory,34,"Some resources - `/tmp`, `/home`, memory - is not sufficient for the container. Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:15,performance,parallel,parallel,15,"> Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel? https://github.com/root-project/root/pull/14771; I'm not really convinced that's a solution, but worth a try...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14750:97,performance,parallel,parallel,97,"> Can it be 16 parallel jobs which are used to run ctest? Can one mark some macros not to run in parallel? https://github.com/root-project/root/pull/14771; I'm not really convinced that's a solution, but worth a try...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14750
https://github.com/root-project/root/pull/14751:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:323,energy efficiency,adapt,adapted,323,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:323,integrability,adapt,adapted,323,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:323,interoperability,adapt,adapted,323,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:323,modifiability,adapt,adapted,323,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:380,modifiability,exten,extended,380,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:128,safety,test,test,128,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:206,safety,test,test,206,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:211,safety,test,testTestStatistics,211,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:250,safety,review,review,250,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:495,safety,test,tests,495,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:123,testability,unit,unit,123,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:128,testability,test,test,128,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:206,testability,test,test,206,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:211,testability,test,testTestStatistics,211,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:250,testability,review,review,250,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:490,testability,unit,unit,490,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:495,testability,test,tests,495,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:24,usability,help,helping,24,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:455,usability,prefer,prefer,455,"> Thank you so much for helping out, @langenbruch! > . > I have a few change requests. Also, is it possible to implement a unit test here? https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testTestStatistics.cxx. Thanks for the review @guitargeek , I implemented the requests. Please see attached the adapted tutorial rf611_weightedfits.C to demonstrate the extended functionality, which could also replace the existing one. I would prefer to not write any additional unit tests. [rf611_weightedfits.tar.gz](https://github.com/root-project/root/files/14323844/rf611_weightedfits.tar.gz).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:61,deployability,updat,updates,61,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,deployability,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,integrability,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,interoperability,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,modifiability,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,reliability,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:61,safety,updat,updates,61,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:144,safety,test,tests,144,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:61,security,updat,updates,61,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,security,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:96,testability,integr,integrating,96,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14751:144,testability,test,tests,144,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14751
https://github.com/root-project/root/pull/14752:0,availability,Error,Errors,0,Errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14752
https://github.com/root-project/root/pull/14752:0,performance,Error,Errors,0,Errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14752
https://github.com/root-project/root/pull/14752:0,safety,Error,Errors,0,Errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14752
https://github.com/root-project/root/pull/14752:0,usability,Error,Errors,0,Errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14752
https://github.com/root-project/root/pull/14754:370,testability,context,context,370,"Hi @ferdymercury, thank you very much for this PR! I see that you also deprecated some classes that were not mentioned in [ROOT-8594](https://its.cern.ch/jira/browse/ROOT-8594), namely `TRobustEstimator` and `TGenPhaseSpace`, for which there is no suitable alternative. What is the motivation to deprecate these as well? Thanks for clarifying! (Maybe I just missed some context from the fixathon that I didn't attend)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:57,availability,consist,consistency,57,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:342,deployability,version,version,342,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:342,integrability,version,version,342,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:342,modifiability,version,version,342,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:15,safety,review,review,15,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:496,safety,compl,completely,496,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:496,security,compl,completely,496,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:15,testability,review,review,15,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:57,usability,consist,consistency,57,"Thanks for the review! Mmm the motivation was mainly for consistency with https://root.cern.ch/doc/master/group__Physics.html. They are both listed in the group of ""Legacy Physics Classes"". If we do not want to mark them as legacy, then we should remove them from this doxygen group. I guess it would make more sense to later implement a new version of these in a separate folder or namespace such as ROOT::Math https://github.com/root-project/root/issues/11300. On the longer run, we could then completely remove the physics/src folder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:93,availability,consist,consistent,93,"Thanks for the clarification! Okay, then I understand, you are making the documentation more consistent by marking also these other physics classes as legacy :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:43,testability,understand,understand,43,"Thanks for the clarification! Okay, then I understand, you are making the documentation more consistent by marking also these other physics classes as legacy :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:74,usability,document,documentation,74,"Thanks for the clarification! Okay, then I understand, you are making the documentation more consistent by marking also these other physics classes as legacy :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:93,usability,consist,consistent,93,"Thanks for the clarification! Okay, then I understand, you are making the documentation more consistent by marking also these other physics classes as legacy :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:30,availability,down,downgraded,30,"Thanks for the review! I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:57,integrability,messag,messages,57,"Thanks for the review! I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:57,interoperability,messag,messages,57,"Thanks for the review! I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:15,safety,review,review,15,"Thanks for the review! I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:15,testability,review,review,15,"Thanks for the review! I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:15,safety,review,review,15,Thanks for the review! I changed it as suggested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14754:15,testability,review,review,15,Thanks for the review! I changed it as suggested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14754
https://github.com/root-project/root/pull/14755:122,availability,error,error,122,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:157,availability,avail,available,157,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:41,deployability,version,version,41,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:41,integrability,version,version,41,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:41,modifiability,version,version,41,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:70,modifiability,paramet,parameter,70,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:122,performance,error,error,122,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:157,reliability,availab,available,157,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:122,safety,error,error,122,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:157,safety,avail,available,157,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:157,security,availab,available,157,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14755:122,usability,error,error,122,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14755
https://github.com/root-project/root/pull/14759:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14759
https://github.com/root-project/root/pull/14760:13,availability,error,errors,13,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:47,availability,Error,Error,47,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:145,availability,Error,Error,145,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:249,availability,Error,Error,249,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:13,performance,error,errors,13,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:47,performance,Error,Error,47,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:145,performance,Error,Error,145,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:249,performance,Error,Error,249,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:13,safety,error,errors,13,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:47,safety,Error,Error,47,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:145,safety,Error,Error,145,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:249,safety,Error,Error,249,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:13,usability,error,errors,13,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:47,usability,Error,Error,47,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:145,usability,Error,Error,145,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:249,usability,Error,Error,249,"Getting some errors at the moment, like:. ```. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TProtoClass is not a CXXRecordDecl. Error in <TInterpreter::InspectMembers>: Cannot find Decl for class TEnum is not a CXXRecordDecl. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:4,availability,error,errors,4,The errors seems related to the changes. (i.e they are unexpected).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:4,performance,error,errors,4,The errors seems related to the changes. (i.e they are unexpected).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:4,safety,error,errors,4,The errors seems related to the changes. (i.e they are unexpected).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:4,usability,error,errors,4,The errors seems related to the changes. (i.e they are unexpected).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:606,modifiability,reu,reusable,606,"Thanks for the review. I reverted to the original behavior as suggested, but the problem is still there. Maybe the problem is that `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const Decl* decl)` sets the decl found by CheckClassInfo, which was called without template instantiation. In contrast, `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const char *name, bool instantiateTemplate /* = true */)` is (almost always) called with `instantiateTemplate` set to true (unless ""IsUnloading""). So maybe this issue is a won't fix as the calls are fundamentally different and not reusable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:15,safety,review,review,15,"Thanks for the review. I reverted to the original behavior as suggested, but the problem is still there. Maybe the problem is that `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const Decl* decl)` sets the decl found by CheckClassInfo, which was called without template instantiation. In contrast, `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const char *name, bool instantiateTemplate /* = true */)` is (almost always) called with `instantiateTemplate` set to true (unless ""IsUnloading""). So maybe this issue is a won't fix as the calls are fundamentally different and not reusable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:15,testability,review,review,15,"Thanks for the review. I reverted to the original behavior as suggested, but the problem is still there. Maybe the problem is that `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const Decl* decl)` sets the decl found by CheckClassInfo, which was called without template instantiation. In contrast, `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const char *name, bool instantiateTemplate /* = true */)` is (almost always) called with `instantiateTemplate` set to true (unless ""IsUnloading""). So maybe this issue is a won't fix as the calls are fundamentally different and not reusable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:50,usability,behavi,behavior,50,"Thanks for the review. I reverted to the original behavior as suggested, but the problem is still there. Maybe the problem is that `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const Decl* decl)` sets the decl found by CheckClassInfo, which was called without template instantiation. In contrast, `TClingClassInfo::TClingClassInfo(cling::Interpreter *interp, const char *name, bool instantiateTemplate /* = true */)` is (almost always) called with `instantiateTemplate` set to true (unless ""IsUnloading""). So maybe this issue is a won't fix as the calls are fundamentally different and not reusable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:59,reliability,doe,does,59,> trying to reset new CI. Maybe rebasing and force pushing does the trick?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:174,availability,failur,failure,174,Closing and reopening sorta worked: https://github.com/root-project/root/actions/runs/8574933039/job/23502827111?pr=14760 but the 'check' page is not seeing them. So far the failure are 'only' failed S3 connections.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:174,deployability,fail,failure,174,Closing and reopening sorta worked: https://github.com/root-project/root/actions/runs/8574933039/job/23502827111?pr=14760 but the 'check' page is not seeing them. So far the failure are 'only' failed S3 connections.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:193,deployability,fail,failed,193,Closing and reopening sorta worked: https://github.com/root-project/root/actions/runs/8574933039/job/23502827111?pr=14760 but the 'check' page is not seeing them. So far the failure are 'only' failed S3 connections.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:174,performance,failur,failure,174,Closing and reopening sorta worked: https://github.com/root-project/root/actions/runs/8574933039/job/23502827111?pr=14760 but the 'check' page is not seeing them. So far the failure are 'only' failed S3 connections.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:174,reliability,fail,failure,174,Closing and reopening sorta worked: https://github.com/root-project/root/actions/runs/8574933039/job/23502827111?pr=14760 but the 'check' page is not seeing them. So far the failure are 'only' failed S3 connections.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14760:193,reliability,fail,failed,193,Closing and reopening sorta worked: https://github.com/root-project/root/actions/runs/8574933039/job/23502827111?pr=14760 but the 'check' page is not seeing them. So far the failure are 'only' failed S3 connections.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14760
https://github.com/root-project/root/pull/14762:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14762
https://github.com/root-project/root/issues/14765:57,integrability,interfac,interface,57,"Thanks! It's not deprecated, but rather part of a legacy interface. No alternative exists at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14765
https://github.com/root-project/root/issues/14765:57,interoperability,interfac,interface,57,"Thanks! It's not deprecated, but rather part of a legacy interface. No alternative exists at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14765
https://github.com/root-project/root/issues/14765:57,modifiability,interfac,interface,57,"Thanks! It's not deprecated, but rather part of a legacy interface. No alternative exists at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14765
https://github.com/root-project/root/issues/14766:147,usability,clear,clear,147,"I think the problem is just the name. ""Ptr"" makes people think of a normal non owning pointer. If it would be called ""RResult"", it would be pretty clear to me who owns the payload!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14766
https://github.com/root-project/root/issues/14767:40,energy efficiency,core,core,40,Same issue on Ubuntu 22.04. Happens in `core/newdelete/src/NewDelete.cxx:207`. Maybe related: https://root-forum.cern.ch/t/aborting-with-std-align-val-t-is-not-implemented-yet-rhel-9-2/55989/21,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14767
https://github.com/root-project/root/issues/14769:61,deployability,patch,patch,61,Or add https://github.com/root-project/root/pull/14192/files.patch as a patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:72,deployability,patch,patch,72,Or add https://github.com/root-project/root/pull/14192/files.patch as a patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:61,safety,patch,patch,61,Or add https://github.com/root-project/root/pull/14192/files.patch as a patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:72,safety,patch,patch,72,Or add https://github.com/root-project/root/pull/14192/files.patch as a patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:61,security,patch,patch,61,Or add https://github.com/root-project/root/pull/14192/files.patch as a patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:72,security,patch,patch,72,Or add https://github.com/root-project/root/pull/14192/files.patch as a patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:91,deployability,version,version,91,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:189,deployability,build,build,189,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:195,deployability,log,logs,195,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:208,deployability,build,build-,208,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:294,deployability,build,build-,294,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:330,deployability,build,build-,330,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:415,deployability,build,build-,415,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:459,deployability,configurat,configuration,459,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:91,integrability,version,version,91,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:459,integrability,configur,configuration,459,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:91,modifiability,version,version,91,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:459,modifiability,configur,configuration,459,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:195,safety,log,logs,195,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:500,safety,test,test,500,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:585,safety,test,test,585,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:653,safety,test,test,653,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:695,safety,test,test,695,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:195,security,log,logs,195,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:459,security,configur,configuration,459,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:477,security,modif,modify,477,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:195,testability,log,logs,195,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:500,testability,test,test,500,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:585,testability,test,test,585,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:653,testability,test,test,653,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:695,testability,test,test,695,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:1236,testability,understand,understand,1236,"@ferdymercury @vvolkl . Thank you for your responses! I followed the advice and built with version 6.30.04 and the master branch. Unfortunately, the results were the same. Attached are the build logs. [spack-build-out_root-6.30.04.txt](https://github.com/root-project/root/files/14356955/spack-build-out_root-6.30.04.txt). [spack-build-out_root-master.txt](https://github.com/root-project/root/files/14356957/spack-build-out_root-master.txt). Check the cmake configuration and modify [tree/dataframe/test/CMakeLists.txt](https://github.com/root-project/root/blob/master/tree/dataframe/test/CMakeLists.txt#L47) as follows:. ```diff. --- a/tree/dataframe/test/CMakeLists.txt. +++ b/tree/dataframe/test/CMakeLists.txt. @@ -45,6 +45,7 @@. endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame). +target_include_directories(dataframe_datasetspec BEFORE PRIVATE ${CMAKE_SOURCE_DIR}/builtins/). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame). ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame). ```. `BEFORE` and `PRIVATE` refer to other descriptions but do not understand their meaning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:27,deployability,log,log,27,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:135,deployability,build,building,135,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:27,safety,log,log,27,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:167,safety,test,tests,167,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:27,security,log,log,27,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:27,testability,log,log,27,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:167,testability,test,tests,167,"As I can see from the full log, `'-Dbuiltin_nlohmannjson:BOOL=OFF'` is set there. Means external `nlohmann/json.hpp` will be used when building ROOT. In such case all tests also have to use external includes. I will try to provide fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:108,deployability,patch,patch,108,@linev @vvolkl . Thank you. > Please try https://github.com/root-project/root/pull/14784. I built with this patch and was able to complete successfully.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:108,safety,patch,patch,108,@linev @vvolkl . Thank you. > Please try https://github.com/root-project/root/pull/14784. I built with this patch and was able to complete successfully.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:130,safety,compl,complete,130,@linev @vvolkl . Thank you. > Please try https://github.com/root-project/root/pull/14784. I built with this patch and was able to complete successfully.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:108,security,patch,patch,108,@linev @vvolkl . Thank you. > Please try https://github.com/root-project/root/pull/14784. I built with this patch and was able to complete successfully.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14769:130,security,compl,complete,130,@linev @vvolkl . Thank you. > Please try https://github.com/root-project/root/pull/14784. I built with this patch and was able to complete successfully.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14769
https://github.com/root-project/root/issues/14770:929,energy efficiency,core,core,929,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1050,energy efficiency,core,core,1050,"ufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1177,energy efficiency,core,core,1177,"ewsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1284,energy efficiency,core,core,1284,"nt_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const char* name, Int_t bufsize);. io/io/inc/TFile.h:286: void SumBuffer(Int_t bufsize);. io/io/inc/TFile.h:318: sta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1397,energy efficiency,core,core,1397,"ist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const char* name, Int_t bufsize);. io/io/inc/TFile.h:286: void SumBuffer(Int_t bufsize);. io/io/inc/TFile.h:318: static void SetReadaheadSize(Int_t bufsize = 256000);. io/io/inc/TMapFile.h:65: void SumBuffer(Int_t bufsize);. io/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1513,energy efficiency,core,core,1513,"2: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const char* name, Int_t bufsize);. io/io/inc/TFile.h:286: void SumBuffer(Int_t bufsize);. io/io/inc/TFile.h:318: static void SetReadaheadSize(Int_t bufsize = 256000);. io/io/inc/TMapFile.h:65: void SumBuffer(Int_t bufsize);. io/io/inc/ROOT/TBufferMerger.hxx:175: Int_t Write(const char *name = nullptr, Int_t opt = 0, Int_t bufsize = 0) override",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1635,energy efficiency,core,core,1635,"ze(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const char* name, Int_t bufsize);. io/io/inc/TFile.h:286: void SumBuffer(Int_t bufsize);. io/io/inc/TFile.h:318: static void SetReadaheadSize(Int_t bufsize = 256000);. io/io/inc/TMapFile.h:65: void SumBuffer(Int_t bufsize);. io/io/inc/ROOT/TBufferMerger.hxx:175: Int_t Write(const char *name = nullptr, Int_t opt = 0, Int_t bufsize = 0) override;. io/io/inc/TKey.h:66: TKey(const TObject *obj, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TKey.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1787,energy efficiency,core,core,1787," Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const char* name, Int_t bufsize);. io/io/inc/TFile.h:286: void SumBuffer(Int_t bufsize);. io/io/inc/TFile.h:318: static void SetReadaheadSize(Int_t bufsize = 256000);. io/io/inc/TMapFile.h:65: void SumBuffer(Int_t bufsize);. io/io/inc/ROOT/TBufferMerger.hxx:175: Int_t Write(const char *name = nullptr, Int_t opt = 0, Int_t bufsize = 0) override;. io/io/inc/TKey.h:66: TKey(const TObject *obj, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TKey.h:67: TKey(const void *obj, const TClass *cl, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TDirectoryFile.h:117: void SetBufferSi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:1906,energy efficiency,core,core,1906,"fersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). io/io/inc/TFile.h:204: virtual TKey* CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize);. io/io/inc/TFile.h:206: const char* name, Int_t bufsize);. io/io/inc/TFile.h:286: void SumBuffer(Int_t bufsize);. io/io/inc/TFile.h:318: static void SetReadaheadSize(Int_t bufsize = 256000);. io/io/inc/TMapFile.h:65: void SumBuffer(Int_t bufsize);. io/io/inc/ROOT/TBufferMerger.hxx:175: Int_t Write(const char *name = nullptr, Int_t opt = 0, Int_t bufsize = 0) override;. io/io/inc/TKey.h:66: TKey(const TObject *obj, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TKey.h:67: TKey(const void *obj, const TClass *cl, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TDirectoryFile.h:117: void SetBufferSize(Int_t bufsize) override;. io/io/inc/TDirectoryFile.h:123: Int_t Write(const char *name=nullptr, Int_t opt=0, Int_t b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9436,energy efficiency,core,core,9436,"t *list, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:77: Int_t Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:78: TBranch *Bronch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:79: TBranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9539,energy efficiency,core,core,9539,"(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:78: TBranch *Bronch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:79: TBranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9632,energy efficiency,core,core,9632,"SQL.h:78: TBranch *Bronch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:79: TBranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9717,energy efficiency,core,core,9717,"t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:79: TBranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9797,energy efficiency,core,core,9797,"ranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9887,energy efficiency,core,core,9887,"0, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9960,energy efficiency,core,core,9960,"ranch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10057,energy efficiency,core,core,10057,"l=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10153,energy efficiency,core,core,10153,"onst char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10226,energy efficiency,core,core,10226,": TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Appe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10301,energy efficiency,core,core,10301,"fsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10358,energy efficiency,core,core,10358,"t char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10432,energy efficiency,core,core,10432,". core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10508,energy efficiency,core,core,10508,"opy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10611,energy efficiency,core,core,10611," *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10696,energy efficiency,core,core,10696,"// Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10792,energy efficiency,core,core,10792,"s. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t po",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10880,energy efficiency,core,core,10880,"p);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:10980,energy efficiency,core,core,10980,"h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11072,energy efficiency,core,core,11072,"ring.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11171,energy efficiency,core,core,11171,"g.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11258,energy efficiency,core,core,11258,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11347,energy efficiency,core,core,11347,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11446,energy efficiency,core,core,11446,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11547,energy efficiency,core,core,11547,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11635,energy efficiency,core,core,11635,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11725,energy efficiency,core,core,11725,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11808,energy efficiency,core,core,11808,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:11908,energy efficiency,core,core,11908,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:12010,energy efficiency,core,core,12010,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:12113,energy efficiency,core,core,12113,"char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);. core/base/inc/TString.h:439: TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);. core/base/inc/TString.h:440: TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);. core/base/inc/TString.h:447: void Resize(Ssiz_t n); // Truncate or add blanks as necessary. core/base/inc/TString.h:520:extern int strncasecmp(const char *str1, const char *str2, Ssiz_t n);. core/base/inc/TString.h:577:inline TString &TString::Append(const char *cs, Ssiz_t n). core/base/inc/TString.h:583:inline TString &TString::Append(const TString &s, Ssiz_t n). core/base/inc/TString.h:666:inline TString &TString::Insert(Ssiz_t pos, const char *cs, Ssiz_t n). core/base/inc/TString.h:672:inline TString &TString::Insert(Ssiz_t pos, const TString &s, Ssiz_t n). core/base/inc/TString.h:678:inline TString &TString::Prepend(const char *cs, Ssiz_t n). core/base/inc/TString.h:684:inline TString &TString::Prepend(const TString &s, Ssiz_t n). core/base/inc/TString.h:690:inline TString &TString::Remove(Ssiz_t pos, Ssiz_t n). core/base/inc/TString.h:696:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const char *cs). core/base/inc/TString.h:699:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n, const TString& s). core/base/inc/TString.h:702:inline TString &TString::Replace(Ssiz_t pos, Ssiz_t n1, const TString &s,. core/base/inc/TString.h:703: Ssiz_t n2). ```. which could be made Long64_t and adding Fatal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:354,integrability,buffer,buffersize,354,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:449,integrability,buffer,buffersize,449,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:547,integrability,buffer,buffersize,547,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:646,integrability,buffer,buffersize,646,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:718,integrability,buffer,buffersize,718,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:851,integrability,buffer,buffersize,851,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:905,integrability,buffer,buffersize,905,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:3510,interoperability,xml,xml,3510,"ide;. io/io/inc/TKey.h:66: TKey(const TObject *obj, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TKey.h:67: TKey(const void *obj, const TClass *cl, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TDirectoryFile.h:117: void SetBufferSize(Int_t bufsize) override;. io/io/inc/TDirectoryFile.h:123: Int_t Write(const char *name=nullptr, Int_t opt=0, Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:124: Int_t Write(const char *name=nullptr, Int_t opt=0, Int_t bufsize=0) const override;. io/io/inc/TDirectoryFile.h:125: Int_t WriteTObject(const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:126: Int_t WriteObjectAny(const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:127: Int_t WriteObjectAny(const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;. io/xml/inc/TXMLFile.h:56: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/xml/inc/TXMLFile.h:57: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. io/doc/v526/index.html:27: static void SetReadaheadSize(Int_t bufsize = 256000);</pre>. io/sql/inc/TSQLFile.h:77: TSQLStatement *SQLStatement(const char *cmd, Int_t bufsize = 1000);. io/sql/inc/TSQLFile.h:208: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/sql/inc/TSQLFile.h:209: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. net/net/inc/TMessage.h:62: TMessage(void *buf, Int_t bufsize); // only called by T(P)Socket::Recv(). tree/tree/inc/TBranchElement.h:236: void Unroll(const char *name, TClass *cl, TStreamerInfo *sinfo, char* objptr, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:171: virtual TBranch *Bran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:3633,interoperability,xml,xml,3633,"y.h:67: TKey(const void *obj, const TClass *cl, const char *name, Int_t bufsize, TDirectory* motherDir);. io/io/inc/TDirectoryFile.h:117: void SetBufferSize(Int_t bufsize) override;. io/io/inc/TDirectoryFile.h:123: Int_t Write(const char *name=nullptr, Int_t opt=0, Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:124: Int_t Write(const char *name=nullptr, Int_t opt=0, Int_t bufsize=0) const override;. io/io/inc/TDirectoryFile.h:125: Int_t WriteTObject(const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:126: Int_t WriteObjectAny(const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:127: Int_t WriteObjectAny(const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;. io/xml/inc/TXMLFile.h:56: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/xml/inc/TXMLFile.h:57: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. io/doc/v526/index.html:27: static void SetReadaheadSize(Int_t bufsize = 256000);</pre>. io/sql/inc/TSQLFile.h:77: TSQLStatement *SQLStatement(const char *cmd, Int_t bufsize = 1000);. io/sql/inc/TSQLFile.h:208: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/sql/inc/TSQLFile.h:209: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. net/net/inc/TMessage.h:62: TMessage(void *buf, Int_t bufsize); // only called by T(P)Socket::Recv(). tree/tree/inc/TBranchElement.h:236: void Unroll(const char *name, TClass *cl, TStreamerInfo *sinfo, char* objptr, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:171: virtual TBranch *BranchImp(const char* branchname, const char* classname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:4299,interoperability,Socket,Socket,4299," Option_t *option="""", Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:127: Int_t WriteObjectAny(const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;. io/xml/inc/TXMLFile.h:56: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/xml/inc/TXMLFile.h:57: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. io/doc/v526/index.html:27: static void SetReadaheadSize(Int_t bufsize = 256000);</pre>. io/sql/inc/TSQLFile.h:77: TSQLStatement *SQLStatement(const char *cmd, Int_t bufsize = 1000);. io/sql/inc/TSQLFile.h:208: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/sql/inc/TSQLFile.h:209: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. net/net/inc/TMessage.h:62: TMessage(void *buf, Int_t bufsize); // only called by T(P)Socket::Recv(). tree/tree/inc/TBranchElement.h:236: void Unroll(const char *name, TClass *cl, TStreamerInfo *sinfo, char* objptr, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:171: virtual TBranch *BranchImp(const char* branchname, const char* classname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:172: virtual TBranch *BranchImp(const char* branchname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:173: virtual TBranch *BranchImpRef(const char* branchname, const char* classname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:174: virtual TBranch *BranchImpRef(const char* branchname, TClass* ptrClass, EDataType datatype, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:175: virtual TBranch *BranchImpArr(const char* branchname, EDataType datatype, std::size_t N, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9787,performance,content,contents,9787,"h:79: TBranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);. core/base/inc/TString.h:438: TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:4299,security,Soc,Socket,4299," Option_t *option="""", Int_t bufsize=0) override;. io/io/inc/TDirectoryFile.h:127: Int_t WriteObjectAny(const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;. io/xml/inc/TXMLFile.h:56: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/xml/inc/TXMLFile.h:57: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. io/doc/v526/index.html:27: static void SetReadaheadSize(Int_t bufsize = 256000);</pre>. io/sql/inc/TSQLFile.h:77: TSQLStatement *SQLStatement(const char *cmd, Int_t bufsize = 1000);. io/sql/inc/TSQLFile.h:208: TKey *CreateKey(TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize) final;. io/sql/inc/TSQLFile.h:209: TKey *CreateKey(TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;. net/net/inc/TMessage.h:62: TMessage(void *buf, Int_t bufsize); // only called by T(P)Socket::Recv(). tree/tree/inc/TBranchElement.h:236: void Unroll(const char *name, TClass *cl, TStreamerInfo *sinfo, char* objptr, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:171: virtual TBranch *BranchImp(const char* branchname, const char* classname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:172: virtual TBranch *BranchImp(const char* branchname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:173: virtual TBranch *BranchImpRef(const char* branchname, const char* classname, TClass* ptrClass, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:174: virtual TBranch *BranchImpRef(const char* branchname, TClass* ptrClass, EDataType datatype, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h:175: virtual TBranch *BranchImpArr(const char* branchname, EDataType datatype, std::size_t N, void* addobj, Int_t bufsize, Int_t splitlevel);. tree/tree/inc/TTree.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:9666,testability,Assert,AssertElement,9666,"ame, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:79: TBranch *BranchOld(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;. tree/tree/inc/TTreeSQL.h:80: TBranch *Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;. tree/tree/inc/TTreeSQL.h:82: TBranch *Branch(const char *name, void *address, const char *leaflist, Int_t bufsize) override;. tree/tree/inc/TNtuple.h:42: TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. tree/tree/inc/TNtupleD.h:42: TNtupleD(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);. core/base/inc/TStringLong.h:38: TStringLong(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:229: TString(const char *a1, Ssiz_t n1, const char *a2, Ssiz_t n2);. core/base/inc/TString.h:230: void AssertElement(Ssiz_t nc) const; // Index in range. core/base/inc/TString.h:231: Ssiz_t Clobber(Ssiz_t nc); // Remove old contents. core/base/inc/TString.h:237: static Ssiz_t AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap);. core/base/inc/TString.h:271: char *Init(Ssiz_t capacity, Ssiz_t nchar);. core/base/inc/TString.h:272: void Clone(Ssiz_t nc); // Make self a distinct copy w. capacity nc. core/base/inc/TString.h:288: TString(const char *s, Ssiz_t n); // Copy past any embedded nulls. core/base/inc/TString.h:357: TString &Append(const char *cs, Ssiz_t n);. core/base/inc/TString.h:359: TString &Append(const TString &s, Ssiz_t n);. core/base/inc/TString.h:367: Ssiz_t Capacity(Ssiz_t n);. core/base/inc/TString.h:424: TString &Prepend(const char *cs, Ssiz_t n);. core/base/inc/TString.h:426: TString &Prepend(const TString &s, Ssiz_t n);. core/base/inc/TString.h:435: TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos. core/base/inc/TString.h:437: TString &Replace(Ssiz_t pos, Ssiz",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/issues/14770:824,usability,progress,progressbar,824,"There are also some issues pending in TString and TBufferFile constructor classes, that have things like:. ```. TString::TString(const char *cs, Ssiz_t n). TBuffer::Expand(Int_t newsize. TBuffer::TBuffer(EMode mode, Int_t bufsiz). TBufferMergerFile::Write(const char *name, Int_t opt, Int_t bufsize). hist/hist/inc/TProfile2D.h:143: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TProfile.h:134: void SetBuffer(Int_t buffersize, Option_t *option="""") override;. hist/hist/inc/TH1.h:382: virtual void SetBuffer(Int_t buffersize, Option_t *option="""");. hist/hist/inc/TH1.h:387: static void SetDefaultBufferSize(Int_t buffersize=1000);. hist/hist/inc/TProfile3D.h:146: void SetBuffer(Int_t buffersize, Option_t *opt="""") override;. io/io/inc/TFile.h:203: virtual Bool_t Cp(const char *dst, Bool_t progressbar = kTRUE,UInt_t buffersize = 1000000);. io/io/inc/TFile.h:330: UInt_t buffersize = 1000000);. core/cont/inc/TCollection.h:209: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) override;. core/cont/inc/TCollection.h:210: Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const override;. core/cont/inc/TMap.h:87: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;. core/cont/inc/TMap.h:88: Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;. core/base/inc/TObject.h:167: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0);. core/base/inc/TObject.h:168: virtual Int_t Write(const char *name = nullptr, Int_t option = 0, Int_t bufsize = 0) const;. core/base/inc/TDirectory.h:269: Int_t WriteObject(void *obj, const char* name, Option_t *option="""", Int_t bufsize=0); // Intentionally not implemented. core/base/inc/TDirectory.h:282: WriteObject(const T *obj, const char *name, Option_t *option = """", Int_t bufsize = 0). core/base/inc/TDirectory.h:296: WriteObject(const T *obj, const char *name, Option_t *option =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14770
https://github.com/root-project/root/pull/14771:98,performance,parallel,parallel,98,Does not help - at least not in docker. . Maybe can be applied anyway - running chrome browser in parallel with many root processes problematic anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14771:0,reliability,Doe,Does,0,Does not help - at least not in docker. . Maybe can be applied anyway - running chrome browser in parallel with many root processes problematic anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14771:9,usability,help,help,9,Does not help - at least not in docker. . Maybe can be applied anyway - running chrome browser in parallel with many root processes problematic anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14771:90,performance,time,time,90,I don't think this makes sense - with this change we just wait 20 minutes for the test to time out without doing any useful work in parallel.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14771:132,performance,parallel,parallel,132,I don't think this makes sense - with this change we just wait 20 minutes for the test to time out without doing any useful work in parallel.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14771:82,safety,test,test,82,I don't think this makes sense - with this change we just wait 20 minutes for the test to time out without doing any useful work in parallel.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14771:82,testability,test,test,82,I don't think this makes sense - with this change we just wait 20 minutes for the test to time out without doing any useful work in parallel.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14771
https://github.com/root-project/root/pull/14773:0,safety,Test,Test,0,Test at https://github.com/root-project/roottest/pull/1066,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:0,testability,Test,Test,0,Test at https://github.com/root-project/roottest/pull/1066,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:124,availability,error,error,124,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:36,deployability,build,builds,36,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:130,integrability,messag,message,130,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:130,interoperability,messag,message,130,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:124,performance,error,error,124,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:124,safety,error,error,124,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:47,security,sign,signaled,47,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14773:124,usability,error,error,124,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14773
https://github.com/root-project/root/pull/14774:61,availability,ping,ping,61,"It works now with `rcanvas/line.cxx`, but fails with `webgui/ping/ping.cxx` . But I will fix problem soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:66,availability,ping,ping,66,"It works now with `rcanvas/line.cxx`, but fails with `webgui/ping/ping.cxx` . But I will fix problem soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:42,deployability,fail,fails,42,"It works now with `rcanvas/line.cxx`, but fails with `webgui/ping/ping.cxx` . But I will fix problem soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:19,reliability,rca,rcanvas,19,"It works now with `rcanvas/line.cxx`, but fails with `webgui/ping/ping.cxx` . But I will fix problem soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:42,reliability,fail,fails,42,"It works now with `rcanvas/line.cxx`, but fails with `webgui/ping/ping.cxx` . But I will fix problem soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:11,deployability,build,build,11,@phsft-bot build just on mac12arm/cxx20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:12,deployability,fail,fail,12,If mac will fail again - I will provide old options back only for mac. `--headless=new` is relatively new feature in chrome.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:12,reliability,fail,fail,12,If mac will fail again - I will provide old options back only for mac. `--headless=new` is relatively new feature in chrome.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:151,deployability,version,version,151,"> how do we decide when macOS can switch to the ""new"" headless mode. We are checking for chrome browser when running cmake. One also can add check for version of chrome browser and use `--headless=new` only for version 119 and higher.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:211,deployability,version,version,211,"> how do we decide when macOS can switch to the ""new"" headless mode. We are checking for chrome browser when running cmake. One also can add check for version of chrome browser and use `--headless=new` only for version 119 and higher.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:151,integrability,version,version,151,"> how do we decide when macOS can switch to the ""new"" headless mode. We are checking for chrome browser when running cmake. One also can add check for version of chrome browser and use `--headless=new` only for version 119 and higher.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:211,integrability,version,version,211,"> how do we decide when macOS can switch to the ""new"" headless mode. We are checking for chrome browser when running cmake. One also can add check for version of chrome browser and use `--headless=new` only for version 119 and higher.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:151,modifiability,version,version,151,"> how do we decide when macOS can switch to the ""new"" headless mode. We are checking for chrome browser when running cmake. One also can add check for version of chrome browser and use `--headless=new` only for version 119 and higher.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14774:211,modifiability,version,version,211,"> how do we decide when macOS can switch to the ""new"" headless mode. We are checking for chrome browser when running cmake. One also can add check for version of chrome browser and use `--headless=new` only for version 119 and higher.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14774
https://github.com/root-project/root/pull/14776:19,safety,except,except,19,> Looks good to me except the question on the Windows implementation of TempFileName. Probably rename not needed at all. File not yet exists. One can just will create new file with new name.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:12,reliability,Doe,Does,12,@bellenot . Does this branch works at all on Windows? I mean - starting any web widgets like browser or canvas?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:80,usability,widget,widgets,80,@bellenot . Does this branch works at all on Windows? I mean - starting any web widgets like browser or canvas?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:184,performance,time,time,184,"> Does this branch works at all on Windows? I mean - starting any web widgets like browser or canvas? I don't know, I didn't try it. I will try and let you know (but it will take some time...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:2,reliability,Doe,Does,2,"> Does this branch works at all on Windows? I mean - starting any web widgets like browser or canvas? I don't know, I didn't try it. I will try and let you know (but it will take some time...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:70,usability,widget,widgets,70,"> Does this branch works at all on Windows? I mean - starting any web widgets like browser or canvas? I don't know, I didn't try it. I will try and let you know (but it will take some time...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:59,usability,User,Users,59,@linev it works. it created a temporary `html` file as `C:\Users\bellenot\AppData\Local\Temp\rooA90E.tmp.html`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14776:51,usability,User,Users,51,> it works. it created a temporary html file as C:\Users\bellenot\AppData\Local\Temp\rooA90E.tmp.html. Grate. Do we want more changes in Windows code? Can you approve PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14776
https://github.com/root-project/root/pull/14777:29,availability,failur,failures,29,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:29,deployability,fail,failures,29,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:29,performance,failur,failures,29,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:29,reliability,fail,failures,29,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:24,safety,test,test,24,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:122,safety,test,test,122,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:24,testability,test,test,24,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:122,testability,test,test,122,"@hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? @smuzaffar, can we test this PR for cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:31,availability,failur,failures,31,"> @hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? It's possible that D153003 isn't needed anymore with LLVM 16. We should try reverting in ROOT 6.30 with LLVM 13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:31,deployability,fail,failures,31,"> @hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? It's possible that D153003 isn't needed anymore with LLVM 16. We should try reverting in ROOT 6.30 with LLVM 13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:31,performance,failur,failures,31,"> @hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? It's possible that D153003 isn't needed anymore with LLVM 16. We should try reverting in ROOT 6.30 with LLVM 13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:31,reliability,fail,failures,31,"> @hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? It's possible that D153003 isn't needed anymore with LLVM 16. We should try reverting in ROOT 6.30 with LLVM 13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:26,safety,test,test,26,"> @hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? It's possible that D153003 isn't needed anymore with LLVM 16. We should try reverting in ROOT 6.30 with LLVM 13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:26,testability,test,test,26,"> @hahnjo, looks like the test failures in #13139 that were fixed by this commit are gone. Any idea why? It's possible that D153003 isn't needed anymore with LLVM 16. We should try reverting in ROOT 6.30 with LLVM 13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:70,deployability,patch,patch,70,"Ok, https://github.com/root-project/root/pull/14782 told us that this patch seems relevant only for llvm13. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:70,safety,patch,patch,70,"Ok, https://github.com/root-project/root/pull/14782 told us that this patch seems relevant only for llvm13. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:70,security,patch,patch,70,"Ok, https://github.com/root-project/root/pull/14782 told us that this patch seems relevant only for llvm13. Let's move forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:66,deployability,releas,releases,66,"@vgvassilev I pushed https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240223-01 for you to put into `interpreter/llvm-project/llvm-project.tag`. Also can you please make the commit a proper revert of the *ROOT* commit b90bab03ac5fb72448ae95b37bd5b1b7aec0256c, not one of the various versions in https://github.com/root-project/llvm-project/?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:306,deployability,version,versions,306,"@vgvassilev I pushed https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240223-01 for you to put into `interpreter/llvm-project/llvm-project.tag`. Also can you please make the commit a proper revert of the *ROOT* commit b90bab03ac5fb72448ae95b37bd5b1b7aec0256c, not one of the various versions in https://github.com/root-project/llvm-project/?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:306,integrability,version,versions,306,"@vgvassilev I pushed https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240223-01 for you to put into `interpreter/llvm-project/llvm-project.tag`. Also can you please make the commit a proper revert of the *ROOT* commit b90bab03ac5fb72448ae95b37bd5b1b7aec0256c, not one of the various versions in https://github.com/root-project/llvm-project/?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:306,modifiability,version,versions,306,"@vgvassilev I pushed https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240223-01 for you to put into `interpreter/llvm-project/llvm-project.tag`. Also can you please make the commit a proper revert of the *ROOT* commit b90bab03ac5fb72448ae95b37bd5b1b7aec0256c, not one of the various versions in https://github.com/root-project/llvm-project/?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:62,deployability,releas,releases,62,> [-20240223-01](https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240223-01). I've put that in a separate commit...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:123,availability,state,statement,123,"To make the `llvm-diff` workflow fully happy, you need to add one more `case TemplateName::UsingTemplate:` to the `switch` statement - this was added with LLVM 16 and is therefore not present by a plain revert.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:123,integrability,state,statement,123,"To make the `llvm-diff` workflow fully happy, you need to add one more `case TemplateName::UsingTemplate:` to the `switch` statement - this was added with LLVM 16 and is therefore not present by a plain revert.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/pull/14777:24,usability,workflow,workflow,24,"To make the `llvm-diff` workflow fully happy, you need to add one more `case TemplateName::UsingTemplate:` to the `switch` statement - this was added with LLVM 16 and is therefore not present by a plain revert.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14777
https://github.com/root-project/root/issues/14778:35,deployability,build,build,35,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:273,deployability,version,version,273,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:437,deployability,version,version,437,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:273,integrability,version,version,273,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:437,integrability,version,version,437,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:273,modifiability,version,version,273,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:437,modifiability,version,version,437,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:304,safety,avoid,avoid,304,"With `builtin_llvm=ON`, all of our build system magic in `interpreter/CMakeLists.txt` applies, in particular. https://github.com/root-project/root/blob/779ecb965abcb0658fc7a3524e2d1448a2504bff/interpreter/CMakeLists.txt#L134-L148. We do this because ROOT requires an exact version of LLVM and we want to avoid at all costs that its symbols interfere with another LLVM library that lives in the same process, with potentially a different version...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:112,availability,error,error,112,"See also https://github.com/root-project/root/issues/12156. But interestingly while I don't get that particular error, there are indeed still *some* LLVM symbols exported:. ```sh. nm --dynamic /path/to/libCling.so | awk '{print $3;}' | c++filt | grep llvm. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:112,performance,error,error,112,"See also https://github.com/root-project/root/issues/12156. But interestingly while I don't get that particular error, there are indeed still *some* LLVM symbols exported:. ```sh. nm --dynamic /path/to/libCling.so | awk '{print $3;}' | c++filt | grep llvm. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:112,safety,error,error,112,"See also https://github.com/root-project/root/issues/12156. But interestingly while I don't get that particular error, there are indeed still *some* LLVM symbols exported:. ```sh. nm --dynamic /path/to/libCling.so | awk '{print $3;}' | c++filt | grep llvm. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:112,usability,error,error,112,"See also https://github.com/root-project/root/issues/12156. But interestingly while I don't get that particular error, there are indeed still *some* LLVM symbols exported:. ```sh. nm --dynamic /path/to/libCling.so | awk '{print $3;}' | c++filt | grep llvm. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:48,usability,command,command,48,Can we use the -exclude-libs option in the link command for libCling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:154,deployability,fail,fails,154,> Can we use the -exclude-libs option in the link command for libCling? Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:. ```. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:314,integrability,interfac,interface,314,> Can we use the -exclude-libs option in the link command for libCling? Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:. ```. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:314,interoperability,interfac,interface,314,> Can we use the -exclude-libs option in the link command for libCling? Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:. ```. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:314,modifiability,interfac,interface,314,> Can we use the -exclude-libs option in the link command for libCling? Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:. ```. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:154,reliability,fail,fails,154,> Can we use the -exclude-libs option in the link command for libCling? Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:. ```. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:50,usability,command,command,50,> Can we use the -exclude-libs option in the link command for libCling? Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:. ```. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]! ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:44,deployability,depend,dependencies,44,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:44,integrability,depend,dependencies,44,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:263,integrability,filter,filtered,263,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:44,modifiability,depend,dependencies,44,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:44,safety,depend,dependencies,44,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/issues/14778:44,testability,depend,dependencies,44,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14778
https://github.com/root-project/root/pull/14779:81,interoperability,specif,specific,81,> It is not a proper place to disable authentication in REve. > . > Only in some specific application one should do so - when other protection mechanism is provided. @linev Why this is not a proper place? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:38,security,authenticat,authentication,38,> It is not a proper place to disable authentication in REve. > . > Only in some specific application one should do so - when other protection mechanism is provided. @linev Why this is not a proper place? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:98,security,authenticat,authentication,98,"> Why this is not a proper place? Why all REve examples and demos will run by default without key authentication. As result - anybody can try attack and hijack such server. You should put such code in CMS demo. And there one should use tokens, https, user authentication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:142,security,attack,attack,142,"> Why this is not a proper place? Why all REve examples and demos will run by default without key authentication. As result - anybody can try attack and hijack such server. You should put such code in CMS demo. And there one should use tokens, https, user authentication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:236,security,token,tokens,236,"> Why this is not a proper place? Why all REve examples and demos will run by default without key authentication. As result - anybody can try attack and hijack such server. You should put such code in CMS demo. And there one should use tokens, https, user authentication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:256,security,authenticat,authentication,256,"> Why this is not a proper place? Why all REve examples and demos will run by default without key authentication. As result - anybody can try attack and hijack such server. You should put such code in CMS demo. And there one should use tokens, https, user authentication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:251,usability,user,user,251,"> Why this is not a proper place? Why all REve examples and demos will run by default without key authentication. As result - anybody can try attack and hijack such server. You should put such code in CMS demo. And there one should use tokens, https, user authentication.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:89,availability,servic,service,89,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:89,deployability,servic,service,89,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:89,integrability,servic,service,89,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:89,modifiability,servic,service,89,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:667,security,Auth,AuthKey,667,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:680,security,Session,SessionKey,680,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:13,testability,understand,understand,13,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:59,usability,close,close,59,"@linev I now understand that changes are not needed. I can close this PR. In the CMS web service we used RWebWindow::SetConnToken() with auto generated key. The connection key stayed visible in the browsers URL and multiple connections were possible. Now if I enable (which is the default):. ```. ROOT::RWebWindowsManager::SetUseSessionKey(true);. ROOT::Experimental::gEve->GetWebWindow()->SetRequireAuthKey(true); . ```. I see the key in printed URL in terminal, but when past it to browser the key disappears in the browser's URL text entry. Also multiple connections are not possible with this same key. Now I'm confused. What is the difference between ConnToken, AuthKey, and SessionKey? One more question. Are multiple connections possible in any of the combinations?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:22,safety,test,testing,22,@linev I found out by testing that multiple connections are possible if I use session key and require auth key is disabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:78,security,session,session,78,@linev I found out by testing that multiple connections are possible if I use session key and require auth key is disabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:102,security,auth,auth,102,@linev I found out by testing that multiple connections are possible if I use session key and require auth key is disabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:22,testability,test,testing,22,@linev I found out by testing that multiple connections are possible if I use session key and require auth key is disabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:17,safety,test,testing,17,> I found out by testing that multiple connections are possible if I use session key and require auth key is disabled. Session key is useless without connection key.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:73,security,session,session,73,> I found out by testing that multiple connections are possible if I use session key and require auth key is disabled. Session key is useless without connection key.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:97,security,auth,auth,97,> I found out by testing that multiple connections are possible if I use session key and require auth key is disabled. Session key is useless without connection key.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:119,security,Session,Session,119,> I found out by testing that multiple connections are possible if I use session key and require auth key is disabled. Session key is useless without connection key.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:17,testability,test,testing,17,> I found out by testing that multiple connections are possible if I use session key and require auth key is disabled. Session key is useless without connection key.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/pull/14779:50,usability,document,documentation,50,No changes are needed in REve sources. I will add documentation in reve/tutorials.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14779
https://github.com/root-project/root/issues/14781:31,energy efficiency,current,current,31,"@vgvassilev : do you think the current ROOT CI is stable enough to close this item as ""not needed""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14781
https://github.com/root-project/root/issues/14781:67,usability,close,close,67,"@vgvassilev : do you think the current ROOT CI is stable enough to close this item as ""not needed""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14781
https://github.com/root-project/root/issues/14789:8,availability,error,error,8,Is this error still reproducing with a build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:39,deployability,build,build,39,Is this error still reproducing with a build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:8,performance,error,error,8,Is this error still reproducing with a build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:8,safety,error,error,8,Is this error still reproducing with a build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:8,usability,error,error,8,Is this error still reproducing with a build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:38,deployability,build,builds,38,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:64,deployability,build,build,64,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:107,deployability,build,build,107,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:125,deployability,contain,containers,125,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:167,deployability,version,version,167,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:192,deployability,instal,installed,192,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:294,deployability,build,build,294,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:167,integrability,version,version,167,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:167,modifiability,version,version,167,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:300,performance,time,time,300,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:313,performance,time,time,313,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:233,usability,confirm,confirm,233,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:27,deployability,updat,update,27,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:383,deployability,contain,container,383,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:620,deployability,Updat,Updating,620,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:655,deployability,contain,container,655,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:687,deployability,Updat,Updating,687,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:132,energy efficiency,load,loaded,132,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:274,interoperability,standard,standard,274,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:401,interoperability,registr,registry,401,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:523,interoperability,standard,standard,523,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:132,performance,load,loaded,132,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:700,reliability,doe,does,700,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:27,safety,updat,update,27,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:620,safety,Updat,Updating,620,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:687,safety,Updat,Updating,687,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:27,security,updat,update,27,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:620,security,Updat,Updating,620,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:687,security,Updat,Updating,687,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14789:150,testability,assert,assertion,150,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm. ```. glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64). ```. glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries. Repo : @System. Matched from:. Filename : /usr/include/bits/floatn.h. ```. Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like . ```diff. - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus. + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14789
https://github.com/root-project/root/issues/14790:14,deployability,updat,update,14,Can we get an update on this? It has been open quite a while with no reply.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14790
https://github.com/root-project/root/issues/14790:14,safety,updat,update,14,Can we get an update on this? It has been open quite a while with no reply.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14790
https://github.com/root-project/root/issues/14790:14,security,updat,update,14,Can we get an update on this? It has been open quite a while with no reply.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14790
https://github.com/root-project/root/issues/14790:41,deployability,updat,update,41,"@pcanal Hi, could you provide us with an update?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14790
https://github.com/root-project/root/issues/14790:41,safety,updat,update,41,"@pcanal Hi, could you provide us with an update?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14790
https://github.com/root-project/root/issues/14790:41,security,updat,update,41,"@pcanal Hi, could you provide us with an update?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14790
https://github.com/root-project/root/issues/14793:71,deployability,version,versions,71,"@hahnjo in CMS we saw this issue as well, fixed by rebuilding old ROOT versions with this commit - https://github.com/root-project/root/commit/a434281ab901f43586115584d0e1abd22fa27f7a .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:71,integrability,version,versions,71,"@hahnjo in CMS we saw this issue as well, fixed by rebuilding old ROOT versions with this commit - https://github.com/root-project/root/commit/a434281ab901f43586115584d0e1abd22fa27f7a .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:71,modifiability,version,versions,71,"@hahnjo in CMS we saw this issue as well, fixed by rebuilding old ROOT versions with this commit - https://github.com/root-project/root/commit/a434281ab901f43586115584d0e1abd22fa27f7a .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:87,interoperability,specif,specifically,87,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:152,performance,time,time,152,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:20,safety,test,tests,20,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:20,testability,test,tests,20,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:50,testability,regress,regression,50,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:124,testability,simpl,simply,124,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:26,usability,indicat,indicate,26,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:124,usability,simpl,simply,124,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:17,availability,ping,pinged,17,"@wdconinc sorry, pinged wrong person. The mentioned commit (aka PR #12845) contains the fix, but I don't know when that incompatibility was introduced.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:75,deployability,contain,contains,75,"@wdconinc sorry, pinged wrong person. The mentioned commit (aka PR #12845) contains the fix, but I don't know when that incompatibility was introduced.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:120,interoperability,incompatib,incompatibility,120,"@wdconinc sorry, pinged wrong person. The mentioned commit (aka PR #12845) contains the fix, but I don't know when that incompatibility was introduced.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:30,usability,person,person,30,"@wdconinc sorry, pinged wrong person. The mentioned commit (aka PR #12845) contains the fix, but I don't know when that incompatibility was introduced.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:140,deployability,version,versions,140,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:197,deployability,releas,releases,197,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:215,deployability,version,versions,215,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:307,deployability,version,versions,307,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:427,deployability,patch,patch,427,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:433,deployability,releas,release,433,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:399,energy efficiency,estimat,estimate,399,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:140,integrability,version,versions,140,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:215,integrability,version,versions,215,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:307,integrability,version,versions,307,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:112,interoperability,compatib,compatibility,112,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:140,modifiability,version,versions,140,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:215,modifiability,version,versions,215,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:307,modifiability,version,versions,307,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:479,reliability,Doe,Does,479,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:427,safety,patch,patch,427,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:427,security,patch,patch,427,"Thanks, @iarspider. If I can summarize then:. - the change in 6.30 was intentional,. - the change broke forward compatibility in older ROOT versions,. - in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. - in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). Is that an accurate summary? If so, do we have an estimate when the next 6.28 patch release will be, which will include this fix? Does this issue merit being summarized as a pinned issue at the top of the GitHub issues?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:185,deployability,version,versions,185,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:249,deployability,releas,releases,249,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:267,deployability,version,versions,267,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:361,deployability,version,versions,361,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:438,deployability,updat,update,438,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:451,deployability,version,versions,451,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:185,integrability,version,versions,185,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:267,integrability,version,versions,267,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:361,integrability,version,versions,361,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:451,integrability,version,versions,451,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:157,interoperability,compatib,compatibility,157,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:185,modifiability,version,versions,185,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:267,modifiability,version,versions,267,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:361,modifiability,version,versions,361,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:451,modifiability,version,versions,451,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:438,safety,updat,update,438,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:44,security,team,team,44,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:438,security,updat,update,438,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:430,testability,plan,plan,430,"@wdconinc disclaimer: I am not part of ROOT team, so my interpretation could be wrong. > * the change in 6.30 was intentional,. > * the change broke forward compatibility in older ROOT versions,. Yes. > * in some cases we are waiting for new bugfix releases on older versions (i.e. 6.28),. > * in other cases we are waiting for the bugfix to be merged in older versions as well (i.e. 6.26 and earlier). I don't know if there is a plan to update older versions with this fix - in CMS we just cherry-picked the fix into our fork of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:224,availability,cluster,clusters,224,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:149,deployability,stage,stage,149,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:224,deployability,cluster,clusters,224,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:270,deployability,version,version,270,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:278,deployability,instal,installed,278,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:299,deployability,patch,patches,299,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:307,deployability,instal,installed,307,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:270,integrability,version,version,270,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:270,modifiability,version,version,270,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:128,performance,time,time,128,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:299,safety,patch,patches,299,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:253,security,control,control,253,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:299,security,patch,patches,299,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:253,testability,control,control,253,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:184,usability,user,users,184,"> In CMS we just cherry-picked the fix into our fork of ROOT. But that still forces everyone to use the CMS environment all the time. At our earlier stage of development, we have many users who use computing environments at clusters where we don't have control over the version installed, let alone patches installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:48,availability,cluster,cluster,48,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:22,deployability,updat,updating,22,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:38,deployability,version,versions,38,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:48,deployability,cluster,cluster,48,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:109,deployability,version,version,109,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:38,integrability,version,versions,38,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:109,integrability,version,version,109,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:134,interoperability,compatib,compatibility,134,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:187,interoperability,compatib,compatibility,187,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:38,modifiability,version,versions,38,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:109,modifiability,version,version,109,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:22,safety,updat,updating,22,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:22,security,updat,updating,22,"Yeah, this would mean updating all CI versions, cluster environments, etc. if anyone wants to use a new ROOT version... aren't there ""compatibility"" flags ROOT can use to ensure backward compatibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:194,availability,error,error,194,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:264,availability,error,error,264,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:158,deployability,version,version,158,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:158,integrability,version,version,158,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:200,integrability,messag,message,200,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:200,interoperability,messag,message,200,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:158,modifiability,version,version,158,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:9,performance,time,time,9,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:194,performance,error,error,194,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:264,performance,error,error,264,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:194,safety,error,error,194,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:264,safety,error,error,264,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:194,usability,error,error,194,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:252,usability,custom,custom,252,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:264,usability,error,error,264,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:32,availability,error,error,32,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:382,deployability,deploy,deployment,382,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:493,deployability,version,versions,493,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:533,deployability,version,versions,533,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:569,deployability,stack,stack,569,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:580,deployability,patch,patched,580,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:38,integrability,messag,messages,38,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:493,integrability,version,versions,493,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:533,integrability,version,versions,533,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:38,interoperability,messag,messages,38,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:267,interoperability,compatib,compatibility,267,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:493,modifiability,version,versions,493,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:533,modifiability,version,versions,533,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:32,performance,error,error,32,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:32,safety,error,error,32,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:123,safety,reme,remember,123,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:580,safety,patch,patched,580,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:580,security,patch,patched,580,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:32,usability,error,error,32,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion. This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:25,availability,error,error,25,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:31,integrability,messag,messages,31,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:31,interoperability,messag,messages,31,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:25,performance,error,error,25,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:25,safety,error,error,25,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:25,usability,error,error,25,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:227,deployability,version,versions,227,"So indeed, there is a path that lead to the new file inadvertently disabling the cleanup mechanism, so we will need to add an option. . > We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, . @pikacic What type of option is convenient/easy to add to your use cases? (`rootrc` or compilation flag or function call or ...?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:227,integrability,version,versions,227,"So indeed, there is a path that lead to the new file inadvertently disabling the cleanup mechanism, so we will need to add an option. . > We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, . @pikacic What type of option is convenient/easy to add to your use cases? (`rootrc` or compilation flag or function call or ...?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:227,modifiability,version,versions,227,"So indeed, there is a path that lead to the new file inadvertently disabling the cleanup mechanism, so we will need to add an option. . > We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, . @pikacic What type of option is convenient/easy to add to your use cases? (`rootrc` or compilation flag or function call or ...?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:135,interoperability,format,format,135,"The most practical way for us is a function call, followed by an option passed to `TFile::Open`. The idea is that we write the correct format by default, but for some specific grid jobs we switch to the legacy format (so rootrc and compilation flags are not applicable).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:167,interoperability,specif,specific,167,"The most practical way for us is a function call, followed by an option passed to `TFile::Open`. The idea is that we write the correct format by default, but for some specific grid jobs we switch to the legacy format (so rootrc and compilation flags are not applicable).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:210,interoperability,format,format,210,"The most practical way for us is a function call, followed by an option passed to `TFile::Open`. The idea is that we write the correct format by default, but for some specific grid jobs we switch to the legacy format (so rootrc and compilation flags are not applicable).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:9,reliability,pra,practical,9,"The most practical way for us is a function call, followed by an option passed to `TFile::Open`. The idea is that we write the correct format by default, but for some specific grid jobs we switch to the legacy format (so rootrc and compilation flags are not applicable).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:103,interoperability,compatib,compatible,103,"With https://github.com/root-project/root/pull/15006, you can use on the file that needs to be forward compatible:. ```. file->SetBit(TFile::k630forwardCompatibility);. ```. (of course before storing anything :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:45,energy efficiency,optim,optimal,45,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:472,interoperability,compatib,compatible,472,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:487,interoperability,incompatib,incompatible,487,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:158,modifiability,require chang,require changes,158,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:424,security,session,session,424,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:293,usability,user,user,293,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:390,usability,prefer,preferred,390,"On our end, the function in #15006 is not an optimal solution since we use external libraries (podio, edm4hep) that use ROOT to open files: this change would require changes in multiple places, including in community projects that may not be able to provide a single solution for their entire user base. A `rootrc` entry or a static `TFile::Set630ForwardCompatibility()` would therefore be preferred. Presumably, during one session, one would not intentionally write both compatible and incompatible files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:24,deployability,updat,updated,24,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:127,deployability,version,version,127,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:230,deployability,releas,releases,230,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:127,integrability,version,version,127,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:99,interoperability,compatib,compatible,99,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:127,modifiability,version,version,127,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
