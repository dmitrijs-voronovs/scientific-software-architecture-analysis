id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/16546:62,modifiability,interm,intermediate,62,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:104,modifiability,inherit,inherited,104,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:390,safety,test,tested,390,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:420,safety,updat,updated,420,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:156,security,expos,exposes,156,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:420,security,updat,updated,420,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16546:390,testability,test,tested,390,"[ntuple] allow double -> Real32Quant mapping; Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16546
https://github.com/root-project/root/pull/16547:57,energy efficiency,alloc,allocate,57,[ntuple] Make write buffer size configurable; Also don't allocate them when using `RProperFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16547
https://github.com/root-project/root/pull/16547:20,integrability,buffer,buffer,20,[ntuple] Make write buffer size configurable; Also don't allocate them when using `RProperFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16547
https://github.com/root-project/root/pull/16547:32,integrability,configur,configurable,32,[ntuple] Make write buffer size configurable; Also don't allocate them when using `RProperFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16547
https://github.com/root-project/root/pull/16547:32,modifiability,configur,configurable,32,[ntuple] Make write buffer size configurable; Also don't allocate them when using `RProperFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16547
https://github.com/root-project/root/pull/16547:32,security,configur,configurable,32,[ntuple] Make write buffer size configurable; Also don't allocate them when using `RProperFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16547
https://github.com/root-project/root/pull/16548:80,availability,failur,failures,80,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:80,deployability,fail,failures,80,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:80,performance,failur,failures,80,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:80,reliability,fail,failures,80,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:9,safety,Prevent,Prevent,9,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:71,safety,Prevent,Prevents,71,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:9,security,Preven,Prevent,9,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16548:71,security,Preven,Prevents,71,[PyROOT] Prevent construction of aggregate initializer for std::tuple; Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16548
https://github.com/root-project/root/pull/16550:304,deployability,updat,updated,304,"[DF] Also check if fOutputFiles is empty before warning untriggered snapshot; Fixes #14132. # This Pull request:. ## Changes or fixes:. Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:274,safety,test,tested,274,"[DF] Also check if fOutputFiles is empty before warning untriggered snapshot; Fixes #14132. # This Pull request:. ## Changes or fixes:. Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:304,safety,updat,updated,304,"[DF] Also check if fOutputFiles is empty before warning untriggered snapshot; Fixes #14132. # This Pull request:. ## Changes or fixes:. Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:304,security,updat,updated,304,"[DF] Also check if fOutputFiles is empty before warning untriggered snapshot; Fixes #14132. # This Pull request:. ## Changes or fixes:. Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16550:274,testability,test,tested,274,"[DF] Also check if fOutputFiles is empty before warning untriggered snapshot; Fixes #14132. # This Pull request:. ## Changes or fixes:. Also check if `fOutputFiles` is empty before giving warning ""A lazy Snapshot action was booked but never triggered"". ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #14132 (the other issue with broken `gDirectory` seems to have gone in latest ROOT (6.32.06), so can consider as this bug is fixed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16550
https://github.com/root-project/root/pull/16551:96,energy efficiency,draw,drawings,96,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:165,energy efficiency,draw,drawings,165,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:627,energy efficiency,load,loaded,627,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:335,integrability,batch,batch,335,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:367,interoperability,format,format,367,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:335,performance,batch,batch,335,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:627,performance,load,loaded,627,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:737,performance,Perform,Performance,737,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:506,security,control,control,506,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:1040,security,control,control,1040,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:506,testability,control,control,506,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:1040,testability,control,control,1040,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:119,usability,Support,Supported,119,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:737,usability,Perform,Performance,737,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/pull/16551:866,usability,support,support,866,"[webcanvas] implement PDF generation with jsPDF; With jsPDF and svg2pdf scripts one can convert drawings into the PDF. Supported also images which are created by 3D drawings. Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. . Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols. If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance. Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16551
https://github.com/root-project/root/issues/16552:222,availability,failur,failures,222,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2243,availability,avail,available,2243,"y: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2294,availability,operat,operations,2294,"/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2363,availability,operat,operations,2363,"C. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3611,availability,ERROR,ERROR,3611,"/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3663,availability,Error,Error,3663,"llest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3766,availability,error,error,3766,"t[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4015,availability,error,errors,4015,"/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4071,availability,unavail,unavailable,4071,"arning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4134,availability,unavail,unavailable,4134,"loat64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4197,availability,unavail,unavailable,4197,").flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4260,availability,unavail,unavailable,4260,"py/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4323,availability,unavail,unavailable,4323," subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4379,availability,unavail,unavailable,4379,"urn self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4442,availability,unavail,unavailable,4442,"01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4505,availability,unavail,unavailable,4505,"74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4568,availability,unavail,unavailable,4568,"eation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socke",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4631,availability,unavail,unavailable,4631," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4656,availability,ERROR,ERROR,4656," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4707,availability,unavail,unavailable,4707," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4765,availability,unavail,unavailable,4765," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4823,availability,unavail,unavailable,4823," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4881,availability,unavail,unavailable,4881," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4939,availability,unavail,unavailable,4939," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4990,availability,unavail,unavailable,4990," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5075,availability,Operat,Operating,5075," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:222,deployability,fail,failures,222,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:260,deployability,resourc,resources,260,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1041,deployability,build,build,1041,"k duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1135,deployability,build,build,1135," 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1209,deployability,modul,modules,1209,"had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1277,deployability,build,build,1277,"of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in perform",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3521,deployability,fail,failed,3521,"rning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3602,deployability,fail,failed,3602,"umpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3618,deployability,Fail,Failed,3618,"its.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3721,deployability,modul,modules,3721,"etattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 61657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3886,deployability,Fail,Failed,3886,"t subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavaila",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4050,deployability,Resourc,Resource,4050,"getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4113,deployability,Resourc,Resource,4113,"mal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4176,deployability,Resourc,Resource,4176,"d, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4239,deployability,Resourc,Resource,4239,"on3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4302,deployability,Resourc,Resource,4302,"e value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4358,deployability,Resourc,Resource,4358,"t64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4421,deployability,Resourc,Resource,4421,"normal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4484,deployability,Resourc,Resource,4484,"latform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4547,deployability,Resourc,Resource,4547,"ead tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4610,deployability,Resourc,Resource,4610," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4678,deployability,fail,failed,4678," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4686,deployability,Resourc,Resource,4686," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4744,deployability,Resourc,Resource,4744," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4802,deployability,Resourc,Resource,4802," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4860,deployability,Resourc,Resource,4860," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4918,deployability,Resourc,Resource,4918," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4969,deployability,Resourc,Resource,4969," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5017,deployability,version,version,5017," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5038,deployability,Instal,Installation,5038," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5064,deployability,build,build,5064," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:162,energy efficiency,core,cores,162,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:260,energy efficiency,resourc,resources,260,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1472,energy efficiency,model,model,1472,"yTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2160,energy efficiency,core,core,2160,"ome/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2226,energy efficiency,optim,optimized,2226,".cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2253,energy efficiency,CPU,CPU,2253,"e/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2610,energy efficiency,core,core,2610,"pting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2830,energy efficiency,core,core,2830,"register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. -----------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3049,energy efficiency,core,core,3049,"ter factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3269,energy efficiency,core,core,3269,"n performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3637,energy efficiency,model,model,3637,"ning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4050,energy efficiency,Resourc,Resource,4050,"getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4113,energy efficiency,Resourc,Resource,4113,"mal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4176,energy efficiency,Resourc,Resource,4176,"d, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4239,energy efficiency,Resourc,Resource,4239,"on3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4302,energy efficiency,Resourc,Resource,4302,"e value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4358,energy efficiency,Resourc,Resource,4358,"t64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4421,energy efficiency,Resourc,Resource,4421,"normal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4484,energy efficiency,Resourc,Resource,4484,"latform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4547,energy efficiency,Resourc,Resource,4547,"ead tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4610,energy efficiency,Resourc,Resource,4610," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4686,energy efficiency,Resourc,Resource,4686," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4744,energy efficiency,Resourc,Resource,4744," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4802,energy efficiency,Resourc,Resource,4802," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4860,energy efficiency,Resourc,Resource,4860," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4918,energy efficiency,Resourc,Resource,4918," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4969,energy efficiency,Resourc,Resource,4969," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5397,energy efficiency,CPU,CPU,5397," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5418,energy efficiency,CPU,CPU,5418," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5463,energy efficiency,Model,Model,5463," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5492,energy efficiency,Core,Core,5492," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5508,energy efficiency,CPU,CPU,5508," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5524,energy efficiency,Model,Model,5524," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5548,energy efficiency,core,core,5548," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5557,energy efficiency,Core,Core,5557," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2672,integrability,sub,subnormal,2672,"een registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2891,integrability,sub,subnormal,2891,"stered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3111,integrability,sub,subnormal,3111,"d. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Res",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3330,integrability,sub,subnormal,3330,"uctions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3755,integrability,messag,message,3755," word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource tempor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5017,integrability,version,version,5017," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1642,interoperability,plug,plugin,1642,"a-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1853,interoperability,plug,plugin,1853,"previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: User",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2067,interoperability,plug,plugin,2067,"test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2165,interoperability,platform,platform,2165,"nal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setatt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3487,interoperability,platform,platform,3487,"t/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3755,interoperability,messag,message,3755," word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource tempor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5569,interoperability,socket,socket,5569," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1209,modifiability,modul,modules,1209,"had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2595,modifiability,pac,packages,2595,"actory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2815,modifiability,pac,packages,2815,"ttempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3034,modifiability,pac,packages,3034,"ting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: sy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3254,modifiability,pac,packages,3254,"nstructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporaril",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3721,modifiability,modul,modules,3721,"etattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 61657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5017,modifiability,version,version,5017," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:222,performance,failur,failures,222,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:260,performance,resourc,resources,260,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1347,performance,time,time,1347,"PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2226,performance,optimiz,optimized,2226,".cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2253,performance,CPU,CPU,2253,"e/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2273,performance,perform,performance-critical,2273,"quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3611,performance,ERROR,ERROR,3611,"/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3663,performance,Error,Error,3663,"llest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3766,performance,error,error,3766,"t[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3803,performance,time,time,3803,"n3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Res",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3927,performance,time,time,3927,"type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3980,performance,time,time,3980,"_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4015,performance,error,errors,4015,"/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4050,performance,Resourc,Resource,4050,"getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4113,performance,Resourc,Resource,4113,"mal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4176,performance,Resourc,Resource,4176,"d, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4239,performance,Resourc,Resource,4239,"on3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4302,performance,Resourc,Resource,4302,"e value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4358,performance,Resourc,Resource,4358,"t64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4421,performance,Resourc,Resource,4421,"normal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4484,performance,Resourc,Resource,4484,"latform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4547,performance,Resourc,Resource,4547,"ead tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4610,performance,Resourc,Resource,4610," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4656,performance,ERROR,ERROR,4656," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4686,performance,Resourc,Resource,4686," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4744,performance,Resourc,Resource,4744," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4802,performance,Resourc,Resource,4802," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4860,performance,Resourc,Resource,4860," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4918,performance,Resourc,Resource,4918," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4969,performance,Resourc,Resource,4969," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5397,performance,CPU,CPU,5397," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5418,performance,CPU,CPU,5418," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5508,performance,CPU,CPU,5508," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:222,reliability,fail,failures,222,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2243,reliability,availab,available,2243,"y: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3521,reliability,fail,failed,3521,"rning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3602,reliability,fail,failed,3602,"umpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3618,reliability,Fail,Failed,3618,"its.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3886,reliability,Fail,Failed,3886,"t subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavaila",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4678,reliability,fail,failed,4678," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:260,safety,resourc,resources,260,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:292,safety,test,test,292,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:865,safety,test,test,865,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:902,safety,Test,Testing,902,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:948,safety,Test,Test,948,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1070,safety,test,test,1070,"ecked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1075,safety,test,testPyKerasClassification,1075,"ates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1209,safety,modul,modules,1209,"had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1306,safety,test,test,1306,"```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1444,safety,test,test,1444,"torial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2243,safety,avail,available,2243,"y: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3611,safety,ERROR,ERROR,3611,"/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3663,safety,Error,Error,3663,"llest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3721,safety,modul,modules,3721,"etattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 61657",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3766,safety,error,error,3766,"t[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3798,safety,Test,Test,3798,"python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3881,safety,Test,Test,3881,"mallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4015,safety,error,errors,4015,"/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4050,safety,Resourc,Resource,4050,"getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4113,safety,Resourc,Resource,4113,"mal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4176,safety,Resourc,Resource,4176,"d, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4239,safety,Resourc,Resource,4239,"on3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4302,safety,Resourc,Resource,4302,"e value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4358,safety,Resourc,Resource,4358,"t64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4421,safety,Resourc,Resource,4421,"normal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4484,safety,Resourc,Resource,4484,"latform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4547,safety,Resourc,Resource,4547,"ead tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4610,safety,Resourc,Resource,4610," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4656,safety,ERROR,ERROR,4656," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4686,safety,Resourc,Resource,4686," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4744,safety,Resourc,Resource,4744," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4802,safety,Resourc,Resource,4802," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4860,safety,Resourc,Resource,4860," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4918,safety,Resourc,Resource,4918," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4969,safety,Resourc,Resource,4969," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1472,security,model,model,1472,"yTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2243,security,availab,available,2243,"y: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3637,security,model,model,3637,"ning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5161,security,access,access,5161," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5449,security,Auth,AuthenticAMD,5449," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5463,security,Model,Model,5463," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5524,security,Model,Model,5524," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5569,security,soc,socket,5569," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:260,testability,resourc,resources,260,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:292,testability,test,test,292,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:361,testability,Regress,Regression,361,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:865,testability,test,test,865,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:902,testability,Test,Testing,902,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:948,testability,Test,Test,948,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1070,testability,test,test,1070,"ecked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1075,testability,test,testPyKerasClassification,1075,"ates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1306,testability,test,test,1306,"```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:1444,testability,test,test,1444,"torial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3798,testability,Test,Test,3798,"python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3881,testability,Test,Test,3881,"mallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4050,testability,Resourc,Resource,4050,"getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4113,testability,Resourc,Resource,4113,"mal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4176,testability,Resourc,Resource,4176,"d, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4239,testability,Resourc,Resource,4239,"on3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4302,testability,Resourc,Resource,4302,"e value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4358,testability,Resourc,Resource,4358,"t64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4421,testability,Resourc,Resource,4421,"normal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4484,testability,Resourc,Resource,4484,"latform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4547,testability,Resourc,Resource,4547,"ead tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4610,testability,Resourc,Resource,4610," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4686,testability,Resourc,Resource,4686," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4744,testability,Resourc,Resource,4744," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4802,testability,Resourc,Resource,4802," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4860,testability,Resourc,Resource,4860," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4918,testability,Resourc,Resource,4918," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4969,testability,Resourc,Resource,4969," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:5116,testability,context,context,5116," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:982,usability,Command,Command,982,"roottest running out of threads !?; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:. ```. 47:PyMVA-Keras-Classification . 348:PyMVA-Keras-Regression . 349:PyMVA-Keras-Multiclass . 985:tutorial-tmva-TMVA_SOFIE_Keras. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py . 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py . 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py . 1252:tutorial-tmva-keras-GenerateModel-py . 1253:tutorial-tmva-keras-MulticlassKeras-py . 1584:roottest-root-io-evolution-make . 1641:roottest-root-io-newstl-make. ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```. 347/2278 Testing: PyMVA-Keras-Classification. 347/2278 Test: PyMVA-Keras-Classification. Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake"". Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Una",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2273,usability,perform,performance-critical,2273,"quick-devel/tmva/pymva/test. ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC. Output:. ----------------------------------------------------------. Get test data... Generate keras model... 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2633,usability,User,UserWarning,2633,"or plugin cuDNN when one has already been registered. 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate mo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:2852,usability,User,UserWarning,2852,"n cuFFT when one has already been registered. 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3072,usability,User,UserWarning,3072,"AS when one has already been registered. 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3291,usability,User,UserWarning,3291,"rations. To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT. /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3611,usability,ERROR,ERROR,3611,"/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Reso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3663,usability,Error,Error,3663,"llest subnormal for <class 'numpy.float32'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:3766,usability,error,error,3766,"t[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero. return self._float_to_str(self.smallest_subnormal). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4015,usability,error,errors,4015,"/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. setattr(self, word, getattr(machar, word).flat[0]). /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero. return self._float_to_str(self.smallest_subnormal). 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16552:4656,usability,ERROR,ERROR,4656," pthread_create() failed. [ERROR] Failed to generate model using python. CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. <end of output>. Test time = 54.61 sec. ----------------------------------------------------------. Test Failed. ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC. ""PyMVA-Keras-Classification"" time elapsed: 00:00:54. ```. Other errors:. ```. 14323: system_error: Resource temporarily unavailable. 614356:/bin/sh: fork: retry: Resource temporarily unavailable. 614357:/bin/sh: fork: retry: Resource temporarily unavailable. 614358:/bin/sh: fork: retry: Resource temporarily unavailable. 614359:/bin/sh: fork: retry: Resource temporarily unavailable. 614360:/bin/sh: fork: Resource temporarily unavailable. 614444:/bin/sh: fork: retry: Resource temporarily unavailable. 614445:/bin/sh: fork: retry: Resource temporarily unavailable. 614446:/bin/sh: fork: retry: Resource temporarily unavailable. 614447:/bin/sh: fork: retry: Resource temporarily unavailable. 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable. 616573:sh: fork: retry: Resource temporarily unavailable. 616574:sh: fork: retry: Resource temporarily unavailable. 616575:sh: fork: retry: Resource temporarily unavailable. 616576:sh: fork: retry: Resource temporarily unavailable. 616577:sh: fork: Resource temporarily unavailable. ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a. Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. ```. CPU(s): 127. On-line CPU(s) list: 0-126. Vendor ID: AuthenticAMD. Model name: AMD EPYC 7543 32-Core Processor. CPU family: 25. Model: 1. Thread(s) per core: 1. Core(s) per socket: 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16552
https://github.com/root-project/root/issues/16553:1330,availability,error,errors,1330,"MVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). Howeve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1632,availability,error,error,1632,"90:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1739,availability,error,error,1739,"-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2405,availability,failur,failures,2405,"l 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2436,availability,failur,failures,2436,"king [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3266,availability,failur,failures,3266,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3384,availability,Operat,Operating,3384,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:8,deployability,depend,dependency,8,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:208,deployability,fail,failed,208,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:251,deployability,fail,failes,251,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:273,deployability,resourc,resources,273,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:988,deployability,fail,failed,988,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1008,deployability,resourc,resources,1008,"dency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsMod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1925,deployability,depend,dependencies,1925,"ticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1943,deployability,fail,failed,1943,". ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2388,deployability,resourc,resource,2388,"teFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operatin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2405,deployability,fail,failures,2405,"l 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2436,deployability,fail,failures,2436,"king [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3106,deployability,fail,failing,3106,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3183,deployability,version,version,3183,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3257,deployability,resourc,resource,3257,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3266,deployability,fail,failures,3266,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3290,deployability,fail,failed,3290,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3325,deployability,version,version,3325,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3347,deployability,Instal,Installation,3347,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3373,deployability,build,build,3373,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:151,energy efficiency,core,cores,151,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:273,energy efficiency,resourc,resources,273,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1008,energy efficiency,resourc,resources,1008,"dency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsMod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2388,energy efficiency,resourc,resource,2388,"teFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operatin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3257,energy efficiency,resourc,resource,3257,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:8,integrability,depend,dependency,8,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1452,integrability,interfac,interface,1452,"Keras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1559,integrability,interfac,interface,1559,"TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1925,integrability,depend,dependencies,1925,"ticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2791,integrability,interfac,interface,2791,"clude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2917,integrability,interfac,interface,2917,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3024,integrability,interfac,interface,3024,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3183,integrability,version,version,3183,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3325,integrability,version,version,3325,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1452,interoperability,interfac,interface,1452,"Keras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1559,interoperability,interfac,interface,1559,"TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2791,interoperability,interfac,interface,2791,"clude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2917,interoperability,interfac,interface,2917,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3024,interoperability,interfac,interface,3024,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3787,interoperability,share,shared,3787,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3846,interoperability,xml,xml,3846,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:8,modifiability,depend,dependency,8,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1452,modifiability,interfac,interface,1452,"Keras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1559,modifiability,interfac,interface,1559,"TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1925,modifiability,depend,dependencies,1925,"ticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2791,modifiability,interfac,interface,2791,"clude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2917,modifiability,interfac,interface,2917,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3024,modifiability,interfac,interface,3024,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3144,modifiability,pac,package,3144,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3183,modifiability,version,version,3183,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3325,modifiability,version,version,3325,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:273,performance,resourc,resources,273,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1008,performance,resourc,resources,1008,"dency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsMod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1330,performance,error,errors,1330,"MVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). Howeve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1632,performance,error,error,1632,"90:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1739,performance,error,error,1739,"-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2362,performance,time,time,2362,". IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation meth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2388,performance,resourc,resource,2388,"teFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operatin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2405,performance,failur,failures,2405,"l 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2436,performance,failur,failures,2436,"king [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3257,performance,resourc,resource,3257,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3266,performance,failur,failures,3266,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:208,reliability,fail,failed,208,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:251,reliability,fail,failes,251,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:988,reliability,fail,failed,988,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1943,reliability,fail,failed,1943,". ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2405,reliability,fail,failures,2405,"l 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2436,reliability,fail,failures,2436,"king [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3106,reliability,fail,failing,3106,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3157,reliability,doe,does,3157,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3266,reliability,fail,failures,3266,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3290,reliability,fail,failed,3290,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:8,safety,depend,dependency,8,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:39,safety,test,test,39,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:246,safety,test,test,246,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:273,safety,resourc,resources,273,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:436,safety,test,test-TestRModelParserKeras,436,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:976,safety,test,tests,976,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1008,safety,resourc,resources,1008,"dency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsMod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1071,safety,test,test-TestRModelParserKeras,1071," [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1330,safety,error,errors,1330,"MVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). Howeve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1632,safety,error,error,1632,"90:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1739,safety,error,error,1739,"-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1813,safety,test,tests,1813,"247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1925,safety,depend,dependencies,1925,"ticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2255,safety,test,test-TestRModelParserKeras,2255,"Reader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2388,safety,resourc,resource,2388,"teFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operatin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2473,safety,test,test-TestRModelParserPyTorch,2473,"cutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2524,safety,test,test-TestRModelParserKeras,2524," while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3257,safety,resourc,resource,3257,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3801,security,ssl,ssl,3801,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:8,testability,depend,dependency,8,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:39,testability,test,test,39,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:246,testability,test,test,246,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:273,testability,resourc,resources,273,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:375,testability,Regress,Regression,375,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:436,testability,test,test-TestRModelParserKeras,436,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:976,testability,test,tests,976,"Missing dependency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_K",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1008,testability,resourc,resources,1008,"dency or clean up in TMVA test/tutorials; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsMod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1071,testability,test,test-TestRModelParserKeras,1071," [ ] Checked for duplicates. ### Description. On a large node (127 cores, 128 GB), I ran:. 1. ctest -j 32. 2. ctest --rerun-failed. 3. ctest -j 32. After 1. many test failes due to lack of resources (running out of threads, see #16552 ):. ```. 47:PyMVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1813,testability,test,tests,1813,"247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1925,testability,depend,dependencies,1925,"ticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface func",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2255,testability,test,test-TestRModelParserKeras,2255,"Reader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2388,testability,resourc,resource,2388,"teFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operatin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2473,testability,test,test-TestRModelParserPyTorch,2473,"cutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:2524,testability,test,test-TestRModelParserKeras,2524," while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3257,testability,resourc,resource,3257,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:3424,testability,context,context,3424,"d `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. or both. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! ```. Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number? ### Reproducer. ```. ctest -j 32 # and get lots of out of resource failures. ctest --rerun-failed. ctest -j 32. ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```. jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features. cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-pymva tpython spectrum vdt x11 xml xrootd. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1330,usability,error,errors,1330,"MVA-Keras-Classification. 348:PyMVA-Keras-Regression. 349:PyMVA-Keras-Multiclass. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 985:tutorial-tmva-TMVA_SOFIE_Keras. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). Howeve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1632,usability,error,error,1632,"90:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1238:tutorial-tmva-RBatchGenerator_PyTorch-py. 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/issues/16553:1739,usability,error,error,1739,"-RBatchGenerator_TensorFlow-py. 1246:tutorial-tmva-TMVA_SOFIE_Models-py. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. 1252:tutorial-tmva-keras-GenerateModel-py. 1253:tutorial-tmva-keras-MulticlassKeras-py. ```. However in 2., several tests still failed (even-though resources where no longer an issue):. ```. 50:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py. ```. The errors listed there included:. ```. IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]! IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]! tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found. /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found. ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:. ```. 346:gtest-tmva-pymva-test-TestRModelParserPyTorch. 350:gtest-tmva-pymva-test-TestRModelParserKeras. 984:tutorial-tmva-TMVA_SOFIE_GNN_Application. 988:tutorial-tmva-TMVA_SOFIE_RDataFrame. 990:tutorial-tmva-TMVA_SOFIE_RSofieReader. ```. all due to:. ```. IncrementalExecutor::executeFunction:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16553
https://github.com/root-project/root/pull/16554:283,availability,avail,available,283,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:114,deployability,patch,patches,114,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:368,deployability,version,version,368,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:556,deployability,version,version,556,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:725,deployability,version,version,725,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:913,deployability,version,version,913,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1015,deployability,version,version,1015,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1094,deployability,version,version-min,1094,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1189,deployability,patch,patched,1189,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1477,deployability,patch,patch,1477,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:756,energy efficiency,CPU,CPUs,756,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:368,integrability,version,version,368,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:556,integrability,version,version,556,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:725,integrability,version,version,725,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:913,integrability,version,version,913,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1015,integrability,version,version,1015,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1094,integrability,version,version-min,1094,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:368,modifiability,version,version,368,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:556,modifiability,version,version,556,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:725,modifiability,version,version,725,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:913,modifiability,version,version,913,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1015,modifiability,version,version,1015,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1094,modifiability,version,version-min,1094,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:756,performance,CPU,CPUs,756,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:283,reliability,availab,available,283,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:983,reliability,pra,practice,983,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:114,safety,patch,patches,114,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:283,safety,avail,available,283,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1189,safety,patch,patched,1189,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1477,safety,patch,patch,1477,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:114,security,patch,patches,114,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:283,security,availab,available,283,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1189,security,patch,patched,1189,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1477,security,patch,patch,1477,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:643,testability,simpl,simplifications,643,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:643,usability,simpl,simplifications,643,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:739,usability,support,supported,739,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:869,usability,effectiv,effectively,869,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:897,usability,support,supported,897,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:997,usability,minim,minimum,997,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16554:1005,usability,support,supported,1005,"[CMake] Assume macOS 10.15 Catalina or newer; **TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that. supported 32 bit CPUs was 10.14 Mojave, end-of-life since three. years: https://en.wikipedia.org/wiki/MacOS_version_history. This effectively sets our oldest supported macOS version to 10.15. from the perspective of CMake (although, I think in practice the. minimum supported version is probably newer because of LLVM. constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,. which I believe is not needed anymore. It is also patched out in. nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16554
https://github.com/root-project/root/pull/16555:16,deployability,depend,dependencies,16,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:96,deployability,depend,dependencies,96,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:16,integrability,depend,dependencies,16,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:96,integrability,depend,dependencies,96,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:16,modifiability,depend,dependencies,16,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:96,modifiability,depend,dependencies,96,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:16,safety,depend,dependencies,16,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:96,safety,depend,dependencies,96,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:16,testability,depend,dependencies,16,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16555:96,testability,depend,dependencies,96,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py; fixes the issues about dependencies mentioned in #16553.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16555
https://github.com/root-project/root/pull/16556:505,deployability,API,API,505,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:505,integrability,API,API,505,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:505,interoperability,API,API,505,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:264,reliability,doe,doesn,264,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:509,safety,review,review,509,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:509,testability,review,review,509,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:70,usability,support,support,70,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16556:190,usability,support,support,190,"[ntuple] Improve views; Based on the discussion in #16363, remove the support for `RField<T>::Map()` from `RNTupleView<T>`. A separate class `RNTupleDirectAccessView<T>` now implements that support. As a result, the RNTuple view is streamlined such that the class doesn't distinguish between ""owned"" and ""unowned"". This is now handled at runtime through the `RFieldBase::RValue` of the view. Also adds an `RNTupleReader::GetView()` overload that takes a raw pointer, addressing point 7 of the HEP-CCE/SOP API review. Fixes #16321 . @Dr15Jones This should fix the use of `std::optional<ROOT::Experimental::RNTupleView<edm::RunAuxiliary>>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16556
https://github.com/root-project/root/pull/16557:94,integrability,interfac,interface,94,[ntuple] add default constructor to REntry::RFieldToken; Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16557
https://github.com/root-project/root/pull/16557:94,interoperability,interfac,interface,94,[ntuple] add default constructor to REntry::RFieldToken; Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16557
https://github.com/root-project/root/pull/16557:94,modifiability,interfac,interface,94,[ntuple] add default constructor to REntry::RFieldToken; Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16557
https://github.com/root-project/root/pull/16557:104,safety,review,review,104,[ntuple] add default constructor to REntry::RFieldToken; Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16557
https://github.com/root-project/root/pull/16557:104,testability,review,review,104,[ntuple] add default constructor to REntry::RFieldToken; Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16557
https://github.com/root-project/root/pull/16558:54,energy efficiency,model,model,54,[skip-ci][NFC][ntuple] clarify column order with late model extension; Fixes #16513,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16558
https://github.com/root-project/root/pull/16558:60,modifiability,extens,extension,60,[skip-ci][NFC][ntuple] clarify column order with late model extension; Fixes #16513,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16558
https://github.com/root-project/root/pull/16558:54,security,model,model,54,[skip-ci][NFC][ntuple] clarify column order with late model extension; Fixes #16513,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16558
https://github.com/root-project/root/issues/16560:1555,availability,Operat,Operating,1555,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1400,deployability,version,version,1400,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1422,deployability,Instal,Installation,1422,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:354,energy efficiency,load,load,354,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:707,energy efficiency,Draw,Draw,707,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:812,energy efficiency,Draw,Draw,812,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:882,energy efficiency,load,load,882,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:979,energy efficiency,Draw,Draw,979,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:489,integrability,sub,subconveners,489,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1400,integrability,version,version,1400,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:45,interoperability,format,format,45,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:340,interoperability,format,formats,340,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1400,modifiability,version,version,1400,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:354,performance,load,load,354,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:882,performance,load,load,882,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:601,safety,test,test,601,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:608,safety,Test,Test,608,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:601,testability,test,test,601,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:608,testability,Test,Test,608,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/issues/16560:1603,testability,context,context,1603,"Issue using TColor and saving canvas to ROOT format; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:. ```C++. {. TRandom3 r;. TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);. for (int i=0;i<=1000;++i) {. h.Fill(r.Rndm());. }. TCanvas c = TCanvas();. c.Draw();. h.SetFillStyle(1001);. h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);. h.Draw(""HIST"");. c.SaveAs(""c.root"");. c.SaveAs(""c.png"");. }. ```. and a load.C macro:. ``` C++. {. TFile *f = new TFile(""c.root"");. TH1F *h1 = (TH1F*)f->Get(""c1"");. h1->Draw();. h1->SaveAs(""loaded_c.png""). }. ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16560
https://github.com/root-project/root/pull/16561:202,deployability,upgrad,upgrade,202,"[jsroot] 7.7.4 30/09/2024 for 6.32 branch; 1. Fix - TGraph Y range selection, do not cross 0. 2. Fix - correctly handle `#font[id]` in latex. 3. Fix - store canvas with embed geometry drawing. 4. Fix - upgrade rollup and exclude import.meta polyfill. 5. Fix - correctly handle in I/O empty std::map. 6. Fix - reading of small (<1KB) ROOT files. 7. Fix - race condition in zstd initialization #318.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/pull/16561:210,deployability,roll,rollup,210,"[jsroot] 7.7.4 30/09/2024 for 6.32 branch; 1. Fix - TGraph Y range selection, do not cross 0. 2. Fix - correctly handle `#font[id]` in latex. 3. Fix - store canvas with embed geometry drawing. 4. Fix - upgrade rollup and exclude import.meta polyfill. 5. Fix - correctly handle in I/O empty std::map. 6. Fix - reading of small (<1KB) ROOT files. 7. Fix - race condition in zstd initialization #318.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/pull/16561:184,energy efficiency,draw,drawing,184,"[jsroot] 7.7.4 30/09/2024 for 6.32 branch; 1. Fix - TGraph Y range selection, do not cross 0. 2. Fix - correctly handle `#font[id]` in latex. 3. Fix - store canvas with embed geometry drawing. 4. Fix - upgrade rollup and exclude import.meta polyfill. 5. Fix - correctly handle in I/O empty std::map. 6. Fix - reading of small (<1KB) ROOT files. 7. Fix - race condition in zstd initialization #318.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/pull/16561:202,modifiability,upgrad,upgrade,202,"[jsroot] 7.7.4 30/09/2024 for 6.32 branch; 1. Fix - TGraph Y range selection, do not cross 0. 2. Fix - correctly handle `#font[id]` in latex. 3. Fix - store canvas with embed geometry drawing. 4. Fix - upgrade rollup and exclude import.meta polyfill. 5. Fix - correctly handle in I/O empty std::map. 6. Fix - reading of small (<1KB) ROOT files. 7. Fix - race condition in zstd initialization #318.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/pull/16561:280,performance,I/O,I/O,280,"[jsroot] 7.7.4 30/09/2024 for 6.32 branch; 1. Fix - TGraph Y range selection, do not cross 0. 2. Fix - correctly handle `#font[id]` in latex. 3. Fix - store canvas with embed geometry drawing. 4. Fix - upgrade rollup and exclude import.meta polyfill. 5. Fix - correctly handle in I/O empty std::map. 6. Fix - reading of small (<1KB) ROOT files. 7. Fix - race condition in zstd initialization #318.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16561
https://github.com/root-project/root/issues/16562:297,availability,error,error,297,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:350,availability,sla,slash,350,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:555,availability,Operat,Operating,555,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:337,deployability,contain,contains,337,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:499,deployability,version,version,499,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:521,deployability,Instal,Installation,521,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:250,energy efficiency,load,load,250,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:499,integrability,version,version,499,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:499,modifiability,version,version,499,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:250,performance,load,load,250,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:297,performance,error,error,297,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:350,reliability,sla,slash,350,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:297,safety,error,error,297,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:17,security,session,session,17,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:225,security,session,session,225,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:255,security,Session,Session,255,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:599,testability,context,context,599,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:297,usability,error,error,297,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/issues/16562:629,usability,help,help,629,"TTreeViewer save session absolute path; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error. Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16562
https://github.com/root-project/root/pull/16565:54,deployability,build,builds,54,Try using ccache in CI; - Enable ccache for arm linux builds. - Add steps that print ccache stats.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16565
https://github.com/root-project/root/pull/16568:69,availability,down,downstream,69,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:12,deployability,build,build,12,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:1,energy efficiency,Core,Core,1,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:80,modifiability,pac,packages,80,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:18,safety,test,test,18,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:43,safety,test,testing,43,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:18,testability,test,test,18,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:43,testability,test,testing,43,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16568:23,usability,support,support,23,[Core] Also build test support in case of `testing=OFF`; This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16568
https://github.com/root-project/root/pull/16569:115,integrability,repositor,repository,115,webgui: Disable tutorials that requires webgui (when off); testing github ... this commit should already be in the repository.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16569
https://github.com/root-project/root/pull/16569:115,interoperability,repositor,repository,115,webgui: Disable tutorials that requires webgui (when off); testing github ... this commit should already be in the repository.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16569
https://github.com/root-project/root/pull/16569:59,safety,test,testing,59,webgui: Disable tutorials that requires webgui (when off); testing github ... this commit should already be in the repository.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16569
https://github.com/root-project/root/pull/16569:59,testability,test,testing,59,webgui: Disable tutorials that requires webgui (when off); testing github ... this commit should already be in the repository.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16569
https://github.com/root-project/root/pull/16572:108,deployability,log,logN,108,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:130,deployability,log,log,130,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:134,deployability,scale,scales,134,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:197,deployability,scale,scales,197,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:447,deployability,Updat,Update,447,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:95,energy efficiency,draw,drawing,95,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:134,energy efficiency,scale,scales,134,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:197,energy efficiency,scale,scales,197,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:225,energy efficiency,draw,drawing,225,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:134,modifiability,scal,scales,134,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:197,modifiability,scal,scales,197,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:134,performance,scale,scales,134,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:197,performance,scale,scales,197,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:108,safety,log,logN,108,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:130,safety,log,log,130,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:447,safety,Updat,Update,447,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:543,safety,test,testing,543,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:108,security,log,logN,108,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:130,security,log,log,130,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:447,security,Updat,Update,447,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:108,testability,log,logN,108,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:130,testability,log,log,130,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:543,testability,test,testing,543,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:169,usability,interact,interactive,169,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:360,usability,support,support,360,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:400,usability,custom,custom,400,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/pull/16572:437,usability,support,support,437,"[webcanv] introduce dedicated TWebCanvas tutorials; 1. `haxis.cxx` - horizontal Y axis and TH1 drawing. 2. `logN.cxx` - different log scales. 3. `twoscales.cxx` - fully interactive two Y and two X scales . 4. `inframe.cxx` - drawing text, line, rect, marker in the frame with clipping. 5. `latex_url.cxx` - demo for `#url[link]{label}` functionality (with PDF support). 6. `fonts_ttf.cxx` - using of custom TTF fonts in canvas (with PDF support). Update JSROOT which implements now `#url[link]{label}` in latex parsing. Add tutorial macros in testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16572
https://github.com/root-project/root/issues/16573:954,availability,fault,faulty,954,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:954,energy efficiency,fault,faulty,954,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:652,modifiability,paramet,parameters,652,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:759,modifiability,paramet,parameter,759,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:954,performance,fault,faulty,954,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:786,reliability,doe,does,786,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:954,reliability,fault,faulty,954,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:485,safety,accid,accidentally,485,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:954,safety,fault,faulty,954,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:597,usability,experien,experience,597,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:612,usability,user,users,612,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/issues/16573:909,usability,user,users,909,"[PyROOT] Overloads like `foo(bool)` `foo(double)` not correctly resolved; Reproducer:. ```. python. >>> import ROOT. >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""). 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1"". ```. Should be like in C++:. ```c++. root [1] RooFit::Minos(1).getSet(0). (const RooArgSet *) nullptr. ```. The function has overloads like this:. ```. RooCmdArg Minos(bool);. RooCmdArg Minos(RooArgSet const&);. ```. The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16573
https://github.com/root-project/root/pull/16574:242,deployability,observ,observable,242,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:352,deployability,observ,observable,352,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:159,safety,compl,complain,159,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:159,security,compl,complain,159,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:201,security,hardcod,hardcoded,201,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:242,testability,observ,observable,242,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:352,testability,observ,observable,352,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16574:144,usability,user,users,144,"[RF] Remove warnings about large pdf values and just check for infinity; Usually, when this warning happens, it's a false positive that annoys. users and they complain about it. Since the threshold is hardcoded, it. happens usually when your observable domains are narrow and the. probability density is high, i.e. when the order of magnitude of your. observable is small. For example, when you have a uniform in the range 0.0 to 1.1e-6, you'll. get this warning for every pdf evaluation for no reason. Or if you have a RooProdPdf, this can happen even more easily: the. product of two uniforms over the domain 0.0 to 1.1e-3 each will also. reach the 1e-6 threshold. So it's better to only check for infinite values, which was probably the. intention anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16574
https://github.com/root-project/root/pull/16575:24,interoperability,bind,bindFunction,24,[RF] Generalize RooFit::bindFunction() pythonization also to bindPdf(); As requested by @will-cern.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16575
https://github.com/root-project/root/pull/16575:61,interoperability,bind,bindPdf,61,[RF] Generalize RooFit::bindFunction() pythonization also to bindPdf(); As requested by @will-cern.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16575
https://github.com/root-project/root/pull/16575:24,modifiability,bind,bindFunction,24,[RF] Generalize RooFit::bindFunction() pythonization also to bindPdf(); As requested by @will-cern.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16575
https://github.com/root-project/root/pull/16575:61,modifiability,bind,bindPdf,61,[RF] Generalize RooFit::bindFunction() pythonization also to bindPdf(); As requested by @will-cern.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16575
https://github.com/root-project/root/issues/16577:309,availability,sli,slightly,309,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:379,availability,error,error,379,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:499,availability,error,errors,499,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:519,availability,state,state,519,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:658,availability,operat,operator,658,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1413,availability,error,error,1413,"but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1671,availability,operat,operator,1671,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:2401,availability,Operat,Operating,2401,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:26,deployability,fail,failed,26,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:54,deployability,rollback,rollback,54,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:359,deployability,fail,fails,359,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:480,deployability,fail,fail,480,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:543,deployability,roll,rolled,543,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1886,deployability,version,version,1886,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:2361,deployability,Instal,Installation,2361,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:268,energy efficiency,current,current,268,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1648,energy efficiency,alloc,allocator,1648,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:385,integrability,messag,messages,385,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:519,integrability,state,state,519,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:624,integrability,pub,public,624,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1886,integrability,version,version,1886,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:385,interoperability,messag,messages,385,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1437,modifiability,variab,variable,1437,"e second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1741,modifiability,variab,variable,1741,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1886,modifiability,version,version,1886,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:379,performance,error,error,379,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:499,performance,error,errors,499,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1413,performance,error,error,1413,"but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:26,reliability,fail,failed,26,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:54,reliability,rollback,rollback,54,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:309,reliability,sli,slightly,309,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:359,reliability,fail,fails,359,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:480,reliability,fail,fail,480,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:291,safety,test,test,291,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:379,safety,error,error,379,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:499,safety,error,errors,499,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:572,safety,test,test,572,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:845,safety,test,testdeclare,845,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:922,safety,test,test,922,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1400,safety,test,test,1400,"irst attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1413,safety,error,error,1413,"but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1559,safety,test,test,1559,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1722,safety,test,test,1722,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:54,security,rollback,rollback,54,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:2041,security,Team,Team,2041,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:291,testability,test,test,291,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:572,testability,test,test,572,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:845,testability,test,testdeclare,845,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:922,testability,test,test,922,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1400,testability,test,test,1400,"irst attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1559,testability,test,test,1559,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1722,testability,test,test,1722,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:2450,testability,context,context,2450,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:13,usability,behavi,behaviour,13,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:379,usability,error,error,379,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:499,usability,error,errors,499,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:614,usability,Help,Helper,614,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:633,usability,Help,Helper,633,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:808,usability,help,helper,808,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:826,usability,help,helper,826,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:983,usability,help,helper,983,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:993,usability,help,helper,993,"Inconsistent behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1007,usability,Help,Helper,1007,"nt behaviour on failed jitting (transaction rollback issue?); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1093,usability,Help,Helper,1093,"es. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1128,usability,Help,Helper,1128,"## Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1331,usability,help,helper,1331," still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1413,usability,error,error,1413,"but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating syste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1616,usability,Help,Helper,1616,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:1706,usability,help,helper,1706,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16577:2223,usability,help,help,2223,"t it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h. ```. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. testdeclare.py. ```. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""header include ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):. print(f""declare attempt {i}""). ret = ROOT.gInterpreter.Declare(bad_template). print(""ret"", ret). ```. output:. ```. header include ret True. creating helper. declare attempt 0. In file included from input_line_34:1:. ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. ./test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. ret False. declare attempt 1. ret True. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16577
https://github.com/root-project/root/issues/16578:123,availability,error,errors,123,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:149,availability,failur,failure,149,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:1386,availability,operat,operator,1386,"h). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (double *x, double *p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3) + p[4]*std::pow(xscaled,4);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:2026,availability,operat,operator,2026,"===================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (double *x, double *p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3) + p[4]*std::pow(xscaled,4);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 5;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. // // TODO: could use a generic polynomial using previous classes. // class erfPol2_custom {. // public:. // erfPol2_custom() {};. // erfPol2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:2767,availability,operat,operator,2767,"polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (double *x, double *p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3) + p[4]*std::pow(xscaled,4);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 5;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. // // TODO: could use a generic polynomial using previous classes. // class erfPol2_custom {. // public:. // erfPol2_custom() {};. // erfPol2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3452,availability,operat,operator,3452,"le xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. // // TODO: could use a generic polynomial using previous classes. // class erfPol2_custom {. // public:. // erfPol2_custom() {};. // erfPol2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10831,availability,error,error,10831,"Content(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10988,availability,operat,operator,10988,". ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28617,availability,Operat,Operating,28617,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:9,deployability,fail,failed,9,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:149,deployability,fail,failure,149,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:196,deployability,manag,manage,196,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:297,deployability,depend,dependency,297,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10710,deployability,modul,module,10710,"im_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:11236,deployability,Build,Build,11236,". . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:11293,deployability,Build,Build,11293,"ar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:12883,deployability,stack,stack,12883,"c14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(T *, double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:225:12: note: candidate template ignored: could not match 'T (T *, double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(T *, double *) const) -> decltype(opPtr). ^. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170294af in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:13129,deployability,Stack,StackTrace,13129," -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(T *, double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:225:12: note: candidate template ignored: could not match 'T (T *, double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(T *, double *) const) -> decltype(opPtr). ^. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170294af in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:14804,deployability,unload,unloadDeclarations,14804,"d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:15193,deployability,unload,unload,15193,"Unloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16750,deployability,stack,stack,16750,"ling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f018",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:17206,deployability,stack,stack,17206,"42 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:18567,deployability,unload,unloadDeclarations,18567,"d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:18956,deployability,unload,unload,18956,"Unloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:20554,deployability,stack,stack,20554,"ringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:20800,deployability,Stack,StackTrace,20800,"std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:22475,deployability,unload,unloadDeclarations,22475,"d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:22864,deployability,unload,unload,22864,"Unloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24421,deployability,stack,stack,24421,"ling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f018",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24877,deployability,stack,stack,24877,"42 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:26238,deployability,unload,unloadDeclarations,26238,"d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:26627,deployability,unload,unload,26627,"Unloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemplateSpecializationDecl(clang::ClassTemplateSpecializationDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #12 0x00007f7f017d02a5 in cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #13 0x00007f7f017d0792 in cling::TransactionUnloader::RevertTransaction(cling::Transaction*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28102,deployability,version,version,28102,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28577,deployability,Instal,Installation,28577,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:196,energy efficiency,manag,manage,196,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3910,energy efficiency,current,currently,3910,")) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);. TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);. TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 + TMath::Erf((x-[1])/[2]))"", ptmin_, ptmax_);. pol3_custom pol3_tf_;. TF1* tf1_pol3_tf_ = nullptr;. pol4_custom pol4_tf_;. TF1* tf1_pol4_tf_ = nullptr;. // erfPol2_custom erfPol2_tf_;. // TF1* tf1_erfPol2_tf_ = nullptr;. };. EtaPtCorrelatedEfficiency::EtaPtCorrelatedEf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16047,energy efficiency,alloc,allocator,16047," () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16223,energy efficiency,Load,LoadText,16223,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from abo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:19810,energy efficiency,alloc,allocator,19810," () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() ()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:19986,energy efficiency,Load,LoadText,19986,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleExceptio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:23718,energy efficiency,alloc,allocator,23718," () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:23894,energy efficiency,Load,LoadText,23894,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from abo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:27481,energy efficiency,alloc,allocator,27481," () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #14 0x00007f7f017afaeb in cling::Interpreter::unload(cling::Transaction&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:27657,energy efficiency,Load,LoadText,27657,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:297,integrability,depend,dependency,297,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:1248,integrability,pub,public,1248,"code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (double *x, double *p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3) + p[4]*std::pow(xscaled,4);. }. void setPolynomialArgum",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:1888,integrability,pub,public,1888,"=============================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (double *x, double *p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3) + p[4]*std::pow(xscaled,4);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 5;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. // // TODO: could use a generic polynomial using previous classes. // class erfPol2_custom {. // public:. // erfPol2_custom() {};. // erfPol2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled +",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:2605,integrability,pub,public,2605,"ument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (double *x, double *p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3) + p[4]*std::pow(xscaled,4);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 5;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. // // TODO: could use a generic polynomial using previous classes. // class erfPol2_custom {. // public:. // erfPol2_custom() {};. // erfPol2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~Eta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3502,integrability,pub,public,3502,";. // // TODO: could use a generic polynomial using previous classes. // class erfPol2_custom {. // public:. // erfPol2_custom() {};. // erfPol2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7492,integrability,transform,transformation,7492," {. function_ = tf1_pol2_;. ndim_ = 3;. } else if (name.find(""erf"") != std::string::npos) {. function_ = tf1_erf_;. ndim_ = 3;. } else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7549,integrability,Transform,Transformation,7549,"ind(""erf"") != std::string::npos) {. function_ = tf1_erf_;. ndim_ = 3;. } else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7584,integrability,transform,transformation,7584," function_ = tf1_erf_;. ndim_ = 3;. } else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7624,integrability,transform,transform,7624,"else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7696,integrability,transform,transformation,7696,"bort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7758,integrability,transform,transformation,7758,"gen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8013,integrability,transform,transformation,8013,"}. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8280,integrability,transform,transform,8280,"alize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8359,integrability,transform,transformation,8359,"Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8460,integrability,transform,transformation,8460,"s();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:17075,integrability,sub,submit,17075,"::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24746,integrability,sub,submit,24746,"::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28102,integrability,version,version,28102,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7492,interoperability,transform,transformation,7492," {. function_ = tf1_pol2_;. ndim_ = 3;. } else if (name.find(""erf"") != std::string::npos) {. function_ = tf1_erf_;. ndim_ = 3;. } else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7549,interoperability,Transform,Transformation,7549,"ind(""erf"") != std::string::npos) {. function_ = tf1_erf_;. ndim_ = 3;. } else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7584,interoperability,transform,transformation,7584," function_ = tf1_erf_;. ndim_ = 3;. } else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7624,interoperability,transform,transform,7624,"else {. std::cout << ""Smoothing function "" << name << "" not implemented. Abort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7696,interoperability,transform,transformation,7696,"bort"" << std::endl;. exit(EXIT_FAILURE);. }. return;. }. // Eigen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:7758,interoperability,transform,transformation,7758,"gen::MatrixXd EtaPtCorrelatedEfficiency::covariance(int etabin) {. // Eigen::MatrixXd covMat(ndim_, ndim_);. // for (int i = 0; i < ndim_; ++i) {. // for (int j = 0; j < ndim_; ++j) {. // covMat(i,j) = covhist_->GetBinContent(etabin, i+1, j+1);. // }. // }. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8013,interoperability,transform,transformation,8013,"}. // // std::cout << ""covariance matrix = "" << std::endl << covMat << std::endl;. // return covMat;. // }. // void EtaPtCorrelatedEfficiency::DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars) {. //. // // diagonalize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8280,interoperability,transform,transform,8280,"alize the covariance matrix. // Eigen::MatrixXd covMat = covariance(etabin);. // Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8359,interoperability,transform,transformation,8359,"Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(covMat);. // Eigen::VectorXd eigenv = es.eigenvalues();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8460,interoperability,transform,transformation,8460,"s();. // Eigen::MatrixXd transformation = es.eigenvectors();. // // std::cout << ""Transformation = "" << std::endl << transformation << std::endl;. //. // // transform the pars in the diagonal basis. // const unsigned int npars = transformation.rows();. // const unsigned int neigenvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:297,modifiability,depend,dependency,297,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8740,modifiability,paramet,parameters,8740,"genvectors = transformation.cols();. // Eigen::VectorXd inparv(npars);. // for (unsigned int jpar = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:9413,modifiability,paramet,parameters,9413,"parv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10065,modifiability,paramet,parameters,10065,"(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10710,modifiability,modul,module,10710,"im_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16853,modifiability,variab,variable,16853,"ightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24524,modifiability,variab,variable,24524,"ightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28102,modifiability,version,version,28102,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:123,performance,error,errors,123,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:149,performance,failur,failure,149,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10831,performance,error,error,10831,"Content(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16223,performance,Load,LoadText,16223,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from abo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:19986,performance,Load,LoadText,19986,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleExceptio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:23894,performance,Load,LoadText,23894,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from abo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:27657,performance,Load,LoadText,27657,"m /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:9,reliability,fail,failed,9,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:149,reliability,fail,failure,149,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3642,reliability,DoE,DoEffSyst,3642,"l2_custom(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);. TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);. TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 +",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3737,reliability,DoE,DoEffSyst,3737,"Range;. // };. // double operator() (double *x, double *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);. TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);. TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 + TMath::Erf((x-[1])/[2]))"", ptmin_, ptmax_);. pol3_custom pol3_tf_;. TF1* tf1_pol3_tf_ = nullpt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3791,reliability,DoE,DoEffSyst,3791," *p) {. // double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. // return (p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2)) * (1.0 + TMath::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);. TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);. TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 + TMath::Erf((x-[1])/[2]))"", ptmin_, ptmax_);. pol3_custom pol3_tf_;. TF1* tf1_pol3_tf_ = nullptr;. pol4_custom pol4_tf_;. TF1* tf1_pol4_tf_ = nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:8837,reliability,DoE,DoEffSyst,8837," = 0; jpar < npars; ++jpar) {. // inparv[jpar] = inpars[jpar];. // }. // // std::cout << ""inparv = "" << std::endl << inparv << std::endl;. // Eigen::VectorXd diagbasisv = transformation.transpose()*inparv;. // // std::cout << ""diagbasisv = "" << std::endl << diagbasisv << std::endl;. //. // // shift one of them by the diagonal uncertainty (uncorrelated in this basis). // diagbasisv[ipar] += eigenShift_ * sqrt(eigenv[ipar]);. //. // // transform the pars back in the original basis. // // Eigen::VectorXd outparv = transformation*diagbasisv;. // Eigen::VectorXd outparv = inparv + eigenShift_ * sqrt(eigenv[ipar]) * transformation.col(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:9472,reliability,DoE,DoEffSyst,9472,"l(ipar);. // for (unsigned int ieig = 0; ieig < neigenvectors; ++ieig) {. // outpars[ieig] = outparv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:9570,reliability,DoE,DoEffSyst,9570,"rv[ieig];. // }. // // std::cout << ""outparv = "" << std::endl << outparv << std::endl;. // return;. // }. // method to return the actual function variations for all parameters filling the externally provided array ""variations"". double EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int ipar = 0; ipar < ndim_; ++ipar) {. inpars[ipar] = parhist_->GetBinContent(etabin, ipar+1);. }. . double nominal = function_->EvalPar(&pt, inpars.data());. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10143,reliability,DoE,DoEffSyst,10143,");. . for (int ipar = 0; ipar < ndim_; ++ipar) {. // DoHessianShifts(etabin, ipar, inpars, outpars);. variations[ipar] = function_->EvalPar(&pt, outpars.data());. if (getDiff) variations[ipar] -= nominal;. }. return nominal;. }. // method to return a single row of parameters. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar) {. if (ipar >= ndim_) {. std::cout << ""EtaPtCorrelatedEfficiency::DoEffSyst(int etabin, int ipar): ipar >= "" << ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:123,safety,error,errors,123,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:196,safety,manag,manage,196,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:297,safety,depend,dependency,297,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:410,safety,test,test,410,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10613,safety,test,test,10613," ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10677,safety,test,test,10677,". }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10710,safety,modul,module,10710,"im_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10831,safety,error,error,10831,"Content(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:11315,safety,test,test,11315,"nContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:3928,security,modif,modify,3928,"h::Erf((x[0]-p[3])/p[4]));. // }. // void setPolynomialArgument(const double& xMin, const double& xRange) {. // xMinNorm_ = xMin;. // xRangeNorm_ = xRange;. // }. // int getNparams() { return nparams_; }. // protected:. // // to normalize polynomial argument. // int nparams_ = 5;. // double xMinNorm_ = 0.0;. // double xRangeNorm_ = 1.0;. // };. // ================================================. . class EtaPtCorrelatedEfficiency {. // TODO: if a destructor is explicitly defined, add copy constructor and assignment operator, even though I won't use any of those. . public:. . EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax);. // ~EtaPtCorrelatedEfficiency();. double DoEffSyst(int etabin, double pt, double *variations, bool getDiff=false);. std::vector<double> DoEffSyst(int etabin, int ipar);. std::vector<double> DoEffSyst(int etabin);. // void setPtRange(double ptmin, double ptmax) { ptmin_ = ptmin; ptmax_ = ptmax; } // not used currently, should modify function ranges accordingly. void setSmoothingFunction(const std::string& name);. void setEigenShift(double shift) {eigenShift_ = shift; }. . protected:. // Eigen::MatrixXd covariance(int etabin);. void DoHessianShifts(int etabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);. TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);. TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 + TMath::Erf((x-[1])/[2]))"", ptmin_, ptmax_);. pol3_custom pol3_tf_;. TF1* tf1_pol3_tf_ = nullptr;. pol4_custom pol4_tf_;. TF1* tf1_pol4_tf_ = nullptr;. // erfPol2_custom erfPol2_tf_;. // TF1* tf1_erfPol2_tf_ = nullptr;. };. EtaPtCorrelatedEfficiency::EtaPtCorrelatedEfficiency(TH3D* h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:13589,security,sign,signal,13589,"e *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(T *, double *) const) -> decltype(opPtr). ^. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170294af in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:21260,security,sign,signal,21260,"00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #11 0x00007f7f0180f633 in cling::DeclUnloader::VisitClassTemp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28257,security,Team,Team,28257,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:297,testability,depend,dependency,297,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:410,testability,test,test,410,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:5156,testability,assert,assert,5156,"tabin, int ipar, const std::vector<double> &inpars, std::vector<double> &outpars);. std::string smoothFunctionName_ = ""cheb3"";. TH3D *covhist_;. TH2D *parhist_;. int ndim_ = 4;. double ptmin_ = 0.0;. double ptmax_ = 100.0;. double eigenShift_ = 1.0;. TF1* function_ = nullptr;. // list of predefined functions. TF1* tf1_pol3_ = new TF1(""tf1_pol3_"", ""pol3"", ptmin_, ptmax_);. TF1* tf1_pol2_ = new TF1(""tf1_pol2_"", ""pol2"", ptmin_, ptmax_);. TF1* tf1_erf_ = new TF1(""tf1_erf_"", ""[0] * (1.0 + TMath::Erf((x-[1])/[2]))"", ptmin_, ptmax_);. pol3_custom pol3_tf_;. TF1* tf1_pol3_tf_ = nullptr;. pol4_custom pol4_tf_;. TF1* tf1_pol4_tf_ = nullptr;. // erfPol2_custom erfPol2_tf_;. // TF1* tf1_erfPol2_tf_ = nullptr;. };. EtaPtCorrelatedEfficiency::EtaPtCorrelatedEfficiency(TH3D* histocov, TH2D* histoerf, double ptmin, double ptmax):. pol3_tf_(ptmin, ptmax),. pol4_tf_(ptmin, ptmax). // erfPol2_tf_(ptmin, ptmax). {. covhist_ = histocov;. int ny = covhist_->GetNbinsY();. int nz = covhist_->GetNbinsZ();. assert(ny==nz);. ndim_ = ny;. parhist_ = histoerf;. ptmin_ = ptmin;. ptmax_ = ptmax;. setSmoothingFunction(""pol3_tf"");. }. // EtaPtCorrelatedEfficiency::~EtaPtCorrelatedEfficiency() {. // function_ = nullptr;. // delete tf1_pol3_;. // delete tf1_pol2_;. // delete tf1_erf_;. // delete tf1_pol3_tf_;. // delete tf1_pol4_tf_;. // // delete tf1_erfPol2_tf_;. // }. void EtaPtCorrelatedEfficiency::setSmoothingFunction(const std::string& name) {. // TODO: if case I add more functions, find a smarte way to find the good one. smoothFunctionName_ = name;. if (name.find(""pol3_tf"") != std::string::npos) { . tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. function_ = tf1_pol3_tf_;. ndim_ = tf1_pol3_tf_->GetNpar();. } else if (name.find(""pol4_tf"") != std::string::npos) {. tf1_pol4_tf_ = new TF1(""tf1_pol4_tf_"", pol4_tf_, ptmin_, ptmax_, pol4_tf_.getNparams());. function_ = tf1_pol4_tf_;. ndim_ = tf1_pol4_tf_->GetNpar();. // } else if (name.find(""erfPol2_tf"") != s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10613,testability,test,test,10613," ndim_ << "" ("" << ipar << "")"" << std::endl;. exit(EXIT_FAILURE);. }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10677,testability,test,test,10677,". }. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:11315,testability,test,test,11315,"nContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:12889,testability,trace,trace,12889,"t/include/TF1.h:213:12: note: candidate template ignored: could not match 'T (const T *, const double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *) const) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:219:12: note: candidate template ignored: could not match 'T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(T *, double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:225:12: note: candidate template ignored: could not match 'T (T *, double *) const' against 'double (std::vector<double> &, std::vector<double> &)'. auto GetTheRightOp(T(F::*opPtr)(T *, double *) const) -> decltype(opPtr). ^. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170294af in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16756,testability,trace,trace,16756,"IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:17212,testability,trace,trace,17212,"TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:20560,testability,trace,trace,20560,"f, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6. #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6. #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libcppyy_backend.so. #4 0x00007f7f08f18f91 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so. #5 <signal handler called>. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24427,testability,trace,trace,24427,"IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24883,testability,trace,trace,24883,"TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28666,testability,context,context,28666,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:123,usability,error,errors,123,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:210,usability,minim,minimal,210,"Crash on failed jitting; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h. ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h. #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h"". #include ""TH2D.h"". #include ""TH3D.h"". #include ""TFile.h"". #include ""TMath.h"". #include <eigen3/Eigen/Dense>. // #include <eigen3/Eigen/Eigenvalues>. //#include <stdlib.h>. //#include <stdio.h>. #include <cstdlib> . #include <cstdio>. #include <cmath>. #include <iostream>. #include <string>. #include <fstream>. #include <cassert>. namespace wrem {. // ================================================. // Some functions to be used for EtaPtCorrelatedEfficiency. // ================================================. // TODO:. // put functions in another header file. // write a base class to make all functions derive from, at least for polynomials. // write a generic class for polynomials. class pol3_custom {. public:. pol3_custom() {};. pol3_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. };. double operator() (std::vector<double> &x, std::vector<double> &p) {. double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;. return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);. }. void setPolynomialArgument(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNorm_ = xRange;. }. int getNparams() { return nparams_; }. protected:. // to normalize polynomial argument. int nparams_ = 4;. double xMinNorm_ = 0.0;. double xRangeNorm_ = 1.0;. };. class pol4_custom {. public:. pol4_custom() {};. pol4_custom(const double& xMin, const double& xRange) {. xMinNorm_ = xMin;. xRangeNo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:10831,usability,error,error,10831,"Content(etabin, jpar+1);. }. DoHessianShifts(etabin, ipar, inpars, outpars);. std::vector<double> ret(ndim_, 0.0);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[jpar] = outpars[jpar];. }. return ret;. }. // method to return all parameters in a single vector. std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);. std::vector<double> outpars(ndim_);. . for (int jpar = 0; jpar < ndim_; ++jpar) {. inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);. }. std::vector<double> ret(ndim_*ndim_, 0.0);. for (int ipar = 0; ipar < ndim_; ++ipar) {. DoHessianShifts(etabin, ipar, inpars, outpars);. for (int jpar = 0; jpar < ndim_; ++jpar) {. ret[ipar * ndim_ + jpar] = outpars[jpar];. }. }. return ret;. }. . }. . #endif. ```. test.py. ```. import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:. ```. In module 'Hist':. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'. using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here. ROOT::Internal::TF1Builder<Func>::Build(this, f);. ^. ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here. tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());. ^. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'. auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr). ^. /cvmfs/sft-nightlies.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16676,usability,hint,hint,16676,"/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16890,usability,help,help,16890,"/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16948,usability,prefer,preferably,16948," in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:16969,usability,command,command,16969,"er::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::Visi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:17122,usability,prefer,preferably,17122,"n.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:17144,usability,command,command,17144,"ed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:17288,usability,help,help,17288,"g/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24347,usability,hint,hint,24347,"/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24561,usability,help,help,24561,"/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24619,usability,prefer,preferably,24619," in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24640,usability,command,command,24640,"er::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::Visi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24793,usability,prefer,preferably,24793,"n.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24815,usability,command,command,24815,"ed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:24959,usability,help,help,24959,"g/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f7f04c83ed3 in clang::BaseUsingDecl::removeShadowDecl(clang::UsingShadowDecl*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #7 0x00007f7f0180d476 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #8 0x00007f7f0180d6e3 in cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #9 0x00007f7f0180d3d0 in cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #10 0x00007f7f0180f270 in cling::DeclUnloader::VisitRecordDecl(clang::RecordDecl*) [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/issues/16578:28439,usability,help,help,28439,".ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so. #20 0x00007f7f0802301b in ?? (). #21 0x00007ffda9ea3b0f in ?? (). #22 0x0000000000000000 in ?? (). ===========================================================. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |. | From heads/master@v6-31-01-3406-g2dc2e0f126 |. | With g++ (GCC) 14.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16578
https://github.com/root-project/root/pull/16579:1064,energy efficiency,Cpu,Cpu,1064,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:279,interoperability,Format,Format,279,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:612,performance,Execution time,Execution time,612,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:1042,performance,Time,Time,1042,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:1064,performance,Cpu,Cpu,1064,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:1068,performance,Time,Time,1068,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:592,reliability,sre,sressGraphics,592,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:74,safety,Test,TestReport,74,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:115,safety,test,tests,115,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:227,safety,avoid,avoid,227,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:787,safety,test,tests,787,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:74,testability,Test,TestReport,74,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:107,testability,plan,planned,107,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:115,testability,test,tests,115,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:570,testability,simpl,simplify,570,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:787,testability,test,tests,787,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:31,usability,support,support,31,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:380,usability,command,command,380,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16579:570,usability,simpl,simplify,570,"Improve `stressGraphics` code, support web mode; * Make central function `TestReport()` which executes all planned tests for the canvas. . * Print report when all images and scripts are generated. . * Resort function orders to avoid need of forward declarations. * Use `TString::Format()` instead of `snprintf`. * Use `TFile::Open()` instead of `new TFile`. * Improve handling of command line args like `-k` or `-v`. * Create SVG instead of PS files when running in web mode, provide correspondent ref file. * Adjust web ref file to work on Chrome and Firefox. All this simplify structure of sressGraphics code. Execution time in web mode with chrome browser 109s. ```. ./stressGraphics --web=chrome. ... **********************************************************************. * All the tests passed. :-). **********************************************************************. * SYS: Linux hades58 6.10.11-1-default #1 SMP PREEMPT_DYNAMIC Thu S. **********************************************************************. * stressGraphics: Real Time = 109.74 seconds Cpu Time = 8.32 seconds. **********************************************************************. * ROOTMARKS =4870.6 * Root 6.33.01 20231010/0. **********************************************************************. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16579
https://github.com/root-project/root/pull/16580:109,deployability,contain,container,109,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16580:11,energy efficiency,GPU,GPU,11,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16580:67,energy efficiency,GPU,GPU-enabled,67,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16580:100,energy efficiency,GPU,GPU,100,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16580:11,performance,GPU,GPU,11,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16580:67,performance,GPU,GPU-enabled,67,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16580:100,performance,GPU,GPU,100,[CI] Add a GPU runner.; - Add a new job to run with cuda. - Select GPU-enabled runners. - Pass host GPU into container,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16580
https://github.com/root-project/root/pull/16581:5,deployability,Updat,Update,5,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:64,deployability,automat,automatically,64,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:141,deployability,build,builds,141,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:46,energy efficiency,GPU,GPUs,46,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:113,energy efficiency,GPU,GPU,113,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:137,energy efficiency,CPU,CPU,137,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:185,interoperability,specif,specific,185,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:46,performance,GPU,GPUs,46,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:113,performance,GPU,GPU,113,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:137,performance,CPU,CPU,137,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:5,safety,Updat,Update,5,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:29,safety,avoid,avoid,29,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:5,security,Updat,Update,5,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/pull/16581:64,testability,automat,automatically,64,"[CI] Update runner labels to avoid running on GPUs.; Due to the automatically assigned github runner labels, the GPU runner will pick up CPU builds, so their labels had to be made more specific.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16581
https://github.com/root-project/root/issues/16582:256,availability,Operat,Operating,256,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:188,deployability,version,version,188,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:216,deployability,Instal,Installation,216,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:128,energy efficiency,cpu,cpu,128,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:134,energy efficiency,gpu,gpu,134,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:173,energy efficiency,gpu,gpu,173,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:188,integrability,version,version,188,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:188,modifiability,version,version,188,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:128,performance,cpu,cpu,128,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:134,performance,gpu,gpu,134,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:173,performance,gpu,gpu,173,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:197,reliability,Doe,Doesn,197,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:237,reliability,Doe,Doesn,237,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:274,reliability,Doe,Doesn,274,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16582:304,testability,context,context,304,[CI] Rethink runner labels; ### Explain what you would like to see improved and how. Relabel linux runners into something like `cpu` `gpu` instead of `root-ci` and `root-ci-gpu`. ### ROOT version. Doesn't apply. ### Installation method. Doesn't apply. ### Operating system. Doesn't apply. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16582
https://github.com/root-project/root/issues/16583:998,availability,Operat,Operating,998,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:947,deployability,version,version,947,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:968,deployability,Instal,Installation,968,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:231,energy efficiency,current,currently,231,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:947,integrability,version,version,947,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:947,modifiability,version,version,947,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:517,security,control,controled,517,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:517,testability,control,controled,517,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:1036,testability,context,context,1036,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/issues/16583:26,usability,support,support,26,"[ntuple] Missing importer support for leaf count arrays in leaf list; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As discussed in #16478, the TTree feature of using a count leaf inside a leaf list is currently unsupported by the importer. ### Reproducer. The following file cannot be imported:. ```. std::unique_ptr<TFile> file(TFile::Open(""tree.root"", ""RECREATE""));. auto tree = std::make_unique<TTree>(""tree"", """");. int count = 1;. struct {. float foo = 2.0;. Int_t values[20]; // is controled by [count]. } leafList;. leafList.values = new Int_t[1];. leafList.values[0] = 1;. tree->Branch(""count"", &count);. tree->Branch(""leaflist"", &leafList, ""foo/F:values[count]/I"");. tree->Fill();. tree->Write();. ```. As well as having the count leaf inside the leaf list as well as ""manually"" encoding the leaf count arrays (see [comments](https://github.com/root-project/root/pull/16478#discussion_r1784714941)). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16583
https://github.com/root-project/root/pull/16584:314,deployability,build,build,314,"[CMake] Make it possible to pass existing `CLAD_SOURCE_DIR`; This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16584:300,integrability,configur,configure,300,"[CMake] Make it possible to pass existing `CLAD_SOURCE_DIR`; This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16584:300,modifiability,configur,configure,300,"[CMake] Make it possible to pass existing `CLAD_SOURCE_DIR`; This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16584:114,performance,time,time,114,"[CMake] Make it possible to pass existing `CLAD_SOURCE_DIR`; This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16584:300,security,configur,configure,300,"[CMake] Make it possible to pass existing `CLAD_SOURCE_DIR`; This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16584:267,testability,context,context,267,"[CMake] Make it possible to pass existing `CLAD_SOURCE_DIR`; This would address two annoyances I have at the same time:. 1. One can now clone both `root` and `clad`, linking the source directories together. This makes it much easier to try out changes in clad in the context of ROOT. 2. ROOT can now configure and build without an internet connection, even with `Dclad=ON`. This partially addresses #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16584
https://github.com/root-project/root/pull/16585:64,security,access,accessed,64,[ntuple] Remove collection writer; Similar functionality can be accessed through the RRecordField (untyped records) and RVectorField::CreateUntyped() (untyped collections). Fixes #14642,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16585
https://github.com/root-project/root/pull/16586:133,availability,error,errors,133,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:21,deployability,build,build,21,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:133,performance,error,errors,133,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:90,reliability,doe,does,90,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:99,safety,prevent,prevent,99,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:133,safety,error,errors,133,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:99,security,preven,prevent,99,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/pull/16586:133,usability,error,errors,133,"[win][ASAN] Fix ASAN build on Windows; On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16586
https://github.com/root-project/root/issues/16588:566,availability,Operat,Operating,566,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/issues/16588:515,deployability,version,version,515,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/issues/16588:536,deployability,Instal,Installation,536,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/issues/16588:365,integrability,sub,subfields,365,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/issues/16588:515,integrability,version,version,515,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/issues/16588:515,modifiability,version,version,515,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/issues/16588:604,testability,context,context,604,"Fix RFieldBase::GetNElements() for record/class fields; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. For all but record and class fields, the number of elements of that field is given by the number of elements of the principle columns. Records/classes don't have columns of their own. The information must be retrieved from one of the subfields. ### Reproducer. The problem arises, e.g., when trying to iterate over the field range of a view of a record item of a collection. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16588
https://github.com/root-project/root/pull/16589:55,modifiability,variab,variable,55,[tmva][pyroot] fix compiler warnings; Remove an unused variable and fix some clang warnings (suggest-braces) that make ROOT not compile with -Werror.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16589
https://github.com/root-project/root/pull/16590:42,deployability,updat,update,42,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:147,deployability,automat,automatic,147,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:255,deployability,artifact,artifact,255,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:325,deployability,updat,updated,325,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:384,deployability,build,builds,384,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:430,deployability,artifact,artifacts,430,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:11,energy efficiency,cpu,cpu,11,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:63,energy efficiency,GPU,GPU,63,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:89,energy efficiency,CPU,CPU-only,89,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:11,performance,cpu,cpu,11,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:63,performance,GPU,GPU,63,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:89,performance,CPU,CPU-only,89,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:42,safety,updat,update,42,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:325,safety,updat,updated,325,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:42,security,updat,update,42,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:325,security,updat,updated,325,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:147,testability,automat,automatic,147,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16590:31,usability,workflow,workflows,31,"[CI] Add a cpu label to github workflows; update actions.; The GPU runner was attracting CPU-only jobs, since all runner labels in use so far were automatic github labels. Here, a unique label is added to steer the jobs correctly. Furthermore, the upload-artifact action starts warning about an imminent deprecation, so it's updated to v4 here. This uncovered a name clash, where two builds on the same image would race to upload artifacts. This seems to be OK in v3, but not in v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16590
https://github.com/root-project/root/pull/16591:38,deployability,updat,update,38,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16591:52,deployability,artifact,artifact,52,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16591:9,energy efficiency,CPU,CPU,9,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16591:23,interoperability,standard,standard,23,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16591:9,performance,CPU,CPU,9,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16591:38,safety,updat,update,38,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16591:38,security,updat,update,38,[CI] Add CPU label for standard jobs; update upload-artifact action.; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16591
https://github.com/root-project/root/pull/16592:739,energy efficiency,schedul,scheduling,739,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:66,integrability,sub,subclass,66,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:209,integrability,abstract,abstract,209,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:251,integrability,interfac,interfaces,251,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:265,integrability,sub,subclass,265,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:507,integrability,sub,subclass,507,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:251,interoperability,interfac,interfaces,251,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:9,modifiability,Refact,Refactor,9,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:98,modifiability,refact,refactoring,98,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:209,modifiability,abstract,abstract,209,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:251,modifiability,interfac,interfaces,251,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:428,modifiability,refact,refactoring,428,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:9,performance,Refactor,Refactor,9,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:98,performance,refactor,refactoring,98,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:428,performance,refactor,refactoring,428,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16592:739,performance,schedul,scheduling,739,"[ntuple] Refactor `RNTupleProcessor`, add `RNTupleChainProcessor` subclass; This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16592
https://github.com/root-project/root/pull/16593:49,deployability,updat,update,49,[v6-30][CI] Add a cpu label to github workflows; update actions. ; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16593
https://github.com/root-project/root/pull/16593:18,energy efficiency,cpu,cpu,18,[v6-30][CI] Add a cpu label to github workflows; update actions. ; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16593
https://github.com/root-project/root/pull/16593:18,performance,cpu,cpu,18,[v6-30][CI] Add a cpu label to github workflows; update actions. ; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16593
https://github.com/root-project/root/pull/16593:49,safety,updat,update,49,[v6-30][CI] Add a cpu label to github workflows; update actions. ; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16593
https://github.com/root-project/root/pull/16593:49,security,updat,update,49,[v6-30][CI] Add a cpu label to github workflows; update actions. ; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16593
https://github.com/root-project/root/pull/16593:38,usability,workflow,workflows,38,[v6-30][CI] Add a cpu label to github workflows; update actions. ; Backport of #16590,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16593
https://github.com/root-project/root/pull/16594:340,availability,error,error,340,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:8,deployability,automat,automatic,8,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:170,deployability,fail,fails,170,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:285,deployability,fail,fail-on-missing,285,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:544,deployability,configurat,configuration,544,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:544,integrability,configur,configuration,544,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:454,modifiability,paramet,parameter,454,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:544,modifiability,configur,configuration,544,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:340,performance,error,error,340,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:170,reliability,fail,fails,170,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:285,reliability,fail,fail-on-missing,285,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:340,safety,error,error,340,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:391,safety,avoid,avoid,391,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:534,safety,avoid,avoid,534,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:544,security,configur,configuration,544,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:8,testability,automat,automatic,8,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:699,testability,simpl,simpler,699,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:340,usability,error,error,340,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:479,usability,hint,hint,479,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:492,usability,user,user,492,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:699,usability,simpl,simpler,699,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16594:847,usability,Close,Closes,847,"Disable automatic 'call home' in cmake when not needed; Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the. internet connection has to be disabled. This is not allowed when. `fail-on-missing=ON`. Therefore, we can raise the fatal error already in. the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint. to the user on what option to set if he wants to avoid the configuration. code branch that requires the connection check. Also, move all connection check related things in. `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16594
https://github.com/root-project/root/pull/16595:151,availability,cluster,cluster-local,151,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:229,availability,cluster,cluster-local,229,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:482,availability,cluster,cluster-local,482,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:151,deployability,cluster,cluster-local,151,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:229,deployability,cluster,cluster-local,229,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:482,deployability,cluster,cluster-local,482,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:214,integrability,translat,translates,214,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:447,integrability,sub,sub,447,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:214,interoperability,translat,translates,214,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:271,reliability,doe,does,271,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:338,reliability,doe,does,338,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16595:45,usability,custom,custom,45,"[ntuple] Fix reading vectors of bitsets; Add custom implementation of RBitsetField::ReadInClusterImpl(). Without, in an attempt to read the field with cluster-local addressing, the implementation in the base class translates the cluster-local index to a global index. It does it incorrectly though because RFieldBase::ReadInClusterImpl() does not take into account the fact that the bitset field is backed by a repetitive column. When reading the sub field of vectors, reading with cluster-local addressing is used. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16595
https://github.com/root-project/root/pull/16596:282,modifiability,paramet,parameter,282,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:5,safety,Avoid,Avoid,5,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:49,safety,test,tests,49,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:146,safety,test,test,146,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:197,safety,test,test,197,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:49,testability,test,tests,49,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:146,testability,test,test,146,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:192,testability,unit,unit,192,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16596:197,testability,test,test,197,"[RF] Avoid using HistFactory class in RooFitCore tests; Even if this only happens via the interpreter, it can cause trouble. This is also why the test was disable on Windows. The point of the unit test is to cover the case of a Gaussian constraint, so we can just constrain another parameter and don't do the interpolation with the `PiecewiseInterpolation` class from HistFactory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16596
https://github.com/root-project/root/pull/16597:210,deployability,build,building,210,"[RF] Move RooFit manual and various files into roofit directory; This makes it unnecessary to veto these files in case RooFit is not enabled, and also makes it easier to consider the `man` and `etc` files when building RooFit standalone. I checked the build and install directories that everything is still where it should be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16597
https://github.com/root-project/root/pull/16597:252,deployability,build,build,252,"[RF] Move RooFit manual and various files into roofit directory; This makes it unnecessary to veto these files in case RooFit is not enabled, and also makes it easier to consider the `man` and `etc` files when building RooFit standalone. I checked the build and install directories that everything is still where it should be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16597
https://github.com/root-project/root/pull/16597:262,deployability,instal,install,262,"[RF] Move RooFit manual and various files into roofit directory; This makes it unnecessary to veto these files in case RooFit is not enabled, and also makes it easier to consider the `man` and `etc` files when building RooFit standalone. I checked the build and install directories that everything is still where it should be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16597
https://github.com/root-project/root/pull/16599:338,deployability,build,building,338,"[pyroot] fix clang warning due to changes in PyObject; [This commit](https://github.com/python/cpython/commit/ea2c0016502472aa8baa3149050ada776d17a009#diff-87272721a5cf1cd9915d6f503f6a7bbefa2f26c935c7ce83ca78706afd0ad05a) changed a PyObject field from a ssize_t to a union, so clang now wants parentheses around the object (this prevents building root with -Werror). This was introduced in 3.12.0-beta1, aka PY_VERSION_HEX == 0x30c00b1. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16599
https://github.com/root-project/root/pull/16599:329,safety,prevent,prevents,329,"[pyroot] fix clang warning due to changes in PyObject; [This commit](https://github.com/python/cpython/commit/ea2c0016502472aa8baa3149050ada776d17a009#diff-87272721a5cf1cd9915d6f503f6a7bbefa2f26c935c7ce83ca78706afd0ad05a) changed a PyObject field from a ssize_t to a union, so clang now wants parentheses around the object (this prevents building root with -Werror). This was introduced in 3.12.0-beta1, aka PY_VERSION_HEX == 0x30c00b1. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16599
https://github.com/root-project/root/pull/16599:329,security,preven,prevents,329,"[pyroot] fix clang warning due to changes in PyObject; [This commit](https://github.com/python/cpython/commit/ea2c0016502472aa8baa3149050ada776d17a009#diff-87272721a5cf1cd9915d6f503f6a7bbefa2f26c935c7ce83ca78706afd0ad05a) changed a PyObject field from a ssize_t to a union, so clang now wants parentheses around the object (this prevents building root with -Werror). This was introduced in 3.12.0-beta1, aka PY_VERSION_HEX == 0x30c00b1. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16599
https://github.com/root-project/root/issues/16600:294,availability,down,down,294,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:716,availability,Operat,Operating,716,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:639,deployability,version,version,639,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:680,deployability,Instal,Installation,680,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:705,deployability,build,build,705,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:164,integrability,messag,message,164,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:639,integrability,version,version,639,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:164,interoperability,messag,message,164,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:446,modifiability,variab,variables,446,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:639,modifiability,version,version,639,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:313,performance,lock,lock,313,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:482,performance,lock,lock,482,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:29,safety,safe,safe,29,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:146,safety,safe,safe,146,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:254,safety,safe,safe,254,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:618,safety,safe,safe,618,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:313,security,lock,lock,313,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:482,security,lock,lock,482,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16600:756,testability,context,context,756,"TMVA RReader not multithread safe; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16600
https://github.com/root-project/root/issues/16601:251,availability,error,error,251,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:897,availability,error,error,897,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2088,availability,error,error,2088,"}) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3517,availability,error,error,3517,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3717,availability,Operat,Operating,3717,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:14,deployability,Fail,Fail,14,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:258,deployability,Fail,Failed,258,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:532,deployability,version,versions,532,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:713,deployability,version,version,713,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:727,deployability,Version,Version,727,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:904,deployability,Fail,Failed,904,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1126,deployability,Fail,Failed,1126,"tion. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1579,deployability,modul,module-,1579,". [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1725,deployability,modul,module-,1725,"rsion: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2095,deployability,Fail,Failed,2095,"runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2184,deployability,Fail,Failed,2184,"rage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2288,deployability,modul,module-,2288,"8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2348,deployability,modul,module-,2348,"g_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2404,deployability,Fail,Failed,2404,"eIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2468,deployability,modul,module-,2468,"TIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2591,deployability,modul,module,2591,"its.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2879,deployability,Fail,Failed,2879,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2948,deployability,Fail,Failed,2948,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3154,deployability,version,version,3154,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3168,deployability,Version,Version,3168,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3666,deployability,version,version,3666,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3687,deployability,Instal,Installation,3687,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:532,integrability,version,versions,532,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:713,integrability,version,version,713,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:727,integrability,Version,Version,727,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3154,integrability,version,version,3154,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3168,integrability,Version,Version,3168,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3666,integrability,version,version,3666,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2917,interoperability,format,format,2917,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:532,modifiability,version,versions,532,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:713,modifiability,version,version,713,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:727,modifiability,Version,Version,727,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1579,modifiability,modul,module-,1579,". [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1725,modifiability,modul,module-,1725,"rsion: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2288,modifiability,modul,module-,2288,"8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2348,modifiability,modul,module-,2348,"g_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2468,modifiability,modul,module-,2468,"TIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2591,modifiability,modul,module,2591,"its.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3154,modifiability,version,version,3154,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3168,modifiability,Version,Version,3168,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3666,modifiability,version,version,3666,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:251,performance,error,error,251,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:897,performance,error,error,897,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2088,performance,error,error,2088,"}) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3517,performance,error,error,3517,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:14,reliability,Fail,Fail,14,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:258,reliability,Fail,Failed,258,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:904,reliability,Fail,Failed,904,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1126,reliability,Fail,Failed,1126,"tion. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2095,reliability,Fail,Failed,2095,"runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2184,reliability,Fail,Failed,2184,"rage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2404,reliability,Fail,Failed,2404,"eIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2879,reliability,Fail,Failed,2879,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2948,reliability,Fail,Failed,2948,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:251,safety,error,error,251,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:897,safety,error,error,897,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1579,safety,modul,module-,1579,". [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:1725,safety,modul,module-,1725,"rsion: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2088,safety,error,error,2088,"}) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2288,safety,modul,module-,2288,"8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2348,safety,modul,module-,2348,"g_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2468,safety,modul,module-,2468,"TIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2591,safety,modul,module,2591,"its.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3517,safety,error,error,3517,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:243,security,session,session,243,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:889,security,session,session,889,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2080,security,session,session,2080,"lassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:464,testability,simpl,simple,464,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2485,testability,Trace,Traceback,2485,"TIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3755,testability,context,context,3755,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:251,usability,error,error,251,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:464,usability,simpl,simple,464,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:897,usability,error,error,897,"[6.32/master] Fail to materialise simbols from `libMatrix`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106). ```. [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus951 ~]$root --version. ROOT Version: 6.32.02. Built for linuxx8664gcc on Jun 19 2024, 05:05:49. From heads/master@tags/v6-32-02. [vpadulan@lxplus951 ~]$python repro_libphysics.py. cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2088,usability,error,error,2088,"}) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2540,usability,user,user,2540,"MembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const au",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:2653,usability,user,user,2653,"13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/issues/16601:3517,usability,error,error,3517,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }. cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }. Traceback (most recent call last):. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>. raise SystemExit(main()). ^^^^^^. File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main. print(ROOT.myvec). ^^^^^^^^^^. File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute myvec from ROOT. ```. ### ROOT 6.30.02 (LCG105). ```. [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh. [vpadulan@lxplus959 ~]$root --version. ROOT Version: 6.30/02. Built for linuxx8664gcc on Dec 20 2023, 18:59:44. From heads/master@tags/v6-30-02. [vpadulan@lxplus959 ~]$python repro_libphysics.py. Name: TVectorT<float> Title:. ```. ### Reproducer. ```python. import ROOT. def main():. ROOT.gInterpreter.Declare('''. #include <TVectorT.h>. //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear. const auto myvec = TVectorT<float>();. '''). print(ROOT.myvec). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16601
https://github.com/root-project/root/pull/16602:376,deployability,version,version,376,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:521,deployability,contain,containing,521,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:623,deployability,updat,updated,623,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:500,energy efficiency,model,model,500,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:376,integrability,version,version,376,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:376,modifiability,version,version,376,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:593,safety,test,tested,593,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:623,safety,updat,updated,623,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:500,security,model,model,500,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:623,security,updat,updated,623,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16602:593,testability,test,tested,593,"[ntuple] add fwd compat for unknown field structural role; Instead of throwing when deserializing a field with an unknown structural role, we assign to it structure == ENTupleStructure::kUnknown. . FieldDescriptors with Unknown structural role will generate RInvalidFields upon calling CreateField(). . This allows getting the descriptor for a future RNTuple from an old ROOT version. A `fForwardCompatible` option is added to RCreateModelOptions to tell RNTuple to not throw when reconstructing the model for an RNTuple containing fields with an unknown structural role. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16602
https://github.com/root-project/root/pull/16603:16,interoperability,format,format,16,"[skip-ci][clang-format] +AllowShortEnumsOnASingleLine: false; Without this, clang-format will try to collapse ""short"" enums on a single line. Unfortunately, this hinders readability in some cases, as this for example is considered ""short"":. ```. enum ENTupleStructure { kInvalid, kLeaf, kCollection, kRecord, kVariant, kUnsplit, kUnknown };. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16603
https://github.com/root-project/root/pull/16603:82,interoperability,format,format,82,"[skip-ci][clang-format] +AllowShortEnumsOnASingleLine: false; Without this, clang-format will try to collapse ""short"" enums on a single line. Unfortunately, this hinders readability in some cases, as this for example is considered ""short"":. ```. enum ENTupleStructure { kInvalid, kLeaf, kCollection, kRecord, kVariant, kUnsplit, kUnknown };. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16603
https://github.com/root-project/root/pull/16604:105,deployability,configurat,configurations,105,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:136,deployability,fail,failed,136,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:105,integrability,configur,configurations,105,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:105,modifiability,configur,configurations,105,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:136,reliability,fail,failed,136,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:105,security,configur,configurations,105,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16604:223,usability,Close,Closes,223,"[CMake] Find OpenSLL as builtin XRootD requirement in right scope; I checked that the following chain of configurations works now, and. failed before:. ```. cmake -Dminimial=ON -Dssl=OFF .. cmake -Dbuiltin_xrootd=ON . ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16604
https://github.com/root-project/root/pull/16605:41,deployability,build,build,41,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:47,deployability,configurat,configuration,47,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:90,deployability,build,build,90,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:47,integrability,configur,configuration,47,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:47,modifiability,configur,configuration,47,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:262,reliability,doe,does,262,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:224,safety,test,tested,224,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:47,security,configur,configuration,47,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:224,testability,test,tested,224,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:82,usability,user,user,82,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16605:283,usability,Close,Closes,283,[CMake] Improvements related to `opengl` build configuration flag; 1) Don't force user to build graf3d OpenGL features if `cocoa=ON`. 2) Require asimage=ON in case of opengl=ON. More detail in the commit description. I have tested on macOS that the first commit does what it should. Closes #16250.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16605
https://github.com/root-project/root/pull/16606:24,deployability,depend,dependency,24,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:71,deployability,modul,modularity,71,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:178,deployability,depend,depend,178,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:212,deployability,depend,dependency,212,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:24,integrability,depend,dependency,24,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:71,integrability,modular,modularity,71,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:121,integrability,compon,components,121,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:178,integrability,depend,depend,178,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:212,integrability,depend,dependency,212,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:121,interoperability,compon,components,121,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:24,modifiability,depend,dependency,24,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:71,modifiability,modul,modularity,71,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:121,modifiability,compon,components,121,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:178,modifiability,depend,depend,178,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:212,modifiability,depend,dependency,212,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:19,performance,time,time,19,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:5,safety,Avoid,Avoid,5,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:24,safety,depend,dependency,24,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:71,safety,modul,modularity,71,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:178,safety,depend,depend,178,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:212,safety,depend,dependency,212,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:308,safety,avoid,avoid,308,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:24,testability,depend,dependency,24,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:71,testability,modula,modularity,71,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:178,testability,depend,depend,178,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:212,testability,depend,dependency,212,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:111,usability,user,user,111,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16606:381,usability,user,user,381,"[RF] Avoid compile time dependency of RooFit on RDataFrame; For better modularity in the future, the major end-user ROOT components. like RDataFrame, RooFit, and TMVA should not depend on each other. There was a dependency of RooFit on RDataFrame because of the. RooAbsDataHelper, but it is actually easy to avoid this with forward. declarations. This should have no impact on the user, because if they use RDF, they. probably include it already if they're not using the interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16606
https://github.com/root-project/root/pull/16607:133,safety,test,tests,133,[ntuple] add integer type casts; Allows for reading integers from other integer types. Includes bounds checking where necessary. The tests are a little mechanical but I'm not sure if the code would improve with more templates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16607
https://github.com/root-project/root/pull/16607:133,testability,test,tests,133,[ntuple] add integer type casts; Allows for reading integers from other integer types. Includes bounds checking where necessary. The tests are a little mechanical but I'm not sure if the code would improve with more templates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16607
https://github.com/root-project/root/pull/16608:60,deployability,instal,installable,60,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:197,deployability,modul,modular,197,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:212,deployability,build,builds,212,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:576,deployability,instal,installed,576,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:629,deployability,instal,install,629,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:658,deployability,instal,install,658,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:989,deployability,instal,installed,989,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1100,deployability,Instal,Install,1100,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1118,deployability,instal,install,1118,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1148,deployability,instal,install,1148,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1288,deployability,instal,installing,1288,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:491,energy efficiency,power,power,491,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:197,integrability,modular,modular,197,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1033,integrability,repositor,repository,1033,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1347,integrability,repositor,repository,1347,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1033,interoperability,repositor,repository,1033,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:1347,interoperability,repositor,repository,1347,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:197,modifiability,modul,modular,197,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:197,safety,modul,modular,197,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:504,safety,Test,Testing,504,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:197,testability,modula,modular,197,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:504,testability,Test,Testing,504,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:116,usability,workflow,workflow,116,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:134,usability,user,users,134,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:182,usability,help,help,182,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:282,usability,experien,experience,282,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:419,usability,interact,interact,419,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16608:497,usability,user,users,497,"[RF] Move RooFit pythonizations to roofit and make them pip installable; **This change is improving the development workflow, now how users are getting ROOT and RooFit!**. This will help with more modular RooFit builds, and it's also a big step. towards making the RooFit developer experience for the pythonizations. more pleasant. The goal is that people can contribute to the RooFit pythonizations. without having to interact with any CMake or C++ compilation, which was. requested by our power users. Testing changes to the pythonizations is easy now, because they can be. installed easily with pip on top of an existing ROOT install, in which. case this install will override the RooFit pythonizations shipped with. ROOT. This makes developing the pythonizations *much* easier! A README is added to `roofit/pythonizations` that outlines the steps as follows:. Therefore, the easiest and recommended way to develop RooFit pythonizations is as follows:. 1. Make sure ROOT and RooFit are installed on your system. 2. Clone the ROOT repository and go inside the `roofit/pythonizations` directory. 3. Install with `pip install -e .` for an editable install (virtual environment recommended). 4. Any changes to the RooFit pythonizations will be in effect immediately without recompiling or installing anything! 5. Make your changes, open PR to ROOT repository",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16608
https://github.com/root-project/root/pull/16610:375,energy efficiency,reduc,reduce,375,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:303,integrability,batch,batch,303,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:303,performance,batch,batch,303,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:387,performance,execution time,execution time,387,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:513,performance,time,time,513,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:53,safety,detect,detected,53,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:90,safety,detect,detected,90,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:115,safety,test,test-stressgraphics-chrome,115,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:148,safety,test,test-stressgraphics-firefox,148,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:177,safety,test,test,177,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:231,safety,test,tests,231,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:382,safety,test,test,382,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:53,security,detect,detected,53,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:90,security,detect,detected,90,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:115,testability,test,test-stressgraphics-chrome,115,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:148,testability,test,test-stressgraphics-firefox,148,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:177,testability,test,test,177,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:231,testability,test,tests,231,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/pull/16610:382,testability,test,test,382,"Run `stressGraphics` in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16610
https://github.com/root-project/root/issues/16612:338,availability,servic,services,338,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:679,availability,error,error,679,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:965,availability,Operat,Operating,965,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:37,deployability,build,build,37,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:294,deployability,stack,stacks,294,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:304,deployability,Releas,Release,304,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:338,deployability,servic,services,338,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:362,deployability,build,build,362,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:413,deployability,build,build,413,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:458,deployability,build,build,458,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:540,deployability,build,build,540,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:585,deployability,build,build,585,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:829,deployability,fail,fail,829,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:900,deployability,version,version,900,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:921,deployability,Instal,Installation,921,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:942,deployability,build,build,942,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:497,energy efficiency,core,core,497,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:624,energy efficiency,core,core,624,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:64,integrability,configur,configure,64,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:338,integrability,servic,services,338,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:841,integrability,configur,configure,841,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:900,integrability,version,version,900,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:64,modifiability,configur,configure,64,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:338,modifiability,servic,services,338,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:841,modifiability,configur,configure,841,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:900,modifiability,version,version,900,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:679,performance,error,error,679,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:47,reliability,doe,doesn,47,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:829,reliability,fail,fail,829,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:502,safety,test,testsupport,502,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:518,safety,Test,TestSupport,518,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:629,safety,test,testsupport,629,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:650,safety,Test,TestSupport,650,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:679,safety,error,error,679,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:64,security,configur,configure,64,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:841,security,configur,configure,841,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:502,testability,test,testsupport,502,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:518,testability,Test,TestSupport,518,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:629,testability,test,testsupport,629,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:650,testability,Test,TestSupport,650,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:1005,testability,context,context,1005,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16612:679,usability,error,error,679,"ROOT now always(?) requires gtest to build but doesn't check in configure step; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See. https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```. In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory. 28 | #include ""gtest/gtest.h"". | ^~~~~~~~~~~~~~~. compilation terminated. ```. Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16612
https://github.com/root-project/root/issues/16613:244,availability,error,error,244,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:277,availability,error,error,277,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1497,availability,down,down,1497,", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1616,availability,error,error,1616,"ow-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImpo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2883,availability,Operat,Operating,2883,"ttps://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:514,deployability,modul,module,514,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1294,deployability,automat,automatic,1294,"me 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2835,deployability,version,version,2835,"ttps://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2853,deployability,Instal,Installation,2853,"ttps://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1781,integrability,Event,Events,1781,"er::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2835,integrability,version,version,2835,"ttps://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:14,interoperability,convers,conversion,14,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1304,interoperability,convers,conversion,1304,"Base'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:514,modifiability,modul,module,514,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2835,modifiability,version,version,2835,"ttps://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:244,performance,error,error,244,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:277,performance,error,error,277,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1616,performance,error,error,1616,"ow-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImpo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:244,safety,error,error,244,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:277,safety,error,error,277,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:514,safety,modul,module,514,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1616,safety,error,error,1616,"ow-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImpo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:858,security,modif,modifier,858,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:922,security,sign,signature,922,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:356,testability,Trace,Traceback,356,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1294,testability,automat,automatic,1294,"me 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1548,testability,simpl,simplified,1548,"^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with Data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:2921,testability,context,context,2921,"ttps://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImporter.Create(. dataset.input_file, dataset.dataset_name, dataset.output_file). importer.SetFieldModifier(low_precision_modifier). importer.Import(). if __name__ == ""__main__"":. raise SystemExit(main()). ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:244,usability,error,error,244,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:277,usability,error,error,277,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:399,usability,User,Users,399,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:564,usability,User,Users,564,"std::function conversion not working with class in nested namespace ; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```. input_line_71:2:19: error: unknown type name 'RFieldBase'. void fptr_wrap1(RFieldBase& arg0) {. ^. Traceback (most recent call last):. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>. raise SystemExit(main()). ^^^^^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1548,usability,simpl,simplified,1548,"^^. File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with Data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/issues/16613:1616,usability,error,error,1616,"ow-float-precision/repro_setfieldmodifier.py"", line 50, in main. importer.SetFieldModifier(low_precision_modifier). TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>. TypeError: could not convert argument 1. ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python. import ROOT. import numpy. import os. class DatasetContext:. input_file = ""input_ttree.root"". dataset_name = ""Events"". output_file = ""output_rntuple.root"". def __init__(self):. with ROOT.TFile(self.input_file, ""RECREATE"") as f:. main_tree = ROOT.TTree(self.dataset_name, self.dataset_name). x = numpy.array([0], dtype=numpy.double). y = numpy.array([0], dtype=numpy.double). main_tree.Branch(""x"", x, ""x/D""). main_tree.Branch(""y"", y, ""y/D""). x[0] = 11. y[0] = 22. main_tree.Fill(). x[0] = 33. y[0] = 44. main_tree.Fill(). x[0] = 55. y[0] = 66. main_tree.Fill(). main_tree.Write(). def __enter__(self):. return self. def __exit__(self, *_):. os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:. if field.GetFieldName() == ""x"":. field.SetColumnRepresentatives(. [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:. with DatasetContext() as dataset:. importer = ROOT.Experimental.RNTupleImpo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16613
https://github.com/root-project/root/pull/16614:12,deployability,Updat,Update,12,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:26,deployability,artifact,artifact,26,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:75,deployability,Updat,Update,75,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:89,deployability,artifact,artifact,89,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:168,energy efficiency,cpu,cpu,168,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:236,energy efficiency,GPU,GPU-enabled,236,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:168,performance,cpu,cpu,168,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:236,performance,GPU,GPU-enabled,236,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:12,safety,Updat,Update,12,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:75,safety,Updat,Update,75,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:12,security,Updat,Update,12,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16614:75,security,Updat,Update,75,[v6-28][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16614
https://github.com/root-project/root/pull/16615:12,deployability,Updat,Update,12,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:26,deployability,artifact,artifact,26,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:75,deployability,Updat,Update,75,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:89,deployability,artifact,artifact,89,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:168,energy efficiency,cpu,cpu,168,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:236,energy efficiency,GPU,GPU-enabled,236,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:168,performance,cpu,cpu,168,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:236,performance,GPU,GPU-enabled,236,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:12,safety,Updat,Update,12,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:75,safety,Updat,Update,75,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:12,security,Updat,Update,12,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16615:75,security,Updat,Update,75,[v6-26][CI] Update upload-artifact action; refine runner selection; - [CI] Update upload-artifact action to v4: Github will deprecate the v3 action soon. - [CI] Add a 'cpu' label to self-hosted runner selection: Don't want it to run on GPU-enabled nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16615
https://github.com/root-project/root/pull/16616:194,modifiability,variab,variables,194,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:11,performance,multi-thread,multi-threading,11,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:82,performance,multi-thread,multi-thread,82,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:188,safety,input,input,188,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:297,safety,safe,safe,297,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:72,usability,usab,usable,72,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16616:188,usability,input,input,188,[tmva] Fix multi-threading issue with TMVA RReader; To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16616
https://github.com/root-project/root/pull/16617:178,deployability,updat,updated,178,[skip-ci] Correcting minor typos in TH2.cxx; # This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16617:148,safety,test,tested,148,[skip-ci] Correcting minor typos in TH2.cxx; # This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16617:178,safety,updat,updated,178,[skip-ci] Correcting minor typos in TH2.cxx; # This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16617:178,security,updat,updated,178,[skip-ci] Correcting minor typos in TH2.cxx; # This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16617:148,testability,test,tested,148,[skip-ci] Correcting minor typos in TH2.cxx; # This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16617:97,usability,document,documentation,97,[skip-ci] Correcting minor typos in TH2.cxx; # This Pull request corrects two minor typos in the documentation inside TH2.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16617
https://github.com/root-project/root/pull/16620:216,deployability,updat,updated,216,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:15,integrability,translat,translated,15,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:15,interoperability,translat,translated,15,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:184,safety,test,tested,184,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:216,safety,updat,updated,216,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:216,security,updat,updated,216,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16620:184,testability,test,tested,184,"Tree tutorials translated into Python.; # This Pull request:. Adds to the `root/tutorials/*.C` macros their respective python scripts. Enjoy this ""pyroothonic"" syntax style. . - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16620
https://github.com/root-project/root/pull/16621:104,modifiability,exten,extended,104,[ntuple] Fix column ID order; Fixes the situation where the regular header uses projections and is then extended.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16621
https://github.com/root-project/root/pull/16622:121,integrability,schema,schema,121,[ntuple] Add type cast support from double to float; Enables reading a double on disk to a float in memory (relevant for schema evolution). There is no bounds checking yet for floating point conversions. That will come as a separate PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16622
https://github.com/root-project/root/pull/16622:191,interoperability,convers,conversions,191,[ntuple] Add type cast support from double to float; Enables reading a double on disk to a float in memory (relevant for schema evolution). There is no bounds checking yet for floating point conversions. That will come as a separate PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16622
https://github.com/root-project/root/pull/16622:81,performance,disk,disk,81,[ntuple] Add type cast support from double to float; Enables reading a double on disk to a float in memory (relevant for schema evolution). There is no bounds checking yet for floating point conversions. That will come as a separate PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16622
https://github.com/root-project/root/pull/16622:100,performance,memor,memory,100,[ntuple] Add type cast support from double to float; Enables reading a double on disk to a float in memory (relevant for schema evolution). There is no bounds checking yet for floating point conversions. That will come as a separate PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16622
https://github.com/root-project/root/pull/16622:23,usability,support,support,23,[ntuple] Add type cast support from double to float; Enables reading a double on disk to a float in memory (relevant for schema evolution). There is no bounds checking yet for floating point conversions. That will come as a separate PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16622
https://github.com/root-project/root/pull/16622:100,usability,memor,memory,100,[ntuple] Add type cast support from double to float; Enables reading a double on disk to a float in memory (relevant for schema evolution). There is no bounds checking yet for floating point conversions. That will come as a separate PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16622
https://github.com/root-project/root/pull/16623:51,deployability,Build,BuildPrimitives,51,[webcanvas] Fix THStack handling; Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:101,deployability,stack,stacked,101,[webcanvas] Fix THStack handling; Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:209,energy efficiency,current,current,209,[webcanvas] Fix THStack handling; Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:34,modifiability,Exten,Extend,34,[webcanvas] Fix THStack handling; Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16623:275,usability,Behavi,Behavior,275,[webcanvas] Fix THStack handling; Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16623
https://github.com/root-project/root/pull/16625:146,deployability,automat,automatic,146,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:196,deployability,build,build,196,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:274,deployability,build,build,274,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:280,deployability,depend,dependency,280,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:280,integrability,depend,dependency,280,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:280,modifiability,depend,dependency,280,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:13,safety,test,testsupport,13,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:89,safety,test,test,89,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:215,safety,test,tests,215,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:230,safety,test,testing,230,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:280,safety,depend,dependency,280,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:13,testability,test,testsupport,13,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:89,testability,test,test,89,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:146,testability,automat,automatic,146,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:215,testability,test,tests,215,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:230,testability,test,testing,230,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:280,testability,depend,dependency,280,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:94,usability,support,support,94,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16625:301,usability,Close,Closes,301,"[CMake] Add `testsupport` option that is `OFF` by default; Like this, people can get the test support library for using `ROOT_ADD_GTEST` with the automatic ROOT output checking, without having to build all of ROOTs tests itself (`testing=ON`). Off by default to not force a build dependency on gtest. Closes #16612. Important to fix the LCG and CMSSW nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16625
https://github.com/root-project/root/pull/16627:101,integrability,messag,message,101,[ntuple] fix missing return in RField::Check; Also adjust `rfield_check` that was checking the wrong message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16627
https://github.com/root-project/root/pull/16627:101,interoperability,messag,message,101,[ntuple] fix missing return in RField::Check; Also adjust `rfield_check` that was checking the wrong message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16627
https://github.com/root-project/root/pull/16628:62,usability,support,support,62,"[ntuple] Forbid projections across arrays; We may want to add support for this in the future, especially if the array is the leaf (e.g. to make an alias field of a fixed-size array).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16628
https://github.com/root-project/root/pull/16631:213,deployability,contain,contains,213,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:276,deployability,contain,contain,276,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:346,deployability,Depend,Depends,346,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:448,deployability,updat,updated,448,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:158,energy efficiency,model,model,158,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:328,energy efficiency,model,model,328,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:346,integrability,Depend,Depends,346,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:21,interoperability,compatib,compatibility,21,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:346,modifiability,Depend,Depends,346,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:346,safety,Depend,Depends,346,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:418,safety,test,tested,418,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:448,safety,updat,updated,448,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:158,security,model,model,158,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:328,security,model,model,328,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:448,security,updat,updated,448,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:346,testability,Depend,Depends,346,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16631:418,testability,test,tested,418,"[ntuple] add forward-compatibility mode to read unknown column types; # This Pull request:. adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:. Depends on #16627. #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16631
https://github.com/root-project/root/pull/16633:69,integrability,batch,batch,69,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16633:75,integrability,buffer,buffer,75,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16633:91,modifiability,reu,reuse,91,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16633:69,performance,batch,batch,69,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16633:10,usability,support,support,10,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16633:160,usability,support,supported,160,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16633:458,usability,close,closed,458,"[webcanv] support multipage PDF syntax; While webcanvas has internal batch buffer, one can reuse it also . for creating PDF with several pages. Directly syntax supported:. ```. c1->Print(""kern.pdf("");. c2->Print(""kern.pdf"");. c3->Print(""kern.pdf"");. c4->Print(""kern.pdf"");. c5->Print(""kern.pdf)"");. ```. It is equivalent to:. ```. TCanvas::SaveAll({c1,c2,c3,c4,c5}, ""kern.pdf"");. ```. Also one can use ""kern.pdf["" and ""kern.pdf]"" arguments, when PDF is open/closed without including of canvas into the output PDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16633
https://github.com/root-project/root/pull/16634:240,availability,state,state,240,"[ntuple] Remove `ntpl012_pprocessor.C`; Since the `RNTupleProcessor` is an internal class, and at this point still heavily subject to changes, it doesn't make sense to have a public-facing tutorial. Once the processor reaches a more mature state, we can consider re-adding it, but this would likely also requiring moving it out of the internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16634
https://github.com/root-project/root/pull/16634:123,integrability,sub,subject,123,"[ntuple] Remove `ntpl012_pprocessor.C`; Since the `RNTupleProcessor` is an internal class, and at this point still heavily subject to changes, it doesn't make sense to have a public-facing tutorial. Once the processor reaches a more mature state, we can consider re-adding it, but this would likely also requiring moving it out of the internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16634
https://github.com/root-project/root/pull/16634:175,integrability,pub,public-facing,175,"[ntuple] Remove `ntpl012_pprocessor.C`; Since the `RNTupleProcessor` is an internal class, and at this point still heavily subject to changes, it doesn't make sense to have a public-facing tutorial. Once the processor reaches a more mature state, we can consider re-adding it, but this would likely also requiring moving it out of the internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16634
https://github.com/root-project/root/pull/16634:240,integrability,state,state,240,"[ntuple] Remove `ntpl012_pprocessor.C`; Since the `RNTupleProcessor` is an internal class, and at this point still heavily subject to changes, it doesn't make sense to have a public-facing tutorial. Once the processor reaches a more mature state, we can consider re-adding it, but this would likely also requiring moving it out of the internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16634
https://github.com/root-project/root/pull/16634:146,reliability,doe,doesn,146,"[ntuple] Remove `ntpl012_pprocessor.C`; Since the `RNTupleProcessor` is an internal class, and at this point still heavily subject to changes, it doesn't make sense to have a public-facing tutorial. Once the processor reaches a more mature state, we can consider re-adding it, but this would likely also requiring moving it out of the internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16634
https://github.com/root-project/root/pull/16635:373,energy efficiency,reduc,reduce,373,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:301,integrability,batch,batch,301,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:301,performance,batch,batch,301,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:385,performance,execution time,execution time,385,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:511,performance,time,time,511,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:51,safety,detect,detected,51,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:88,safety,detect,detected,88,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:113,safety,test,test-stressgraphics-chrome,113,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:146,safety,test,test-stressgraphics-firefox,146,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:175,safety,test,test,175,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:229,safety,test,tests,229,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:380,safety,test,test,380,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:51,security,detect,detected,51,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:88,security,detect,detected,88,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:113,testability,test,test-stressgraphics-chrome,113,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:146,testability,test,test-stressgraphics-firefox,146,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:175,testability,test,test,175,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:229,testability,test,tests,229,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16635:380,testability,test,test,380,"Run stressGraphics in web mode when chrome/firefox detected; If browser executable were detected by cmake,. add `test-stressgraphics-chrome` and `test-stressgraphics-firefox` test. Analyze produced images by blocks - first run N tests and then check image sizes. In web mode this allows to really use batch mode when up to 80 images produced with single browser call. This reduce test execution time from 110 to 52 seconds, or even 43 seconds with firefox. Calculate web rootmark based on realtime - while most time spent in the browser execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16635
https://github.com/root-project/root/pull/16637:51,usability,support,supports,51,[doxygen] use TWebCanvas to create JSON; Such JSON supports much more features like custom fonts or proper handling of THStack.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16637
https://github.com/root-project/root/pull/16637:84,usability,custom,custom,84,[doxygen] use TWebCanvas to create JSON; Such JSON supports much more features like custom fonts or proper handling of THStack.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16637
https://github.com/root-project/root/issues/16638:68,availability,error,error,68,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:106,availability,error,error,106,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:313,availability,state,statement,313,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:363,availability,state,statement,363,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:951,availability,error,error,951,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1108,availability,error,error,1108," C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1255,availability,error,error,1255,"compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1576,availability,error,error,1576,"warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1596,availability,error,error,1596,"rn': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1698,availability,error,error,1698,"apher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1849,availability,failur,failure,1849,"ompiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2049,availability,error,error,2049,">E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:3239,availability,Operat,Operating,3239,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:378,deployability,fail,fails,378,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:442,deployability,Build,Build,442,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:479,deployability,Configurat,Configuration,479,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1849,deployability,fail,failure,1849,"ompiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2439,deployability,version,version,2439,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:3209,deployability,Instal,Installation,3209,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:313,integrability,state,statement,313,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:363,integrability,state,statement,363,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:479,integrability,Configur,Configuration,479,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2439,integrability,version,version,2439,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:604,interoperability,convers,conversion,604,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:479,modifiability,Configur,Configuration,479,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2439,modifiability,version,version,2439,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:68,performance,error,error,68,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:106,performance,error,error,106,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:951,performance,error,error,951,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1108,performance,error,error,1108," C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1255,performance,error,error,1255,"compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1576,performance,error,error,1576,"warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1596,performance,error,error,1596,"rn': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1698,performance,error,error,1698,"apher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1849,performance,failur,failure,1849,"ompiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2049,performance,error,error,2049,">E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:378,reliability,fail,fails,378,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1849,reliability,fail,failure,1849,"ompiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:54,safety,avoid,avoid,54,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:68,safety,error,error,68,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:106,safety,error,error,106,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:951,safety,error,error,951,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1108,safety,error,error,1108," C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1255,safety,error,error,1255,"compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1576,safety,error,error,1576,"warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1596,safety,error,error,1596,"rn': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1698,safety,error,error,1698,"apher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2049,safety,error,error,2049,">E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:132,security,token,token,132,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:479,security,Configur,Configuration,479,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:655,security,loss,loss,655,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:977,security,token,token,977,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2589,security,Team,Team,2589,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:3284,testability,context,context,3284,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:68,usability,error,error,68,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:106,usability,error,error,106,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:951,usability,error,error,951,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1108,usability,error,error,1108," C2589: '(': illegal token on right side of '::'; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1255,usability,error,error,1255,"compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------. 1>RootGrapher.cpp. 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1576,usability,error,error,1576,"warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1596,usability,error,error,1596,"rn': conversion from 'Long64_t' to 'Double_t', possible loss of data. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:1698,usability,error,error,1698,"apher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2049,usability,error,error,2049,">E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2747,usability,help,help,2747,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:2934,usability,tool,toolbar,2934,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/issues/16638:3008,usability,help,help,3008,"object of const-qualified type must be initialized. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):. 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'. 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'. 1>(compiling source file 'RootGrapher.cpp'). 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant. 1>(compiling source file 'RootGrapher.cpp'). 1> E:\dev\root_build\include\TTree.h(229,64):. 1> failure was caused by a read of an uninitialized symbol. 1> E:\dev\root_build\include\TTree.h(229,64):. 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>. #include <gsl\gsl>. #include ""TF1.h"". #include ""TH1F.h"". #include ""TApplication.h"". #include <TAxis.h>. #include ""TCanvas.h"". #include ""TDatime.h"". #include ""TFrame.h"". #include ""TGraph.h"". #include ""TMultiGraph.h"". #include ""TRootCanvas.h"". #include ""TODBCServer.h"". // TMVA seems to compile only when before TODBCServer.h. #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------. | Welcome to ROOT 6.32.06 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for win64 on Oct 07 2024, 17:23:18 |. | From tags/6-32-06@6-32-06 |. | With MSVC 19.41.34120.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Many tutorials use the file hsimple.root produced by hsimple.C. ==> It is recommended to execute hsimple.C before any other script. Taking a break from ROOT? Hope to see you back! ### Installation method. N/A. ### Operating system. Windows 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16638
https://github.com/root-project/root/pull/16639:88,usability,minim,minimal,88,[jsroot] dev 8/10/2024; 1. Fix - do not force style 8 for hist markers. 2. Fix - ensure minimal hist title height. 3. Fix - proper font-size handling in latex.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16639
https://github.com/root-project/root/pull/16640:55,energy efficiency,current,currently,55,Make sure bulk reading works with prefetching; This is currently not the case when the branch has more than 1 basket. . This PR fixes #8962.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16640
https://github.com/root-project/root/pull/16641:9,safety,test,test-stressgraphics-firefox,9,Disable `test-stressgraphics-firefox` on Mac; Seems to be headless usage of Firefox not yet tested there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16641
https://github.com/root-project/root/pull/16641:92,safety,test,tested,92,Disable `test-stressgraphics-firefox` on Mac; Seems to be headless usage of Firefox not yet tested there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16641
https://github.com/root-project/root/pull/16641:9,testability,test,test-stressgraphics-firefox,9,Disable `test-stressgraphics-firefox` on Mac; Seems to be headless usage of Firefox not yet tested there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16641
https://github.com/root-project/root/pull/16641:92,testability,test,tested,92,Disable `test-stressgraphics-firefox` on Mac; Seems to be headless usage of Firefox not yet tested there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16641
https://github.com/root-project/root/pull/16643:168,availability,robust,robust,168,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:128,deployability,manag,manage,128,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:128,energy efficiency,manag,manage,128,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:175,integrability,batch,batch,175,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:175,performance,batch,batch,175,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:168,reliability,robust,robust,168,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:128,safety,manag,manage,128,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:168,safety,robust,robust,168,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16643:135,security,access,access,135,[webcanvas] Embed JSROOT into canv_batch.htm; Browser will read all data and all scripts from HTML file directly - . no need to manage access to file system. Make more robust batch mode of web canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16643
https://github.com/root-project/root/pull/16645:28,deployability,Version,Version,28,[ntuple] Binary format RC3; Version leading into the 1.0 format. Final cleanups and removal of backward compatibility code for previous experimental anchors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:28,integrability,Version,Version,28,[ntuple] Binary format RC3; Version leading into the 1.0 format. Final cleanups and removal of backward compatibility code for previous experimental anchors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:16,interoperability,format,format,16,[ntuple] Binary format RC3; Version leading into the 1.0 format. Final cleanups and removal of backward compatibility code for previous experimental anchors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:57,interoperability,format,format,57,[ntuple] Binary format RC3; Version leading into the 1.0 format. Final cleanups and removal of backward compatibility code for previous experimental anchors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:104,interoperability,compatib,compatibility,104,[ntuple] Binary format RC3; Version leading into the 1.0 format. Final cleanups and removal of backward compatibility code for previous experimental anchors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/pull/16645:28,modifiability,Version,Version,28,[ntuple] Binary format RC3; Version leading into the 1.0 format. Final cleanups and removal of backward compatibility code for previous experimental anchors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16645
https://github.com/root-project/root/issues/16646:9,deployability,log,log,9,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:165,deployability,log,login,165,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:9,safety,log,log,9,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:165,safety,log,login,165,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:9,security,log,log,9,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:20,security,sign,sign,20,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:165,security,log,login,165,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:175,security,sign,signup,175,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:9,testability,log,log,9,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:165,testability,log,login,165,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:375,testability,context,context,375,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:39,usability,user,users,39,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:101,usability,user,user-friendly,101,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16646:123,usability,user,users,123,Create a log in and sign up option for users ; ### Feature description. It would become familiar and user-friendly for the users and developers if they would have a login and signup option which they can use for more future works in the website. I would like to make this new feature. Please assign this work to me. ### Alternatives considered. _No response_. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16646
https://github.com/root-project/root/issues/16647:724,availability,sli,slightly,724,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:1026,availability,Operat,Operating,1026,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:966,deployability,version,version,966,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:988,deployability,Instal,Installation,988,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:1015,deployability,build,build,1015,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:966,integrability,version,version,966,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:966,modifiability,version,version,966,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:724,reliability,sli,slightly,724,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:50,safety,test,test,50,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:289,safety,test,test-dataframe-datasetspec,289,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:321,safety,Test,Test,321,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:353,safety,test,test-dataframe-datasetspec,353,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:405,safety,Test,Test,405,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:665,safety,test,test,665,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:697,safety,test,test,697,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:782,safety,test,test,782,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:50,testability,test,test,50,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:289,testability,test,test-dataframe-datasetspec,289,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:321,testability,Test,Test,321,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:353,testability,test,test-dataframe-datasetspec,353,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:405,testability,Test,Test,405,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:665,testability,test,test,665,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:697,testability,test,test,697,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:782,testability,test,test,782,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/issues/16647:1064,testability,context,context,1064,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```ctest -R dataframe-datasetspec``` gives something like:. ```. Start 424: pyunittests-dataframe-datasetspec. Start 401: gtest-tree-dataframe-test-dataframe-datasetspec. 1/2 Test #401: gtest-tree-dataframe-test-dataframe-datasetspec ... Passed 5.65 sec. 2/2 Test #424: pyunittests-dataframe-datasetspec ................. Passed 9.25 sec. ```. Where where have `gtest-tree-dataframe` by `pyunittests-dataframe` with a missing `tree-` part. This has 2 negative consequences:. * Names of `pyunittests` must be across all test directories. * Finding the test based on its name is (slightly) harder than it should. Ideally the names of the test would:. ```. gtest-tree-dataframe-dataframe-datasetspec. pyunittests-tree-dataframe-dataframe-datasetspec. ```. ### Reproducer. ```. ctest -R dataframe-datasetspec. ```. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16647
https://github.com/root-project/root/pull/16650:46,deployability,build,builds,46,Major changes to RBatchGenerator; This commit builds on changes from. * https://github.com/root-project/root/pull/16341. * https://github.com/root-project/root/pull/15692. Authorship is preserved in the sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16650
https://github.com/root-project/root/pull/16650:172,security,Auth,Authorship,172,Major changes to RBatchGenerator; This commit builds on changes from. * https://github.com/root-project/root/pull/16341. * https://github.com/root-project/root/pull/15692. Authorship is preserved in the sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16650
https://github.com/root-project/root/pull/16651:23,availability,error,errors,23,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:80,availability,error,errors,80,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:159,availability,error,errors,159,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:38,modifiability,paramet,parameters,38,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:140,modifiability,paramet,parameters,140,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:23,performance,error,errors,23,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:80,performance,error,errors,80,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:159,performance,error,errors,159,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:23,safety,error,errors,23,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:80,safety,error,errors,80,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:159,safety,error,errors,159,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:23,usability,error,errors,23,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:80,usability,error,errors,80,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16651:159,usability,error,errors,159,"[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors); xRooFit wants all floating parameters to have errors defined on them, so this PR gives them some default values (0 for normFactors, and the correct uncert for gamma factors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16651
https://github.com/root-project/root/pull/16653:45,interoperability,specif,specification,45,"[ntuple] Add a common `RNTupleOpenSpec`; The specification structs `RNTupleReader::ROpenSpec` and `RNTupleSourceSpec` (used by `RNTupleProcessor`) are virtually identical, so it makes no sense to keep both around. This PR adds a common `RNTupleOpenSpec` (other naming suggestions welcome of course) to `RNTupleUtil` that can be used by both `RNTupleReader::OpenFriends` and the `RNTupleProcessor`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16653
https://github.com/root-project/root/pull/16653:161,security,ident,identical,161,"[ntuple] Add a common `RNTupleOpenSpec`; The specification structs `RNTupleReader::ROpenSpec` and `RNTupleSourceSpec` (used by `RNTupleProcessor`) are virtually identical, so it makes no sense to keep both around. This PR adds a common `RNTupleOpenSpec` (other naming suggestions welcome of course) to `RNTupleUtil` that can be used by both `RNTupleReader::OpenFriends` and the `RNTupleProcessor`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16653
https://github.com/root-project/root/issues/16654:342,availability,Error,Error,342,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2639,availability,Error,Error,2639,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2682,availability,Error,Error,2682,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2886,availability,Operat,Operating,2886,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:158,deployability,Build,Building,158,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:284,deployability,build,build,284,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:301,deployability,instal,install,301,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:368,deployability,build,build,368,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:403,deployability,build,build-Release,403,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:446,deployability,fail,failed,446,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:477,deployability,build,build,477,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:516,deployability,build,build,516,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:551,deployability,build,build,551,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:559,deployability,log,log,559,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:592,deployability,Build,Building,592,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:965,deployability,build,build,965,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1066,deployability,build,build,1066,".0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1505,deployability,build,build,1505,"as/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1721,deployability,build,build,1721,"scriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1935,deployability,build,build,1935,"50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2084,deployability,build,build,2084,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2732,deployability,version,version,2732,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2842,deployability,Instal,Installation,2842,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2863,deployability,build,build,2863,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:427,integrability,messag,message,427,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2732,integrability,version,version,2732,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:427,interoperability,messag,message,427,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2732,modifiability,version,version,2732,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:342,performance,Error,Error,342,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2639,performance,Error,Error,2639,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2682,performance,Error,Error,2682,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2776,performance,time,time,2776,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:446,reliability,fail,failed,446,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:342,safety,Error,Error,342,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:559,safety,log,log,559,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2639,safety,Error,Error,2639,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2682,safety,Error,Error,2682,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:559,security,log,log,559,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2790,security,hash,hash,2790,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:559,testability,log,log,559,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1404,testability,Context,Context,1404,"-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1440,testability,Context,Context,1440,"d failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In fun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1628,testability,Context,Context,1628,"bb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1656,testability,Context,Context,1656," -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: **",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1844,testability,Context,Context,1844,"[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:1870,testability,Context,Context,1870,"ished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2933,testability,context,context,2933,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:342,usability,Error,Error,342,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:438,usability,Command,Command,438,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:734,usability,Stop,Stop,734,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:837,usability,Stop,Stop,837,"Cannot compile ROOT master with Ubuntu 24.10 with gcc 14 (Ubuntu 14.2.0-4ubuntu2); ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:. ```. cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/. cmake --build . --target install -j6. ```. Results in. ```. CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):. Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:. [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:. gmake[4]: *** read jobs pipe: Bad file descriptor. Stop. gmake[4]: *** Waiting for unfinished jobs.... gmake[5]: *** read jobs pipe: Bad file descriptor. Stop. gmake[5]: *** Waiting for unfinished jobs.... In file included from /usr/include/c++/14/atomic:50,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2639,usability,Error,Error,2639,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/issues/16654:2682,usability,Error,Error,2682,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,. from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:. In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,. inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,. inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,. inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:. /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]. 477 | __atomic_store_n(&_M_i, __i, int(__m));. | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~. In function ‘void tbb::detail::r1::clear_address_waiter_table()’:. cc1plus: note: destination object is likely at address zero. gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2. gmake[3]: *** [Makefile:156: all] Error 2. ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16654
https://github.com/root-project/root/pull/16657:185,deployability,modul,module,185,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:274,deployability,version,version,274,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:457,deployability,updat,updated,457,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:373,energy efficiency,load,loaded,373,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:16,integrability,translat,translated,16,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:63,integrability,Translat,Translates,63,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:159,integrability,wrap,wrappers,159,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:274,integrability,version,version,274,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:335,integrability,wrap,wrappers,335,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:16,interoperability,translat,translated,16,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:63,interoperability,Translat,Translates,63,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:159,interoperability,wrapper,wrappers,159,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:335,interoperability,wrapper,wrappers,335,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:175,modifiability,extens,extension,175,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:185,modifiability,modul,module,185,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:274,modifiability,version,version,274,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:373,performance,load,loaded,373,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:185,safety,modul,module,185,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:425,safety,test,tested,425,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:457,safety,updat,updated,457,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:457,security,updat,updated,457,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:168,testability,simpl,simple,168,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:425,testability,test,tested,425,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:168,usability,simpl,simple,168,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:240,usability,behavi,behavior,240,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16657:305,usability,document,documentation,305,"Tutorials of v7 translated into Python.; # This Pull request:. Translates the tutorials of the `root/tutorials/v7` into Python language. Some of them have C++ wrappers(simple extension module) to achieve their functionality and match . the behavior of its corresponding C++ version. As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16657
https://github.com/root-project/root/pull/16658:17,usability,custom,custom,17,"[webgui] Rename `custom.cxx` -> `triangle.cxx` example, improve webgui doxygen; Fix minimal JSROOT problem with such custom class. Correctly group web tutorials and web widgets in doxygen. Provide minimal entries for web-widgets like `RGeomHierarchy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16658
https://github.com/root-project/root/pull/16658:84,usability,minim,minimal,84,"[webgui] Rename `custom.cxx` -> `triangle.cxx` example, improve webgui doxygen; Fix minimal JSROOT problem with such custom class. Correctly group web tutorials and web widgets in doxygen. Provide minimal entries for web-widgets like `RGeomHierarchy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16658
https://github.com/root-project/root/pull/16658:117,usability,custom,custom,117,"[webgui] Rename `custom.cxx` -> `triangle.cxx` example, improve webgui doxygen; Fix minimal JSROOT problem with such custom class. Correctly group web tutorials and web widgets in doxygen. Provide minimal entries for web-widgets like `RGeomHierarchy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16658
https://github.com/root-project/root/pull/16658:169,usability,widget,widgets,169,"[webgui] Rename `custom.cxx` -> `triangle.cxx` example, improve webgui doxygen; Fix minimal JSROOT problem with such custom class. Correctly group web tutorials and web widgets in doxygen. Provide minimal entries for web-widgets like `RGeomHierarchy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16658
https://github.com/root-project/root/pull/16658:197,usability,minim,minimal,197,"[webgui] Rename `custom.cxx` -> `triangle.cxx` example, improve webgui doxygen; Fix minimal JSROOT problem with such custom class. Correctly group web tutorials and web widgets in doxygen. Provide minimal entries for web-widgets like `RGeomHierarchy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16658
https://github.com/root-project/root/pull/16658:221,usability,widget,widgets,221,"[webgui] Rename `custom.cxx` -> `triangle.cxx` example, improve webgui doxygen; Fix minimal JSROOT problem with such custom class. Correctly group web tutorials and web widgets in doxygen. Provide minimal entries for web-widgets like `RGeomHierarchy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16658
https://github.com/root-project/root/pull/16660:13,deployability,depend,dependency,13,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:76,deployability,instal,install,76,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:221,deployability,instal,installed,221,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:13,integrability,depend,dependency,13,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:27,integrability,pub,public,27,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:13,modifiability,depend,dependency,13,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:0,safety,Avoid,Avoid,0,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:13,safety,depend,dependency,13,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16660:13,testability,depend,dependency,13,Avoid XRootD dependency in public headers; This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16660
https://github.com/root-project/root/pull/16661:527,deployability,build,build,527,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:933,deployability,build,build,933,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:666,integrability,configur,configured,666,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:1015,integrability,repositor,repositories,1015,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:1015,interoperability,repositor,repositories,1015,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:666,modifiability,configur,configured,666,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:533,performance,time,time,533,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:688,performance,time,time,688,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:25,safety,test,tests,25,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:69,safety,test,tests,69,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:130,safety,test,test,130,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:401,safety,test,tests,401,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:453,safety,test,tests,453,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:625,safety,test,tests,625,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:782,safety,Avoid,Avoid,782,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:861,safety,test,tests,861,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:966,safety,test,tests,966,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:666,security,configur,configured,666,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:25,testability,test,tests,25,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:69,testability,test,tests,69,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:130,testability,test,test,130,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:401,testability,test,tests,401,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:453,testability,test,tests,453,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:625,testability,test,tests,625,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:861,testability,test,tests,861,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:966,testability,test,tests,966,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:262,usability,experien,experience,262,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16661:709,usability,person,personally,709,"[RF] Move vectorised PDF tests from roottest to roofit; These useful tests are relatively short (runtime 28 seconds in total) and test lower-level RooFit functionality. Moving them from roottest to roofit has the following benefits:. * Faster RooFit development experience: it's not necessary anymore to also add and compile all of `roottest`, if you want to make sure locally that the vectorized pdf tests always compile and pass. * The vectorized pdf tests will be able to consider the RooFit-internal preprocessor macros at build time, like `ROOFIT_CUDA` and `ROOFIT_LEGACY_EVAL_BACKEND`. Like this we can ensure that the tests will pass no matter how RooFit was configured at compile time. This is for me personally the strongest reason and was the motivator for this commit. * Avoid code repetition in `root` and `roottest`, because now the vectorized PDF tests will be able to re-use private code from RooFit. * If you want to build standalone RooFit with all tests, you won't have to stitch together the two repositories. Sister PR: https://github.com/root-project/roottest/pull/1199.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16661
https://github.com/root-project/root/pull/16663:115,deployability,version,versions,115,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:229,deployability,deploy,deployedge,229,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:115,integrability,version,versions,115,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:149,interoperability,registr,registry,149,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:115,modifiability,version,versions,115,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:362,reliability,doe,does,362,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:425,reliability,doe,does,425,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:46,safety,Detect,Detect,46,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:518,safety,test,test,518,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:589,safety,test,tests,589,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:615,safety,test,tests,615,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:46,security,Detect,Detect,46,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:255,security,polic,policies,255,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:458,testability,emul,emulation,458,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:518,testability,test,test,518,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:589,testability,test,tests,589,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:598,testability,verif,verify,598,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:615,testability,test,tests,615,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:57,usability,support,support,57,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:203,usability,learn,learn,203,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16663:444,usability,support,support,444,"[webcanv] run `stressGraphics` on Windows; 1. Detect and support Edge as recognized browser `--web=edge`. 2. Newer versions of Edge browser requires registry change to work in headless mode. See https://learn.microsoft.com/en-us/deployedge/microsoft-edge-policies#headlessmodeenabled. 3. One have to use `--headless=old` for Edge browser, otherwise `--domp-dom` does not work. 4. Firefox on Windows on VirtualBox on OpenSUSE does not correctly support WebGL emulation, therefore disable `--web=firefox` stressGraphics test on Windows. 5. Optionally one can run `stressGraphics` without 3d tests to verify all other tests on Windows/Firefox. 6. Adjust reference file to let correctly run web stressGraphics on Windows on all three browsers - Chrome, Edge and Firefox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16663
https://github.com/root-project/root/pull/16665:5,deployability,Updat,Update,5,[ci] Update builtin xrootd and davix versions; In preparation for ubuntu 24.10. (see also https://github.com/root-project/root/issues/16654).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:37,deployability,version,versions,37,[ci] Update builtin xrootd and davix versions; In preparation for ubuntu 24.10. (see also https://github.com/root-project/root/issues/16654).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:37,integrability,version,versions,37,[ci] Update builtin xrootd and davix versions; In preparation for ubuntu 24.10. (see also https://github.com/root-project/root/issues/16654).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:37,modifiability,version,versions,37,[ci] Update builtin xrootd and davix versions; In preparation for ubuntu 24.10. (see also https://github.com/root-project/root/issues/16654).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:5,safety,Updat,Update,5,[ci] Update builtin xrootd and davix versions; In preparation for ubuntu 24.10. (see also https://github.com/root-project/root/issues/16654).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16665:5,security,Updat,Update,5,[ci] Update builtin xrootd and davix versions; In preparation for ubuntu 24.10. (see also https://github.com/root-project/root/issues/16654).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16665
https://github.com/root-project/root/pull/16667:22,deployability,Build,Build,22,[ci] Add Ubuntu 24.10 Build; Build clad with one core only.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:29,deployability,Build,Build,29,[ci] Add Ubuntu 24.10 Build; Build clad with one core only.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/pull/16667:49,energy efficiency,core,core,49,[ci] Add Ubuntu 24.10 Build; Build clad with one core only.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16667
https://github.com/root-project/root/issues/16668:158,availability,error,error,158,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3966,availability,Operat,Operating,3966,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:13,deployability,depend,dependency,13,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:107,deployability,updat,updating,107,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:890,deployability,build,build,890,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:980,deployability,build,build,980,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1040,deployability,build,build,1040,"te issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:00000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1095,deployability,build,build,1095,"n. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1235,deployability,build,build,1235,"ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiato",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1685,deployability,build,build,1685,"sts.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1860,deployability,build,build,1860,",/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2215,deployability,build,build,2215,"x/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2415,deployability,build,build,2415,"dhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2885,deployability,build,build,2885,"tor.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3077,deployability,build,build,3077,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3274,deployability,build,build,3274,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3708,deployability,updat,updated,3708,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3807,deployability,build,build,3807,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3903,deployability,version,version,3903,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3928,deployability,Instal,Installation,3928,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3955,deployability,build,build,3955,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:433,energy efficiency,core,core,433,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:499,energy efficiency,core,core,499,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:525,energy efficiency,Core,CoreBaseTests,525,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:561,energy efficiency,core,core,561,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:587,energy efficiency,Core,CoreBaseTests,587,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:625,energy efficiency,core,core,625,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:651,energy efficiency,Core,CoreBaseTests,651,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:698,energy efficiency,core,core,698,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:724,energy efficiency,Core,CoreBaseTests,724,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:760,energy efficiency,core,core,760,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:786,energy efficiency,Core,CoreBaseTests,786,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:824,energy efficiency,core,core,824,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:839,energy efficiency,Core,CoreBaseTests,839,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:13,integrability,depend,dependency,13,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3903,integrability,version,version,3903,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1651,interoperability,plug,plugins,1651,"BaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1826,interoperability,plug,plugins,1826,"ase/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2181,interoperability,plug,plugins,2181,"o lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcana",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2381,interoperability,plug,plugins,2381,"-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2851,interoperability,plug,plugins,2851,"clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3043,interoperability,plug,plugins,3043,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3240,interoperability,plug,plugins,3240,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:13,modifiability,depend,dependency,13,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3903,modifiability,version,version,3903,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:158,performance,error,error,158,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:13,safety,depend,dependency,13,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:107,safety,updat,updating,107,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:158,safety,error,error,158,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:438,safety,test,testsupport,438,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:461,safety,Test,TestSupport,461,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:481,safety,Test,TestSupport,481,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:509,safety,test,test,509,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:571,safety,test,test,571,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:635,safety,test,test,635,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:708,safety,test,test,708,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:770,safety,test,test,770,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:834,safety,test,test,834,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3708,safety,updat,updated,3708,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:107,security,updat,updating,107,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3708,security,updat,updated,3708,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:13,testability,depend,dependency,13,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:438,testability,test,testsupport,438,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:461,testability,Test,TestSupport,461,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:481,testability,Test,TestSupport,481,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:509,testability,test,test,509,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:571,testability,test,test,571,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:635,testability,test,test,635,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:708,testability,test,test,708,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:770,testability,test,test,770,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:834,testability,test,test,834,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:4006,testability,context,context,4006,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:158,usability,error,error,158,"Missing clad dependency.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:. ```. && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1645,usability,tool,tools,1645,"es/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:1820,usability,tool,tools,1820," core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2175,usability,tool,tools,2175,"hread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :. /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2375,usability,tool,tools,2375,"t-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'. ```. and indeed:. ```. ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2583,usability,tool,tools,2583,"MethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 12777",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:2845,usability,tool,tools,2845,"ix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3037,usability,tool,tools,3037,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3234,usability,tool,tools,3234,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/issues/16668:3389,usability,tool,tools,3389,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const. ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*). ```. and. ```. rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o. -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a. -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o. -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a. -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so. ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16668
https://github.com/root-project/root/pull/16669:5,deployability,instal,install,5,`pip install ROOT`; Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16669
https://github.com/root-project/root/pull/16669:66,deployability,build,build,66,`pip install ROOT`; Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16669
https://github.com/root-project/root/pull/16669:84,deployability,instal,install,84,`pip install ROOT`; Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16669
https://github.com/root-project/root/pull/16669:20,usability,Minim,Minimal,20,`pip install ROOT`; Minimal set of changes required to enable pip build backends to install ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16669
https://github.com/root-project/root/pull/16670:92,deployability,build,builds,92,[RF] Fix some memory leaks in Python tutorials; To check if this would fix the Ubuntu 24.10 builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16670
https://github.com/root-project/root/pull/16670:14,performance,memor,memory,14,[RF] Fix some memory leaks in Python tutorials; To check if this would fix the Ubuntu 24.10 builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16670
https://github.com/root-project/root/pull/16670:14,usability,memor,memory,14,[RF] Fix some memory leaks in Python tutorials; To check if this would fix the Ubuntu 24.10 builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16670
https://github.com/root-project/root/pull/16671:113,availability,sli,slightly,113,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:323,availability,redund,redundant,323,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:323,deployability,redundan,redundant,323,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:113,reliability,sli,slightly,113,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:323,reliability,redundan,redundant,323,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:323,safety,redund,redundant,323,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:472,safety,avoid,avoid,472,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:35,usability,Clear,ClearProxiedObjects,35,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:205,usability,Clear,ClearProxiedObjects,205,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16671:409,usability,Clear,ClearProxiedObjects,409,"[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode; The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687. * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16671
https://github.com/root-project/root/pull/16672:94,deployability,version,version,94,"[PyROOT] Remove duplicate fillrandom tutorial; Remove duplicate fillrandom tutorial. Keep the version in `hist`, because the corresponding C++ tutorial is also there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16672
https://github.com/root-project/root/pull/16672:94,integrability,version,version,94,"[PyROOT] Remove duplicate fillrandom tutorial; Remove duplicate fillrandom tutorial. Keep the version in `hist`, because the corresponding C++ tutorial is also there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16672
https://github.com/root-project/root/pull/16672:94,modifiability,version,version,94,"[PyROOT] Remove duplicate fillrandom tutorial; Remove duplicate fillrandom tutorial. Keep the version in `hist`, because the corresponding C++ tutorial is also there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16672
https://github.com/root-project/root/issues/16673:3857,availability,Operat,Operating,3857,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3491,deployability,version,version,3491,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3555,deployability,observ,observed,3555,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3623,deployability,observ,observed,3623,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3688,deployability,observ,observed,3688,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3754,deployability,observ,observed,3754,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3787,deployability,Instal,Installation,3787,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1524,energy efficiency,model,model,1524,"d still exists in ROOT v6.32/02. However, in ROOT v6.26/08, the fit results of RooAddPdf and RooProdPdf are the same, which is expected. I make a reproducer script, in which RooAddpdf and RooProdPdf have the same pdf. In ROOT v6.26/08, RooAddpdf and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1531,energy efficiency,model,model,1531," exists in ROOT v6.32/02. However, in ROOT v6.26/08, the fit results of RooAddPdf and RooProdPdf are the same, which is expected. I make a reproducer script, in which RooAddpdf and RooProdPdf have the same pdf. In ROOT v6.26/08, RooAddpdf and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1552,energy efficiency,model,model,1552,"/02. However, in ROOT v6.26/08, the fit results of RooAddPdf and RooProdPdf are the same, which is expected. I make a reproducer script, in which RooAddpdf and RooProdPdf have the same pdf. In ROOT v6.26/08, RooAddpdf and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1769,energy efficiency,model,model,1769," and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1983,energy efficiency,model,model,1983," Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2041,energy efficiency,model,model,2041,"chments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2086,energy efficiency,model,model,2086,"814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2183,energy efficiency,model,model,2183,"ian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2254,energy efficiency,model,model,2254,"ataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2558,energy efficiency,Draw,Draw,2558,"x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no obser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2689,energy efficiency,Draw,Draw,2689,"BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - obs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2939,energy efficiency,Draw,Draw,2939,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3193,energy efficiency,Draw,Draw,3193,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3207,energy efficiency,Draw,Draw,3207,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1841,integrability,event,events,1841,"_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1913,integrability,event,events,1913,"4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3491,integrability,version,version,3491,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:3491,modifiability,version,version,3491,"00);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();. data->plotOn(frame4);. pdfprod.plotOn(frame4);. pdfprod.paramOn(frame4,Label(""RooProdPdf_fitted""));. frame4->Draw();. . c->Draw();. c->SaveAs(""RooFitMacro.png"");. . pdfadd.Print();. status3->Print();. pdfprod.Print();. status4->Print();. . return 0;. }. [RooFitMacroA.cpp.zip](https://github.com/user-attachments/files/17362710/RooFitMacroA.cpp.zip). just unzip and run as ""root RooFitMacroA.cpp"". ### ROOT version. on lxplus. ROOT v6.26.04-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.26.08-x86_64-centos7-gcc11-opt - no observed (same result). ROOT v6.28.00-x86_64-centos7-gcc11-opt - observed (different result). ROOT v6.32.02-x86_64-el9-gcc13-opt - observed (different result). ### Installation method. on lxplus, 'setupATLAS', lsetup ""root ..."" . ### Operating system. Linux centos7 and EL9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1524,security,model,model,1524,"d still exists in ROOT v6.32/02. However, in ROOT v6.26/08, the fit results of RooAddPdf and RooProdPdf are the same, which is expected. I make a reproducer script, in which RooAddpdf and RooProdPdf have the same pdf. In ROOT v6.26/08, RooAddpdf and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1531,security,model,model,1531," exists in ROOT v6.32/02. However, in ROOT v6.26/08, the fit results of RooAddPdf and RooProdPdf are the same, which is expected. I make a reproducer script, in which RooAddpdf and RooProdPdf have the same pdf. In ROOT v6.26/08, RooAddpdf and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1552,security,model,model,1552,"/02. However, in ROOT v6.26/08, the fit results of RooAddPdf and RooProdPdf are the same, which is expected. I make a reproducer script, in which RooAddpdf and RooProdPdf have the same pdf. In ROOT v6.26/08, RooAddpdf and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1769,security,model,model,1769," and RooProdPdf fit give the same Nbkg, which is expected. ![RooFitMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1834,security,sign,signal,1834,"itMacro_6_26_08_centos7_gcc11](https://github.com/user-attachments/assets/dbb6c4de-a4ad-451c-9f75-2669e9861c68). In ROOT v6.32/02, it gives different Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1976,security,sign,signal,1976,"fferent Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:1983,security,model,model,1983," Nbkg. ![RooFitMacro_6_32_02](https://github.com/user-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2034,security,sign,signal,2034,"er-attachments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2041,security,model,model,2041,"chments/assets/fdff4667-d0b8-4b3e-937d-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
https://github.com/root-project/root/issues/16673:2079,security,Sign,Signal,2079,"-149577814581). ### Reproducer. #include ""RooRealVar.h"". #include ""RooExponential.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooProdPdf.h"". #include ""RooDataSet.h"". #include ""RooPlot.h"". #include ""RooExtendPdf.h"". #include ""RooFitResult.h"". . #include ""TCanvas.h"". . int RooFitMacroA(). {. using namespace RooFit;. . RooRealVar x(""x"", ""x"", 0, 100);. RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);. RooExponential model(""model"", ""Exponential model"", x, alpha);. . // Define side band regions and full range. . x.setRange(""LEFT"", 0, 20);. x.setRange(""RIGHT"", 60, 100);. x.setRange(""BLIND"",20,60);. x.setRange(""FULL"", 0, 100);. std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};. . RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);. RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);. . RooRealVar mean(""mean"", ""Mean of signal model"", 40.);. RooRealVar width(""width"", ""Width of signal model"", 5.);. RooGaussian sig(""sig"", ""Signal model"", x, mean, width);. . // RooAddPdf pdfadd(""pdfadd"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});. RooAddPdf pdfadd(""pdfadd"", ""NBkg*background"", {model}, {Nbkg});. RooProdPdf pdfprod(""pdfprod"", ""pdfprod"", RooArgSet(pdfadd));. . pdfadd.Print();. pdfprod.Print();. . TCanvas* c = new TCanvas(""c"", ""c"", 1400, 1000);. c->Divide(2,2);. . c->cd(1);. RooPlot* frame1 = x.frame();. pdfadd.plotOn(frame1);. pdfadd.paramOn(frame1,Label(""RooAddPdf""));. frame1->Draw();. . c->cd(2);. RooPlot* frame2 = x.frame();. pdfprod.plotOn(frame2);. pdfprod.paramOn(frame2,Label(""RooProdPdf""));. frame2->Draw();. . c->cd(3);. RooPlot* frame3 = x.frame();. RooFitResult* status3 = pdfadd.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status3->Print();. data->plotOn(frame3);. pdfadd.plotOn(frame3);. pdfadd.paramOn(frame3,Label(""RooAddPdf_fitted""));. frame3->Draw();. . c->cd(4);. RooPlot* frame4 = x.frame();. RooFitResult* status4 = pdfprod.fitTo(*data,Range(""LEFT,RIGHT""),Save());. status4->Print();",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16673
