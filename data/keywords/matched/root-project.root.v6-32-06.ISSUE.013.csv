id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/3180:349,modifiability,modul,module,349,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:434,modifiability,modul,modulemaps,434,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:227,performance,load,loaded,227,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:586,reliability,redundan,redundant,586,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:19,safety,compl,complain,19,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:33,safety,modul,modulemap,33,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:56,safety,modul,modules,56,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:86,safety,patch,patch,86,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:120,safety,modul,module,120,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:197,safety,modul,modulemap,197,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:268,safety,modul,module,268,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:312,safety,modul,modulemap,312,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:349,safety,modul,module,349,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:434,safety,modul,modulemaps,434,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:586,safety,redund,redundant,586,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:19,security,compl,complain,19,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:86,security,patch,patch,86,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3181:13,deployability,Instal,Install,13,"[cxxmodules] Install all pcms; Previously, only pcms which were generated by rootcling was installed. For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to. install directory and was implicitly build to. /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we. want, we want all our root related pcms to be prebuilt and just be. installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3181
https://github.com/root-project/root/pull/3181:91,deployability,instal,installed,91,"[cxxmodules] Install all pcms; Previously, only pcms which were generated by rootcling was installed. For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to. install directory and was implicitly build to. /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we. want, we want all our root related pcms to be prebuilt and just be. installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3181
https://github.com/root-project/root/pull/3181:171,deployability,instal,install,171,"[cxxmodules] Install all pcms; Previously, only pcms which were generated by rootcling was installed. For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to. install directory and was implicitly build to. /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we. want, we want all our root related pcms to be prebuilt and just be. installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3181
https://github.com/root-project/root/pull/3181:208,deployability,build,build,208,"[cxxmodules] Install all pcms; Previously, only pcms which were generated by rootcling was installed. For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to. install directory and was implicitly build to. /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we. want, we want all our root related pcms to be prebuilt and just be. installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3181
https://github.com/root-project/root/pull/3181:356,deployability,instal,installed,356,"[cxxmodules] Install all pcms; Previously, only pcms which were generated by rootcling was installed. For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to. install directory and was implicitly build to. /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we. want, we want all our root related pcms to be prebuilt and just be. installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3181
https://github.com/root-project/root/pull/3181:263,usability,behavi,behavior,263,"[cxxmodules] Install all pcms; Previously, only pcms which were generated by rootcling was installed. For example, stl.pcm and _Builtin_intrinsics.pcm were not copied to. install directory and was implicitly build to. /tmp/org.llvm.clang.yuka../ at runtime. This behavior is not what we. want, we want all our root related pcms to be prebuilt and just be. installed and used from that location.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3181
https://github.com/root-project/root/pull/3182:85,deployability,patch,patches,85,"Cleanup deprecated and obsolete code; Same as #3163, but to be applied onto v6-16-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3182
https://github.com/root-project/root/pull/3182:85,safety,patch,patches,85,"Cleanup deprecated and obsolete code; Same as #3163, but to be applied onto v6-16-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3182
https://github.com/root-project/root/pull/3182:85,security,patch,patches,85,"Cleanup deprecated and obsolete code; Same as #3163, but to be applied onto v6-16-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3182
https://github.com/root-project/root/pull/3183:34,interoperability,standard,standard,34,"Use CMAKE_CXX_STANDARD to set C++ standard; Fixes: [ROOT-9695](https://sft.its.cern.ch/jira/browse/ROOT-9695), [ROOT-9805](https://sft.its.cern.ch/jira/browse/ROOT-9805).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3183
https://github.com/root-project/root/pull/3184:279,safety,avoid,avoid,279,"Fix ROOT-7487, make TObject::Clone always proceed.; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3184
https://github.com/root-project/root/pull/3184:256,security,sign,significant,256,"Fix ROOT-7487, make TObject::Clone always proceed.; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3184
https://github.com/root-project/root/pull/3184:192,usability,behavi,behavior,192,"Fix ROOT-7487, make TObject::Clone always proceed.; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3184
https://github.com/root-project/root/pull/3185:209,deployability,Updat,Update,209,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3185:125,energy efficiency,Measur,Measurement,125,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3185:209,safety,Updat,Update,209,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3185:209,security,Updat,Update,209,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3185:20,usability,document,documentation,20,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3185:38,usability,Document,Document,38,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3185:173,usability,Visual,VisualizeError,173,"[RF] Improve RooFit documentation.; * Document constructor of RooBukinPdf. * RooArgList. * Improve doxygen for RooDataSet. * Measurement, RooBernstein, RooCustomizer. * Add VisualizeError to RooAbsPdf docs. * Update index.md files to also show roofit tutorials. * Fix typo in RooPolyVar docs. * Add image and description for RooArgusBG, minor improvements for RooAbsPdf and AsymptoticCalculator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3185
https://github.com/root-project/root/pull/3186:69,deployability,build,building,69,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:368,deployability,patch,patch,368,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:41,energy efficiency,load,loading,41,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:290,integrability,interfac,interface,290,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:290,interoperability,interfac,interface,290,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:290,modifiability,interfac,interface,290,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:41,performance,load,loading,41,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:368,safety,patch,patch,368,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3186:368,security,patch,patch,368,"[ROOT-9872] Enable nested namespace when loading enum fwdDecls; When building with CMSSW, root was being in an infinite loop when. parsing this forward declaration at TCling::RegisterModule:. `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace. name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3186
https://github.com/root-project/root/pull/3187:293,safety,avoid,avoid,293,"Fix ROOT-7487, make TObject::Clone always proceed. Backport v616; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3187
https://github.com/root-project/root/pull/3187:270,security,sign,significant,270,"Fix ROOT-7487, make TObject::Clone always proceed. Backport v616; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3187
https://github.com/root-project/root/pull/3187:206,usability,behavi,behavior,206,"Fix ROOT-7487, make TObject::Clone always proceed. Backport v616; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3187
https://github.com/root-project/root/pull/3188:51,integrability,interfac,interface,51,[ROOT-9876] Fix crash introduced by the lazy array interface if cppyy…; … is not invoked through import ROOT. Fixes following JIRA tickets:. 1. https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-9876. 2. https://sft.its.cern.ch/jira/browse/CORALCOOL-3028,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3188
https://github.com/root-project/root/pull/3188:51,interoperability,interfac,interface,51,[ROOT-9876] Fix crash introduced by the lazy array interface if cppyy…; … is not invoked through import ROOT. Fixes following JIRA tickets:. 1. https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-9876. 2. https://sft.its.cern.ch/jira/browse/CORALCOOL-3028,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3188
https://github.com/root-project/root/pull/3188:51,modifiability,interfac,interface,51,[ROOT-9876] Fix crash introduced by the lazy array interface if cppyy…; … is not invoked through import ROOT. Fixes following JIRA tickets:. 1. https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-9876. 2. https://sft.its.cern.ch/jira/browse/CORALCOOL-3028,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3188
https://github.com/root-project/root/pull/3189:177,availability,slo,slot,177,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:275,availability,sli,slimmer,275,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:202,deployability,stack,stack,202,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:81,energy efficiency,optim,optimisation,81,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:53,performance,lock,lock,53,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:69,performance,performance optim,performance optimisation,69,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:115,performance,lock,lock,115,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:149,performance,lock,lock,149,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:177,reliability,slo,slot,177,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:275,reliability,sli,slimmer,275,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:53,security,lock,lock,53,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:115,security,lock,lock,115,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:149,security,lock,lock,149,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3189:69,usability,perform,performance,69,[DF] Use spin mutex in RSlotStack instead of rw-spin lock; This is a performance optimisation. We do not need a rw lock in this case because a write lock is needed. both when a slot is taken out of the stack and when it's put back. The header of the class has also been made slimmer thanks to the usage. of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3189
https://github.com/root-project/root/pull/3190:33,safety,test,test,33,"[RDF,PyROOT] Disable RDF.AsNumpy test on 32bit since RDF is disabled;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3190
https://github.com/root-project/root/pull/3190:33,testability,test,test,33,"[RDF,PyROOT] Disable RDF.AsNumpy test on 32bit since RDF is disabled;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3190
https://github.com/root-project/root/pull/3191:58,deployability,version,version,58,Be very precise when matching branch names to extract the version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3191
https://github.com/root-project/root/pull/3191:58,integrability,version,version,58,Be very precise when matching branch names to extract the version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3191
https://github.com/root-project/root/pull/3191:58,modifiability,version,version,58,Be very precise when matching branch names to extract the version;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3191
https://github.com/root-project/root/pull/3192:35,integrability,interfac,interface,35,[PyROOT] Improve handling of array interface if ROOT is not imported;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3192
https://github.com/root-project/root/pull/3192:35,interoperability,interfac,interface,35,[PyROOT] Improve handling of array interface if ROOT is not imported;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3192
https://github.com/root-project/root/pull/3192:35,modifiability,interfac,interface,35,[PyROOT] Improve handling of array interface if ROOT is not imported;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3192
https://github.com/root-project/root/pull/3193:143,deployability,releas,release,143,Avoid ldap.h sneaking in from wrong location as reported in SPI-1120; Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3193
https://github.com/root-project/root/pull/3193:151,deployability,build,builds,151,Avoid ldap.h sneaking in from wrong location as reported in SPI-1120; Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3193
https://github.com/root-project/root/pull/3193:0,safety,Avoid,Avoid,0,Avoid ldap.h sneaking in from wrong location as reported in SPI-1120; Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3193
https://github.com/root-project/root/pull/3193:70,safety,Prevent,Prevent,70,Avoid ldap.h sneaking in from wrong location as reported in SPI-1120; Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3193
https://github.com/root-project/root/pull/3193:70,security,Preven,Prevent,70,Avoid ldap.h sneaking in from wrong location as reported in SPI-1120; Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3193
https://github.com/root-project/root/pull/3193:197,usability,support,support,197,Avoid ldap.h sneaking in from wrong location as reported in SPI-1120; Prevent ldap.h sneaking in from wrong location as is the case during LCG release builds if ROOT is tried to be built with ldap support. All details can be found at SPI-1120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3193
https://github.com/root-project/root/pull/3194:262,deployability,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:262,integrability,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:262,interoperability,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:262,modifiability,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:262,reliability,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:72,safety,test,testing,72,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:231,safety,test,test-case,231,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:262,security,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:72,testability,test,testing,72,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:231,testability,test,test-case,231,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:262,testability,integr,integration,262,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3194:58,usability,prototyp,prototype,58,"Introducing web-based geometry viewer; This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, . only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3194
https://github.com/root-project/root/pull/3196:27,availability,Slo,Slow,27,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3196:32,performance,perform,performance,32,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3196:129,performance,disk,disk,129,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3196:27,reliability,Slo,Slow,27,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3196:235,safety,test,test-bench,235,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3196:235,testability,test,test-bench,235,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3196:32,usability,perform,performance,32,Speedup TOffsetGeneration; Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3196
https://github.com/root-project/root/pull/3199:119,deployability,depend,dependency,119,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:265,deployability,depend,depend,265,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:119,integrability,depend,dependency,119,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:265,integrability,depend,depend,265,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:119,modifiability,depend,dependency,119,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:265,modifiability,depend,depend,265,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:119,safety,depend,dependency,119,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:265,safety,depend,depend,265,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:119,testability,depend,dependency,119,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3199:265,testability,depend,depend,265,"Eve7: exclude REveGeoshape::Paint method; This was last methods where TVirtualPad and TVirtualPainter3D were used. Now dependency from libGpad remains only via libTreePlayer. Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3199
https://github.com/root-project/root/pull/3200:36,safety,test,test,36,Speedup TOffsetGeneration and bench test. (v616);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3200
https://github.com/root-project/root/pull/3200:36,testability,test,test,36,Speedup TOffsetGeneration and bench test. (v616);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3200
https://github.com/root-project/root/pull/3201:67,availability,sli,slightly,67,"[RF] Improve tutorials and their documentation; also code has been slightly modernised, formatted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3201
https://github.com/root-project/root/pull/3201:88,interoperability,format,formatted,88,"[RF] Improve tutorials and their documentation; also code has been slightly modernised, formatted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3201
https://github.com/root-project/root/pull/3201:67,reliability,sli,slightly,67,"[RF] Improve tutorials and their documentation; also code has been slightly modernised, formatted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3201
https://github.com/root-project/root/pull/3201:33,usability,document,documentation,33,"[RF] Improve tutorials and their documentation; also code has been slightly modernised, formatted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3201
https://github.com/root-project/root/pull/3202:172,availability,recov,recovered,172,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:9,deployability,releas,release,9,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:35,deployability,Releas,ReleaseNotes,35,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:172,deployability,recov,recovered,172,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:197,deployability,version,version,197,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:197,integrability,version,version,197,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:197,modifiability,version,version,197,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:172,reliability,recov,recovered,172,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:172,safety,recov,recovered,172,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3202:172,security,recov,recovered,172,"Move old release notes into README/ReleaseNotes/; I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3202
https://github.com/root-project/root/pull/3204:17,deployability,modul,module,17,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:400,deployability,contain,contains,400,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:422,deployability,modul,modules,422,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:473,deployability,modul,module,473,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:731,deployability,build,build,731,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:892,deployability,modul,modules,892,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:966,deployability,contain,contain,966,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:147,energy efficiency,current,current,147,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:288,interoperability,bind,bindings,288,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:540,interoperability,bind,bindings,540,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:914,interoperability,bind,bindings,914,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:17,modifiability,modul,module,17,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:288,modifiability,bind,bindings,288,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:422,modifiability,modul,modules,422,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:473,modifiability,modul,module,473,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:540,modifiability,bind,bindings,540,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:621,modifiability,pac,package,621,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:892,modifiability,modul,modules,892,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:914,modifiability,bind,bindings,914,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:1032,reliability,doe,does,1032,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:9,safety,Prevent,Prevent,9,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:17,safety,modul,module,17,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:55,safety,test,tests,55,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:83,safety,test,tests,83,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:113,safety,test,testfile,113,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:197,safety,test,testfile,197,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:259,safety,test,tests,259,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:422,safety,modul,modules,422,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:473,safety,modul,module,473,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:743,safety,test,testReport,743,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:892,safety,modul,modules,892,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:982,safety,test,tests,982,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:9,security,Preven,Prevent,9,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:55,testability,test,tests,55,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:83,testability,test,tests,83,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:113,testability,test,testfile,113,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:197,testability,test,testfile,197,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:259,testability,test,tests,259,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:743,testability,test,testReport,743,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3204:982,testability,test,tests,982,"[PyROOT] Prevent module confusion when running doctest tests; When running doctest tests with `python -m doctest testfile.py`, doctest changes the current working directory to the directory where `testfile.py` is. This is problematic for our JupyROOT doctest tests, located in `$ROOT_SRC/bindings/pyroot/JupyROOT`, because Python will prepend that directory to the `PYTHONPATH`. Since such directory contains other Python modules, those will have precedence over any other module from the system. This caused a problem e.g. with `$ROOT_SRC/bindings/pyroot/JupyROOT/html`, which was wrongly picked instead of the system's package called html. For example, this can be seen [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50688/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/). This commit proposes a reorganization of the Python modules in `$ROOT_SRC/bindings/pyroot/JupyROOT`, in particular those that contain doctest tests, so that the interference caused by doctest does not happen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3204
https://github.com/root-project/root/pull/3205:16,deployability,build,build,16,ROOT-9883: ROOT build fails if compiler path contains regex special characters; Checking how this `$CXX` stuff worked in `compiledata.sh` I found some obsolete stuff that could be removed as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3205
https://github.com/root-project/root/pull/3205:22,deployability,fail,fails,22,ROOT-9883: ROOT build fails if compiler path contains regex special characters; Checking how this `$CXX` stuff worked in `compiledata.sh` I found some obsolete stuff that could be removed as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3205
https://github.com/root-project/root/pull/3205:45,deployability,contain,contains,45,ROOT-9883: ROOT build fails if compiler path contains regex special characters; Checking how this `$CXX` stuff worked in `compiledata.sh` I found some obsolete stuff that could be removed as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3205
https://github.com/root-project/root/pull/3205:22,reliability,fail,fails,22,ROOT-9883: ROOT build fails if compiler path contains regex special characters; Checking how this `$CXX` stuff worked in `compiledata.sh` I found some obsolete stuff that could be removed as well.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3205
https://github.com/root-project/root/pull/3206:52,interoperability,platform,platforms,52,"[VecOps] Allow to emplace_back on RVec<bool> on all platforms; This is a workaround for a limitation of compilers such as. gcc 4.8 amd clang on osx 10.14 for which std::vector<bool>::emplace_back. is not defined. We have now a template for all types while at the bottom of this file. the partial specialisation for T == bool, which uses push_back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3206
https://github.com/root-project/root/pull/3208:331,deployability,Patch,Patch,331,Correct way to extract globals in TGlobalMappedFunction; In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`. But in reality all used functions have other signature: `void *&(*)()`. To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction. Within lambda each function called as it is and just return value casted to `void *`. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3208
https://github.com/root-project/root/pull/3208:238,modifiability,interm,intermediate,238,Correct way to extract globals in TGlobalMappedFunction; In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`. But in reality all used functions have other signature: `void *&(*)()`. To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction. Within lambda each function called as it is and just return value casted to `void *`. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3208
https://github.com/root-project/root/pull/3208:331,safety,Patch,Patch,331,Correct way to extract globals in TGlobalMappedFunction; In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`. But in reality all used functions have other signature: `void *&(*)()`. To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction. Within lambda each function called as it is and just return value casted to `void *`. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3208
https://github.com/root-project/root/pull/3208:183,security,sign,signature,183,Correct way to extract globals in TGlobalMappedFunction; In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`. But in reality all used functions have other signature: `void *&(*)()`. To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction. Within lambda each function called as it is and just return value casted to `void *`. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3208
https://github.com/root-project/root/pull/3208:331,security,Patch,Patch,331,Correct way to extract globals in TGlobalMappedFunction; In TGlobalMappedFunction all global functions casted to the type: `void *(*)()`. But in reality all used functions have other signature: `void *&(*)()`. To silent compiler warnings intermediate casting to (void*) was used - this is **dangerous** and in generally **wrong**. Patch introduces functor inside TGlobalMappedFunction. Within lambda each function called as it is and just return value casted to `void *`. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3208
https://github.com/root-project/root/pull/3209:42,deployability,updat,update,42,Move libpcre to new builtin mechanism and update to version 8.42; Related to [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3209
https://github.com/root-project/root/pull/3209:52,deployability,version,version,52,Move libpcre to new builtin mechanism and update to version 8.42; Related to [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3209
https://github.com/root-project/root/pull/3209:52,integrability,version,version,52,Move libpcre to new builtin mechanism and update to version 8.42; Related to [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3209
https://github.com/root-project/root/pull/3209:52,modifiability,version,version,52,Move libpcre to new builtin mechanism and update to version 8.42; Related to [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3209
https://github.com/root-project/root/pull/3209:42,safety,updat,update,42,Move libpcre to new builtin mechanism and update to version 8.42; Related to [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3209
https://github.com/root-project/root/pull/3209:42,security,updat,update,42,Move libpcre to new builtin mechanism and update to version 8.42; Related to [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3209
https://github.com/root-project/root/pull/3210:17,deployability,modul,module,17,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3210:17,modifiability,modul,module,17,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3210:9,safety,Prevent,Prevent,9,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3210:17,safety,modul,module,17,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3210:55,safety,test,tests,55,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3210:9,security,Preven,Prevent,9,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3210:55,testability,test,tests,55,[PyROOT] Prevent module confusion when running doctest tests (backport 6.16); Backport of https://github.com/root-project/root/pull/3204,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3210
https://github.com/root-project/root/pull/3211:217,deployability,build,build,217,[cmake] Fix removal of old ROOTSYS:; if(ENV{}) does not work with CMake 3.12. string cannot set ENV variables in CMake 3.12. Also suppress existing ROOTSYS from CMAKE_PREFIX_PATH to not pick up externals from another build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3211
https://github.com/root-project/root/pull/3211:100,modifiability,variab,variables,100,[cmake] Fix removal of old ROOTSYS:; if(ENV{}) does not work with CMake 3.12. string cannot set ENV variables in CMake 3.12. Also suppress existing ROOTSYS from CMAKE_PREFIX_PATH to not pick up externals from another build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3211
https://github.com/root-project/root/pull/3211:47,reliability,doe,does,47,[cmake] Fix removal of old ROOTSYS:; if(ENV{}) does not work with CMake 3.12. string cannot set ENV variables in CMake 3.12. Also suppress existing ROOTSYS from CMAKE_PREFIX_PATH to not pick up externals from another build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3211
https://github.com/root-project/root/pull/3213:151,performance,memor,memory,151,[VecOps] Replace template partial specialisation with overloads; as these are faster to compile (interpret) and upon ROOT startup do not. need as much memory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3213
https://github.com/root-project/root/pull/3213:151,usability,memor,memory,151,[VecOps] Replace template partial specialisation with overloads; as these are faster to compile (interpret) and upon ROOT startup do not. need as much memory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3213
https://github.com/root-project/root/pull/3214:85,deployability,build,builds,85,[cmake] Use builtin FindGSL:; This allows us to inject -DGSL_LIBRARY etc for relwase builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3214
https://github.com/root-project/root/pull/3214:48,integrability,inject,inject,48,[cmake] Use builtin FindGSL:; This allows us to inject -DGSL_LIBRARY etc for relwase builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3214
https://github.com/root-project/root/pull/3214:48,security,inject,inject,48,[cmake] Use builtin FindGSL:; This allows us to inject -DGSL_LIBRARY etc for relwase builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3214
https://github.com/root-project/root/pull/3215:14,deployability,log,logic,14,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:14,safety,log,logic,14,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:341,safety,test,tested,341,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:14,security,log,logic,14,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:14,testability,log,logic,14,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:174,testability,simpl,simple,174,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:320,testability,simpl,simple,320,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:341,testability,test,tested,341,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:174,usability,simpl,simple,174,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3215:320,usability,simpl,simple,320,"json: improve logic of removing typeinfo; ``""_typename""`` was always first member in JSON object. Therefore every next member add to object was separated with ``"",""`` - very simple. Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3215
https://github.com/root-project/root/pull/3216:198,availability,down,down,198,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:123,deployability,version,version,123,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:187,deployability,version,version,187,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:0,energy efficiency,Reduc,Reduce,0,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:123,integrability,version,version,123,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:187,integrability,version,version,187,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:123,modifiability,version,version,123,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:187,modifiability,version,version,187,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3216:31,performance,overhead,overhead,31,"Reduce in half the TTreeReader overhead; With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3216
https://github.com/root-project/root/pull/3217:51,integrability,interfac,interface,51,[PyROOT Exp] Use cppyy directly instead of TPython interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3217
https://github.com/root-project/root/pull/3217:51,interoperability,interfac,interface,51,[PyROOT Exp] Use cppyy directly instead of TPython interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3217
https://github.com/root-project/root/pull/3217:51,modifiability,interfac,interface,51,[PyROOT Exp] Use cppyy directly instead of TPython interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3217
https://github.com/root-project/root/pull/3218:51,integrability,interfac,interface,51,[PyROOT Exp] Use cppyy directly instead of TPython interface; TPython::CPPOverload_Check does an additional check for the. initialization of the Python interpreter that we don't need.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3218
https://github.com/root-project/root/pull/3218:51,interoperability,interfac,interface,51,[PyROOT Exp] Use cppyy directly instead of TPython interface; TPython::CPPOverload_Check does an additional check for the. initialization of the Python interpreter that we don't need.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3218
https://github.com/root-project/root/pull/3218:51,modifiability,interfac,interface,51,[PyROOT Exp] Use cppyy directly instead of TPython interface; TPython::CPPOverload_Check does an additional check for the. initialization of the Python interpreter that we don't need.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3218
https://github.com/root-project/root/pull/3218:89,reliability,doe,does,89,[PyROOT Exp] Use cppyy directly instead of TPython interface; TPython::CPPOverload_Check does an additional check for the. initialization of the Python interpreter that we don't need.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3218
https://github.com/root-project/root/pull/3220:22,safety,test,test,22,[Exp PyROOT] Only run test if Roofit is there;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3220
https://github.com/root-project/root/pull/3220:22,testability,test,test,22,[Exp PyROOT] Only run test if Roofit is there;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3220
https://github.com/root-project/root/pull/3221:987,availability,sli,slices,987,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1112,availability,Sli,Slice,1112,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1183,availability,Sli,Slice,1183,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1262,integrability,interfac,interface,1262,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1262,interoperability,interfac,interface,1262,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1262,modifiability,interfac,interface,1262,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:987,reliability,sli,slices,987,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1112,reliability,Sli,Slice,1112,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3221:1183,reliability,Sli,Slice,1183,"[TMVA::Experimental] RTensor C++ implementation; Implementation of the C++ side of RTensor. This PR replaces #2593. In addition, a second commit adds the feature `TMVA::Experimental::AsTensor`, which reads out an `RDataFrame` node as an `RTensor`. See the tutorials for examples or the short snipplets below. **RTensor basics:**. ```cpp. using namespace TMVA::Experimental;. // Create an RTensor from existing data. float data[] = {1, 2, 3, 4, 5, 6};. RTensor<float> x(data, {2, 3});. std::cout << x << std::endl;. // { { 1, 2, 3 }, { 4, 5, 6 } }. // Reshape the tensor without touching the data. x.Reshape({1, 6});. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Remove dimensions of 1. x.Squeeze();. std::cout << x << std::endl;. // { 1, 2, 3, 4, 5, 6 }. // Add dimensions. x.ExpandDims(0);. std::cout << x << std::endl;. // { { 1, 2, 3, 4, 5, 6 } }. // Transpose the tensor. x.Transpose();. std::cout << x << std::endl;. // { {1}, {2}, {3}, {4}, {5}, {6} }. // Extract slices as new RTensor objects. x.Reshape({2, 3});. std::cout << x << std::endl;. // { { 1, 3, 5 }, { 2, 4, 6 } }. auto y = x.Slice({-1, 0});. std::cout << y << std::endl;. // { 1, 2 }. auto z = x.Slice({0, -1});. std::cout << z << std::endl;. // { 1, 3, 5 }. // STL iterator interface and range-based loops. for(auto &v: x) v++;. std::cout << x << std::endl;. // { { 2, 4, 6 }, { 3, 5, 7 } }. ```. **TMVA::Experimental::AsTensor usage:**. ```cpp. ROOT::RDataFrame df(5);. auto df2 = df.Define(""x"", ""1.f*rdfentry_"").Define(""y"", ""-1.f*rdfentry_"");. auto x = TMVA::Experimental::AsTensor<float>(df2);. std::cout << x << std::endl;. // { { 0, -0 }, { 1, -1 }, { 2, -2 }, { 3, -3 }, { 4, -4 } }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3221
https://github.com/root-project/root/pull/3222:69,deployability,contain,contain,69,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:141,deployability,updat,updated,141,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:212,deployability,depend,dependency,212,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:346,deployability,depend,dependency,346,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:382,deployability,updat,updating,382,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:552,deployability,Build,Build,552,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:89,energy efficiency,Model,ModelConfig,89,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:117,energy efficiency,Model,ModelConfig,117,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:155,energy efficiency,current,current,155,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:228,energy efficiency,Model,ModelConfig,228,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:430,energy efficiency,Current,Currently,430,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:570,energy efficiency,Model,ModelConfig,570,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:212,integrability,depend,dependency,212,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:313,integrability,abstract,abstract,313,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:322,integrability,interfac,interface,322,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:346,integrability,depend,dependency,346,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:445,integrability,abstract,abstract,445,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:454,integrability,interfac,interface,454,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:702,integrability,interfac,interface,702,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:715,integrability,abstract,abstract,715,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:322,interoperability,interfac,interface,322,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:454,interoperability,interfac,interface,454,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:702,interoperability,interfac,interface,702,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:212,modifiability,depend,dependency,212,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:313,modifiability,abstract,abstract,313,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:322,modifiability,interfac,interface,322,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:346,modifiability,depend,dependency,346,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:445,modifiability,abstract,abstract,445,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:454,modifiability,interfac,interface,454,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:702,modifiability,interfac,interface,702,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:715,modifiability,abstract,abstract,715,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:728,performance,I/O,I/O,728,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:464,reliability,doe,does,464,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:141,safety,updat,updated,141,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:212,safety,depend,dependency,212,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:346,safety,depend,dependency,346,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:382,safety,updat,updating,382,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:417,safety,review,reviewers,417,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:512,safety,compl,complains,512,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:89,security,Model,ModelConfig,89,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:117,security,Model,ModelConfig,117,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:141,security,updat,updated,141,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:228,security,Model,ModelConfig,228,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:382,security,updat,updating,382,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:512,security,compl,complains,512,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:570,security,Model,ModelConfig,570,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:212,testability,depend,dependency,212,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:346,testability,depend,dependency,346,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3222:417,testability,review,reviewers,417,"[RooFit][ROOT-9777] Fix cloning workspaces.; When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**. Currently, the abstract interface does not have Type/Streamer info such that root complains:. `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`. How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3222
https://github.com/root-project/root/pull/3223:279,safety,avoid,avoid,279,"Fix ROOT-7487, make TObject::Clone always proceed.; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3223
https://github.com/root-project/root/pull/3223:256,security,sign,significant,256,"Fix ROOT-7487, make TObject::Clone always proceed.; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3223
https://github.com/root-project/root/pull/3223:192,usability,behavi,behavior,192,"Fix ROOT-7487, make TObject::Clone always proceed.; If gDirectory is a nullptr use gROOT. TObject::Clone uses. TDirectory[File]::CloneObject and the TDirectoryFile object. actually change the behavior (set gFile to nullptr) in a way. that probably require significant surgery to avoid using the. virtual function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3223
https://github.com/root-project/root/pull/3224:152,integrability,sub,submitted,152,"[IMT][ROOT-9892] Impose work isolation to TTaskGroup; otherwise, tasks while waiting for the completion of all tasks,. the workers can steal work items submitted to the TBB runtime by. ancestors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3224
https://github.com/root-project/root/pull/3224:29,safety,isol,isolation,29,"[IMT][ROOT-9892] Impose work isolation to TTaskGroup; otherwise, tasks while waiting for the completion of all tasks,. the workers can steal work items submitted to the TBB runtime by. ancestors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3224
https://github.com/root-project/root/pull/3224:93,safety,compl,completion,93,"[IMT][ROOT-9892] Impose work isolation to TTaskGroup; otherwise, tasks while waiting for the completion of all tasks,. the workers can steal work items submitted to the TBB runtime by. ancestors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3224
https://github.com/root-project/root/pull/3224:29,security,iso,isolation,29,"[IMT][ROOT-9892] Impose work isolation to TTaskGroup; otherwise, tasks while waiting for the completion of all tasks,. the workers can steal work items submitted to the TBB runtime by. ancestors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3224
https://github.com/root-project/root/pull/3224:93,security,compl,completion,93,"[IMT][ROOT-9892] Impose work isolation to TTaskGroup; otherwise, tasks while waiting for the completion of all tasks,. the workers can steal work items submitted to the TBB runtime by. ancestors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3224
https://github.com/root-project/root/pull/3224:29,testability,isol,isolation,29,"[IMT][ROOT-9892] Impose work isolation to TTaskGroup; otherwise, tasks while waiting for the completion of all tasks,. the workers can steal work items submitted to the TBB runtime by. ancestors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3224
https://github.com/root-project/root/pull/3225:41,deployability,depend,dependencies,41,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:113,energy efficiency,load,loaded,113,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:41,integrability,depend,dependencies,41,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:41,modifiability,depend,dependencies,41,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:113,performance,load,loaded,113,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:41,safety,depend,dependencies,41,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:261,safety,avoid,avoid,261,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3225:41,testability,depend,dependencies,41,"Drop MathCore and ROOTVecOps from PyROOT dependencies; These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3225
https://github.com/root-project/root/pull/3227:13,deployability,depend,dependency,13,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:266,deployability,build,builds,266,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:13,integrability,depend,dependency,13,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:13,modifiability,depend,dependency,13,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:257,performance,parallel,parallel,257,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:13,safety,depend,dependency,13,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:69,safety,detect,detect,69,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:69,security,detect,detect,69,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:13,testability,depend,dependency,13,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3227:142,usability,custom,custom,142,"Add explicit dependency between Imt and G__Imt targets; CMake should detect this, but since the output `G__Imt.cxx` is used both by `G__Imt` (custom target created by `ROOT_GENERATE_DICTIONARY()`) and `Imt` (via `target_sources()`), it leads to problems in parallel builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3227
https://github.com/root-project/root/pull/3228:26,deployability,instal,install,26,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:60,deployability,instal,install,60,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:102,deployability,instal,installed,102,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:170,deployability,depend,depending,170,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:170,integrability,depend,depending,170,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:170,modifiability,depend,depending,170,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:129,reliability,doe,doesn,129,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:170,safety,depend,depending,170,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3228:170,testability,depend,depending,170,"[RM] Exclude ""rdict"" from install script; We do not need to install rdict here, because it is already installed. Also this FIXME doesn't work as the list of pcms change. depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3228
https://github.com/root-project/root/pull/3229:44,usability,user,users,44,[IMT] Remove TTaskGroup tutorial and inform users about potential runtime penalty due to nesting;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3229
https://github.com/root-project/root/pull/3231:103,deployability,contain,contains,103,Provide I/O support for TKDE class; This PR allows the writing and reading from a file of a TKDE. . It contains also a bug fix in TKDE::SetNBins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3231
https://github.com/root-project/root/pull/3231:8,performance,I/O,I/O,8,Provide I/O support for TKDE class; This PR allows the writing and reading from a file of a TKDE. . It contains also a bug fix in TKDE::SetNBins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3231
https://github.com/root-project/root/pull/3231:12,usability,support,support,12,Provide I/O support for TKDE class; This PR allows the writing and reading from a file of a TKDE. . It contains also a bug fix in TKDE::SetNBins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3231
https://github.com/root-project/root/pull/3233:36,energy efficiency,optim,optimize,36,Cling no noopt; With `#pragma cling optimize (3)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 1.13e-07. (int) 0. ```. And `#pragma cling optimize (0)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 2.15174. (int) 0. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3233
https://github.com/root-project/root/pull/3233:171,energy efficiency,optim,optimize,171,Cling no noopt; With `#pragma cling optimize (3)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 1.13e-07. (int) 0. ```. And `#pragma cling optimize (0)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 2.15174. (int) 0. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3233
https://github.com/root-project/root/pull/3233:36,performance,optimiz,optimize,36,Cling no noopt; With `#pragma cling optimize (3)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 1.13e-07. (int) 0. ```. And `#pragma cling optimize (0)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 2.15174. (int) 0. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3233
https://github.com/root-project/root/pull/3233:171,performance,optimiz,optimize,171,Cling no noopt; With `#pragma cling optimize (3)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 1.13e-07. (int) 0. ```. And `#pragma cling optimize (0)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 2.15174. (int) 0. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3233
https://github.com/root-project/root/pull/3233:23,reliability,pra,pragma,23,Cling no noopt; With `#pragma cling optimize (3)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 1.13e-07. (int) 0. ```. And `#pragma cling optimize (0)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 2.15174. (int) 0. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3233
https://github.com/root-project/root/pull/3233:158,reliability,pra,pragma,158,Cling no noopt; With `#pragma cling optimize (3)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 1.13e-07. (int) 0. ```. And `#pragma cling optimize (0)`:. ```. $ root.exe -l -b -q enrico_clingopt.C. Processing enrico_clingopt.C... 2.15174. (int) 0. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3233
https://github.com/root-project/root/pull/3234:125,deployability,stack,stack,125,"[cmake io] Force /O3 on TStreamerInfo::ReadBuffer:; At O0, all variables of all local scopes get separately allocated on the stack. This sums up to 6k; streaming e.g. a RooWorkspace has 100s of recursions of this. function. Force O3, where the stack size shrinks to just above 200 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3234
https://github.com/root-project/root/pull/3234:244,deployability,stack,stack,244,"[cmake io] Force /O3 on TStreamerInfo::ReadBuffer:; At O0, all variables of all local scopes get separately allocated on the stack. This sums up to 6k; streaming e.g. a RooWorkspace has 100s of recursions of this. function. Force O3, where the stack size shrinks to just above 200 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3234
https://github.com/root-project/root/pull/3234:108,energy efficiency,alloc,allocated,108,"[cmake io] Force /O3 on TStreamerInfo::ReadBuffer:; At O0, all variables of all local scopes get separately allocated on the stack. This sums up to 6k; streaming e.g. a RooWorkspace has 100s of recursions of this. function. Force O3, where the stack size shrinks to just above 200 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3234
https://github.com/root-project/root/pull/3234:63,modifiability,variab,variables,63,"[cmake io] Force /O3 on TStreamerInfo::ReadBuffer:; At O0, all variables of all local scopes get separately allocated on the stack. This sums up to 6k; streaming e.g. a RooWorkspace has 100s of recursions of this. function. Force O3, where the stack size shrinks to just above 200 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3234
https://github.com/root-project/root/pull/3235:269,deployability,toggl,toggle,269,"Web geometry viewer - visibility, clipping, search, highlight; Next iteration of geometry viewer. Following new functions are introduced:. - search of geometry nodes and results display. - sync highlighting of selected volumes in hierarchy browser and in GL drawing. - toggle visibility flags and proper redraw. - fix problems with clipping. Up-to-date demo: https://linev.github.io/geomCMS/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3235
https://github.com/root-project/root/pull/3235:258,energy efficiency,draw,drawing,258,"Web geometry viewer - visibility, clipping, search, highlight; Next iteration of geometry viewer. Following new functions are introduced:. - search of geometry nodes and results display. - sync highlighting of selected volumes in hierarchy browser and in GL drawing. - toggle visibility flags and proper redraw. - fix problems with clipping. Up-to-date demo: https://linev.github.io/geomCMS/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3235
https://github.com/root-project/root/pull/3236:14,usability,support,support,14,"Improve arrow support; Fix a number of brown paperbag bugs and add initial support for nested types, starting from List<T>, which gets mapped to RVec<T>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3236
https://github.com/root-project/root/pull/3236:75,usability,support,support,75,"Improve arrow support; Fix a number of brown paperbag bugs and add initial support for nested types, starting from List<T>, which gets mapped to RVec<T>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3236
https://github.com/root-project/root/pull/3237:1006,energy efficiency,current,current,1006,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1038,energy efficiency,green,green,1038,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:610,integrability,inject,injection,610,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:870,integrability,inject,inject,870,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:144,interoperability,prox,proxies,144,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:959,modifiability,inherit,inherit,959,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1048,modifiability,extens,extension,1048,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:293,safety,Test,TestClass,293,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:385,safety,Test,TestClass,385,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1032,safety,test,tests,1032,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1072,safety,test,tests,1072,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:203,security,access,access,203,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:610,security,inject,injection,610,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:870,security,inject,inject,870,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:293,testability,Test,TestClass,293,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:385,testability,Test,TestClass,385,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1032,testability,test,tests,1032,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1072,testability,test,tests,1072,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:12,usability,Support,Support,12,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:185,usability,user,user,185,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:500,usability,user,user,500,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3237:1014,usability,behavi,behaviour,1014,"[ROOT-9789] Support member function templates in PyROOT; This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python. import ROOT. ROOT.gInterpreter.Declare("""""". struct TestClass {. template<class T> void templatedMember(const T& value) { }. };. """"""). t = ROOT.TestClass(). t.templatedMember('int')(1). ```. The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3237
https://github.com/root-project/root/pull/3238:6,safety,Prevent,Prevent,6,[RDF] Prevent compiler warnings with clang and range-based loop over …; …vector<bool>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3238
https://github.com/root-project/root/pull/3238:6,security,Preven,Prevent,6,[RDF] Prevent compiler warnings with clang and range-based loop over …; …vector<bool>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3238
https://github.com/root-project/root/pull/3239:13,interoperability,format,format,13,Fixed printf format warnings for size_t in gdml classes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3239
https://github.com/root-project/root/pull/3240:201,availability,error,error,201,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:434,availability,error,error,434,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:15,deployability,build,build,15,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:170,deployability,build,builds,170,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:177,deployability,fail,fail,177,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:616,deployability,build,build,616,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:713,deployability,fail,failed,713,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:462,energy efficiency,Measur,Measurement,462,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:535,energy efficiency,Measur,Measurement,535,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:201,performance,error,error,201,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:434,performance,error,error,434,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:177,reliability,fail,fail,177,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:713,reliability,fail,failed,713,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:201,safety,error,error,201,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:261,safety,test,test,261,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:331,safety,test,test,331,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:388,safety,test,test,388,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:434,safety,error,error,434,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:578,safety,test,test,578,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:650,safety,test,test,650,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:764,safety,compl,complaining,764,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:764,security,compl,complaining,764,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:261,testability,test,test,261,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:331,testability,test,test,331,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:388,testability,test,test,388,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:578,testability,test,test,578,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:650,testability,test,test,650,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:201,usability,error,error,201,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3240:434,usability,error,error,434,"[CMAKE] Do not build stressHistFactory if GSL is not found; ...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```. In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,. from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:. /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory. #include ""RooStats/HistFactory/Measurement.h"". ^. compilation terminated. test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed. ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3240
https://github.com/root-project/root/pull/3242:55,availability,error,errors,55,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3242:72,deployability,Patch,Patch,72,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3242:55,performance,error,errors,55,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3242:55,safety,error,errors,55,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3242:72,safety,Patch,Patch,72,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3242:72,security,Patch,Patch,72,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3242:55,usability,error,errors,55,[RM] Add a RAII to TClingBaseClassInfo; This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3242
https://github.com/root-project/root/pull/3244:30,integrability,buffer,buffers,30,[RF] Remove fixed-length char buffers from RooWorkspace; The RooWorkspace used 'char buf[xx]' in various places to process user strings. Supplying a long string to e.g. import stuff to a workspace would lead to the. rest being ignored silently. Fixes: ROOT-9486,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3244
https://github.com/root-project/root/pull/3244:123,usability,user,user,123,[RF] Remove fixed-length char buffers from RooWorkspace; The RooWorkspace used 'char buf[xx]' in various places to process user strings. Supplying a long string to e.g. import stuff to a workspace would lead to the. rest being ignored silently. Fixes: ROOT-9486,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3244
https://github.com/root-project/root/pull/3245:10,safety,test,tests,10,"[RDF] Add tests and single-thread support for RDF+TEntryList; As far as I can tell support for TEntryLists in TTreeProcessorMT is broken, and I'm not sure how to fix it. I have disabled the MT tests for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3245
https://github.com/root-project/root/pull/3245:193,safety,test,tests,193,"[RDF] Add tests and single-thread support for RDF+TEntryList; As far as I can tell support for TEntryLists in TTreeProcessorMT is broken, and I'm not sure how to fix it. I have disabled the MT tests for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3245
https://github.com/root-project/root/pull/3245:10,testability,test,tests,10,"[RDF] Add tests and single-thread support for RDF+TEntryList; As far as I can tell support for TEntryLists in TTreeProcessorMT is broken, and I'm not sure how to fix it. I have disabled the MT tests for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3245
https://github.com/root-project/root/pull/3245:193,testability,test,tests,193,"[RDF] Add tests and single-thread support for RDF+TEntryList; As far as I can tell support for TEntryLists in TTreeProcessorMT is broken, and I'm not sure how to fix it. I have disabled the MT tests for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3245
https://github.com/root-project/root/pull/3245:34,usability,support,support,34,"[RDF] Add tests and single-thread support for RDF+TEntryList; As far as I can tell support for TEntryLists in TTreeProcessorMT is broken, and I'm not sure how to fix it. I have disabled the MT tests for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3245
https://github.com/root-project/root/pull/3245:83,usability,support,support,83,"[RDF] Add tests and single-thread support for RDF+TEntryList; As far as I can tell support for TEntryLists in TTreeProcessorMT is broken, and I'm not sure how to fix it. I have disabled the MT tests for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3245
https://github.com/root-project/root/pull/3246:40,availability,error,error,40,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3246:40,performance,error,error,40,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3246:40,safety,error,error,40,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3246:96,safety,except,exception,96,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3246:40,usability,error,error,40,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3246:126,usability,Support,Support,126,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3246:193,usability,support,supported,193,Bugfixes in web geometry viewer; 1. Fix error with normals production for TGeo shapes. 2. Catch exception in GluTess code. 3. Support TGeoNode with finders. 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3246
https://github.com/root-project/root/pull/3247:29,usability,Minim,Minimal,29,Eve7 fixes for v6-16 branch; Minimal bugfixes for eve7 v6.16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3247
https://github.com/root-project/root/pull/3248:33,deployability,patch,patch,33,"[RDF] Fix ROOT-9898; Before this patch: the destructor of a derived node type destroyed. its shared_ptr to the previous node. The destructor of the base node. type, called _afterwards_, called fLoopManager->Deregister(this). In the special case in which the previous node was precisely. RLoopManager and no other RInterfaces or nodes held a shared_ptr to. it, the RLoopManager was being destructed (in the dtor of the derived class). just before that same node called Deregister on it (in the dtor of the. base class). After this patch: the derived node types are responsible for calling. Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3248
https://github.com/root-project/root/pull/3248:530,deployability,patch,patch,530,"[RDF] Fix ROOT-9898; Before this patch: the destructor of a derived node type destroyed. its shared_ptr to the previous node. The destructor of the base node. type, called _afterwards_, called fLoopManager->Deregister(this). In the special case in which the previous node was precisely. RLoopManager and no other RInterfaces or nodes held a shared_ptr to. it, the RLoopManager was being destructed (in the dtor of the derived class). just before that same node called Deregister on it (in the dtor of the. base class). After this patch: the derived node types are responsible for calling. Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3248
https://github.com/root-project/root/pull/3248:33,safety,patch,patch,33,"[RDF] Fix ROOT-9898; Before this patch: the destructor of a derived node type destroyed. its shared_ptr to the previous node. The destructor of the base node. type, called _afterwards_, called fLoopManager->Deregister(this). In the special case in which the previous node was precisely. RLoopManager and no other RInterfaces or nodes held a shared_ptr to. it, the RLoopManager was being destructed (in the dtor of the derived class). just before that same node called Deregister on it (in the dtor of the. base class). After this patch: the derived node types are responsible for calling. Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3248
https://github.com/root-project/root/pull/3248:530,safety,patch,patch,530,"[RDF] Fix ROOT-9898; Before this patch: the destructor of a derived node type destroyed. its shared_ptr to the previous node. The destructor of the base node. type, called _afterwards_, called fLoopManager->Deregister(this). In the special case in which the previous node was precisely. RLoopManager and no other RInterfaces or nodes held a shared_ptr to. it, the RLoopManager was being destructed (in the dtor of the derived class). just before that same node called Deregister on it (in the dtor of the. base class). After this patch: the derived node types are responsible for calling. Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3248
https://github.com/root-project/root/pull/3248:33,security,patch,patch,33,"[RDF] Fix ROOT-9898; Before this patch: the destructor of a derived node type destroyed. its shared_ptr to the previous node. The destructor of the base node. type, called _afterwards_, called fLoopManager->Deregister(this). In the special case in which the previous node was precisely. RLoopManager and no other RInterfaces or nodes held a shared_ptr to. it, the RLoopManager was being destructed (in the dtor of the derived class). just before that same node called Deregister on it (in the dtor of the. base class). After this patch: the derived node types are responsible for calling. Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3248
https://github.com/root-project/root/pull/3248:530,security,patch,patch,530,"[RDF] Fix ROOT-9898; Before this patch: the destructor of a derived node type destroyed. its shared_ptr to the previous node. The destructor of the base node. type, called _afterwards_, called fLoopManager->Deregister(this). In the special case in which the previous node was precisely. RLoopManager and no other RInterfaces or nodes held a shared_ptr to. it, the RLoopManager was being destructed (in the dtor of the derived class). just before that same node called Deregister on it (in the dtor of the. base class). After this patch: the derived node types are responsible for calling. Deregister, before destroying the shared_ptr to previous node. This fixes the use after delete reported in ROOT-9898.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3248
https://github.com/root-project/root/pull/3249:22,energy efficiency,OPTim,OPTimizer,22,"Ipopt ""Interior Point OPTimizer""; Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3249
https://github.com/root-project/root/pull/3249:87,energy efficiency,OPTim,OPTimizer,87,"Ipopt ""Interior Point OPTimizer""; Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3249
https://github.com/root-project/root/pull/3249:22,performance,OPTimiz,OPTimizer,22,"Ipopt ""Interior Point OPTimizer""; Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3249
https://github.com/root-project/root/pull/3249:87,performance,OPTimiz,OPTimizer,87,"Ipopt ""Interior Point OPTimizer""; Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3249
https://github.com/root-project/root/pull/3249:44,security,team,team,44,"Ipopt ""Interior Point OPTimizer""; Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3249
https://github.com/root-project/root/pull/3249:125,usability,document,documentation,125,"Ipopt ""Interior Point OPTimizer""; Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks. Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3249
https://github.com/root-project/root/pull/3252:18,availability,error,error,18,Fix documentation error (Bytecount in RootFile layout); Copied over the correct info from TFile.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3252
https://github.com/root-project/root/pull/3252:18,performance,error,error,18,Fix documentation error (Bytecount in RootFile layout); Copied over the correct info from TFile.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3252
https://github.com/root-project/root/pull/3252:18,safety,error,error,18,Fix documentation error (Bytecount in RootFile layout); Copied over the correct info from TFile.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3252
https://github.com/root-project/root/pull/3252:4,usability,document,documentation,4,Fix documentation error (Bytecount in RootFile layout); Copied over the correct info from TFile.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3252
https://github.com/root-project/root/pull/3252:18,usability,error,error,18,Fix documentation error (Bytecount in RootFile layout); Copied over the correct info from TFile.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3252
https://github.com/root-project/root/pull/3253:287,deployability,patch,patch,287,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3253:708,deployability,Log,Log,708,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3253:287,safety,patch,patch,287,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3253:708,safety,Log,Log,708,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3253:287,security,patch,patch,287,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3253:708,security,Log,Log,708,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3253:708,testability,Log,Log,708,"[TMVA] Fix GUI can't find all trained BDT's for plots; When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named. ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:. ```. Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for "". << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;. ```. , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3253
https://github.com/root-project/root/pull/3254:311,deployability,build,building,311,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:149,energy efficiency,alloc,allocation,149,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:142,performance,memor,memory,142,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:214,reliability,doe,does,214,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:98,safety,safe,safety,98,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:118,safety,test,tests,118,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:136,safety,avoid,avoid,136,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:324,safety,test,testing,324,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:118,testability,test,tests,118,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:324,testability,test,testing,324,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3254:142,usability,memor,memory,142,[tmva standalone reader codegen] replace vectors by arrays; The static vectors look like a thread safety issue in our tests. std::array avoid memory allocation on every execution in the same way. the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3254
https://github.com/root-project/root/pull/3255:99,availability,failur,failures,99,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:99,deployability,fail,failures,99,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:152,deployability,build,builds,152,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:250,deployability,fail,failing,250,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:292,deployability,build,builds,292,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:99,performance,failur,failures,99,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:99,reliability,fail,failures,99,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:250,reliability,fail,failing,250,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:40,safety,test,tests,40,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:94,safety,test,test,94,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:258,safety,test,tests,258,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:40,testability,test,tests,40,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:94,testability,test,test,94,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:258,testability,test,tests,258,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3255:328,usability,progress,progressively,328,"[Exp PyROOT] Temporarily disable PyROOT tests and tutorials in experimental mode; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3255
https://github.com/root-project/root/pull/3256:27,deployability,updat,update,27,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:179,integrability,sub,subsampling,179,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:194,integrability,event,events,194,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:205,reliability,doe,does,205,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:27,safety,updat,update,27,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:27,security,updat,update,27,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:12,usability,User,Users,12,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:18,usability,guid,guide,18,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3256:142,usability,UseR,UseRandomisedTrees,142,[NFC][TMVA] Users guide -- update instructions for randomised trees; The instructions were unclear. One could easily get the impression that `UseRandomisedTrees` directly enables subsampling of events. It does not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3256
https://github.com/root-project/root/pull/3257:73,integrability,filter,filters,73,[RDF] Fix ROOT-9898 (2/2); This commit complements a9093d2bb3 for jitted filters and actions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3257
https://github.com/root-project/root/pull/3257:39,safety,compl,complements,39,[RDF] Fix ROOT-9898 (2/2); This commit complements a9093d2bb3 for jitted filters and actions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3257
https://github.com/root-project/root/pull/3257:39,security,compl,complements,39,[RDF] Fix ROOT-9898 (2/2); This commit complements a9093d2bb3 for jitted filters and actions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3257
https://github.com/root-project/root/pull/3259:43,deployability,build,build,43,"ROOT-5998: Do not use file globbing in the build system; This is not complete, some places still have globbing. I will deal with them in a second pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3259
https://github.com/root-project/root/pull/3259:69,safety,compl,complete,69,"ROOT-5998: Do not use file globbing in the build system; This is not complete, some places still have globbing. I will deal with them in a second pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3259
https://github.com/root-project/root/pull/3259:69,security,compl,complete,69,"ROOT-5998: Do not use file globbing in the build system; This is not complete, some places still have globbing. I will deal with them in a second pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3259
https://github.com/root-project/root/pull/3260:93,availability,failur,failures,93,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:315,availability,restor,restored,315,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:47,deployability,fail,fail,47,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:93,deployability,fail,failures,93,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:146,deployability,build,builds,146,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:256,deployability,fail,fail,256,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:290,deployability,build,builds,290,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:93,performance,failur,failures,93,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:47,reliability,fail,fail,47,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:93,reliability,fail,failures,93,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:256,reliability,fail,fail,256,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:315,reliability,restor,restored,315,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:32,safety,test,tests,32,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:88,safety,test,test,88,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:241,safety,test,tests,241,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:32,testability,test,tests,32,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:88,testability,test,test,88,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:241,testability,test,tests,241,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3260:324,usability,progress,progressively,324,"[Exp PyROOT] Flag tutorials and tests that now fail in experimental PyROOT; A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3260
https://github.com/root-project/root/pull/3261:109,modifiability,variab,variable,109,[RF] Fix spurious binning warning in RooDataHist; RooDataHist warns that it has to readjust the binning of a variable. although no such adjustment is happening. Fixes: ROOT-8163,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3261
https://github.com/root-project/root/pull/3262:243,energy efficiency,load,loading,243,"[PyROOT][ROOT-9903] Do not invoke TPython::Exec upon ROOT import from ipython; and therewith notebooks. This was necessary to work around fakemodule, which has been removed. from ipython a long time ago. The invocation to TPython triggers the loading of the TPyClassGenerator. TClassGenerator. Such generator acquires the GIL from within C++ code. unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3262
https://github.com/root-project/root/pull/3262:194,performance,time,time,194,"[PyROOT][ROOT-9903] Do not invoke TPython::Exec upon ROOT import from ipython; and therewith notebooks. This was necessary to work around fakemodule, which has been removed. from ipython a long time ago. The invocation to TPython triggers the loading of the TPyClassGenerator. TClassGenerator. Such generator acquires the GIL from within C++ code. unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3262
https://github.com/root-project/root/pull/3262:243,performance,load,loading,243,"[PyROOT][ROOT-9903] Do not invoke TPython::Exec upon ROOT import from ipython; and therewith notebooks. This was necessary to work around fakemodule, which has been removed. from ipython a long time ago. The invocation to TPython triggers the loading of the TPyClassGenerator. TClassGenerator. Such generator acquires the GIL from within C++ code. unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3262
https://github.com/root-project/root/pull/3262:371,performance,deadlock,deadlocks,371,"[PyROOT][ROOT-9903] Do not invoke TPython::Exec upon ROOT import from ipython; and therewith notebooks. This was necessary to work around fakemodule, which has been removed. from ipython a long time ago. The invocation to TPython triggers the loading of the TPyClassGenerator. TClassGenerator. Such generator acquires the GIL from within C++ code. unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3262
https://github.com/root-project/root/pull/3262:396,safety,safe,safety,396,"[PyROOT][ROOT-9903] Do not invoke TPython::Exec upon ROOT import from ipython; and therewith notebooks. This was necessary to work around fakemodule, which has been removed. from ipython a long time ago. The invocation to TPython triggers the loading of the TPyClassGenerator. TClassGenerator. Such generator acquires the GIL from within C++ code. unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3262
https://github.com/root-project/root/pull/3262:484,security,sign,significantly,484,"[PyROOT][ROOT-9903] Do not invoke TPython::Exec upon ROOT import from ipython; and therewith notebooks. This was necessary to work around fakemodule, which has been removed. from ipython a long time ago. The invocation to TPython triggers the loading of the TPyClassGenerator. TClassGenerator. Such generator acquires the GIL from within C++ code. unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3262
https://github.com/root-project/root/pull/3263:128,availability,failur,failures,128,"Revert ""[RF][ROOT-9777] Fix cloning workspaces""; This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb. It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3263
https://github.com/root-project/root/pull/3263:128,deployability,fail,failures,128,"Revert ""[RF][ROOT-9777] Fix cloning workspaces""; This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb. It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3263
https://github.com/root-project/root/pull/3263:128,performance,failur,failures,128,"Revert ""[RF][ROOT-9777] Fix cloning workspaces""; This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb. It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3263
https://github.com/root-project/root/pull/3263:128,reliability,fail,failures,128,"Revert ""[RF][ROOT-9777] Fix cloning workspaces""; This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb. It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3263
https://github.com/root-project/root/pull/3263:123,safety,test,test,123,"Revert ""[RF][ROOT-9777] Fix cloning workspaces""; This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb. It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3263
https://github.com/root-project/root/pull/3263:123,testability,test,test,123,"Revert ""[RF][ROOT-9777] Fix cloning workspaces""; This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb. It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3263
https://github.com/root-project/root/pull/3264:36,safety,test,test,36,[DF][ROOT-9174] Re-activate RRootDS test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3264
https://github.com/root-project/root/pull/3264:36,testability,test,test,36,[DF][ROOT-9174] Re-activate RRootDS test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3264
https://github.com/root-project/root/pull/3265:56,performance,Network,Network,56,"Fix Jira issue #9469: TGFileBrowser ""ExpandDirectories"" Network FS detection; . Do not expand the parent directory tree on network file systems. Thanks to Oliver Freyermuth for the report and the list of file systems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3265
https://github.com/root-project/root/pull/3265:123,performance,network,network,123,"Fix Jira issue #9469: TGFileBrowser ""ExpandDirectories"" Network FS detection; . Do not expand the parent directory tree on network file systems. Thanks to Oliver Freyermuth for the report and the list of file systems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3265
https://github.com/root-project/root/pull/3265:67,safety,detect,detection,67,"Fix Jira issue #9469: TGFileBrowser ""ExpandDirectories"" Network FS detection; . Do not expand the parent directory tree on network file systems. Thanks to Oliver Freyermuth for the report and the list of file systems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3265
https://github.com/root-project/root/pull/3265:56,security,Network,Network,56,"Fix Jira issue #9469: TGFileBrowser ""ExpandDirectories"" Network FS detection; . Do not expand the parent directory tree on network file systems. Thanks to Oliver Freyermuth for the report and the list of file systems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3265
https://github.com/root-project/root/pull/3265:67,security,detect,detection,67,"Fix Jira issue #9469: TGFileBrowser ""ExpandDirectories"" Network FS detection; . Do not expand the parent directory tree on network file systems. Thanks to Oliver Freyermuth for the report and the list of file systems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3265
https://github.com/root-project/root/pull/3265:123,security,network,network,123,"Fix Jira issue #9469: TGFileBrowser ""ExpandDirectories"" Network FS detection; . Do not expand the parent directory tree on network file systems. Thanks to Oliver Freyermuth for the report and the list of file systems",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3265
https://github.com/root-project/root/pull/3266:108,deployability,instal,installation,108,Improvements for builtin libpcre; - Use `PCRE_PCRE_LIBRARY` and `PCRE_PCREPOSIX_LIBRARY` variables. - Avoid installation of empty `lib/pkgconfig` directory. Fixes: [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3266
https://github.com/root-project/root/pull/3266:89,modifiability,variab,variables,89,Improvements for builtin libpcre; - Use `PCRE_PCRE_LIBRARY` and `PCRE_PCREPOSIX_LIBRARY` variables. - Avoid installation of empty `lib/pkgconfig` directory. Fixes: [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3266
https://github.com/root-project/root/pull/3266:102,safety,Avoid,Avoid,102,Improvements for builtin libpcre; - Use `PCRE_PCRE_LIBRARY` and `PCRE_PCREPOSIX_LIBRARY` variables. - Avoid installation of empty `lib/pkgconfig` directory. Fixes: [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3266
https://github.com/root-project/root/pull/3267:864,availability,avail,available,864,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:982,availability,error,error,982,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:31,deployability,modul,modulemap,31,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:60,deployability,patch,patch,60,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:95,deployability,modul,modulemap,95,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:272,deployability,modul,modulemaps,272,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:310,deployability,modul,modulemap,310,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:326,deployability,modul,modulemap,326,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:366,deployability,modul,modulemap,366,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:701,deployability,modul,modules,701,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:993,deployability,build,build,993,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1066,deployability,patch,patch,1066,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1080,deployability,modul,modules,1080,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:353,energy efficiency,load,load,353,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:487,integrability,interfac,interface,487,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:687,integrability,interfac,interface,687,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:487,interoperability,interfac,interface,487,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:687,interoperability,interfac,interface,687,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1101,interoperability,distribut,distributed,1101,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:31,modifiability,modul,modulemap,31,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:95,modifiability,modul,modulemap,95,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:272,modifiability,modul,modulemaps,272,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:310,modifiability,modul,modulemap,310,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:326,modifiability,modul,modulemap,326,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:366,modifiability,modul,modulemap,366,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:487,modifiability,interfac,interface,487,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:687,modifiability,interfac,interface,687,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:701,modifiability,modul,modules,701,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1080,modifiability,modul,modules,1080,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:353,performance,load,load,353,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:982,performance,error,error,982,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:626,reliability,doe,doesn,626,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:864,reliability,availab,available,864,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:31,safety,modul,modulemap,31,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:60,safety,patch,patch,60,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:95,safety,modul,modulemap,95,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:272,safety,modul,modulemaps,272,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:310,safety,modul,modulemap,310,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:326,safety,modul,modulemap,326,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:366,safety,modul,modulemap,366,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:701,safety,modul,modules,701,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:864,safety,avail,available,864,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:982,safety,error,error,982,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1066,safety,patch,patch,1066,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1080,safety,modul,modules,1080,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:60,security,patch,patch,60,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:864,security,availab,available,864,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:1066,security,patch,patch,1066,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:618,usability,clear,clearly,618,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3267:982,usability,error,error,982,"[cxxmodules] Introduce virtual modulemap overlay file; This patch includes:. - Remove existing modulemap.overlay files. Cling now can generate virtual overlay files on-demand. - Implement `-modulemap_overlay` flag to Cling. This flag is used to tell Cling the location of modulemaps to be. overlayed. (eg. stl.modulemap, libc.modulemap). - Generate and load virtual modulemap in Cling. It is in Interpreter constructor, happens as part of cxxmodules. initialization step. - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer. Previously, Clang only took a ""string of filenames"" which clearly doesn't. work for our usecase. We already discussed this new interface at. modules meeting, so this change will land upstream. - Add a file existence check in Clang. When compiling a pcm and when Clang saw the #include with which pcm was available. (or being generated implicitly), Clang was putting a notation of the full path to this pcm. This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it. work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3267
https://github.com/root-project/root/pull/3268:29,deployability,modul,modules,29,"[cxxmodules] Add support for modules in genreflex; Add `--cxxmodule` flag to genreflex, which actually just passes the flag. `-cxxmodule` to rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3268
https://github.com/root-project/root/pull/3268:29,modifiability,modul,modules,29,"[cxxmodules] Add support for modules in genreflex; Add `--cxxmodule` flag to genreflex, which actually just passes the flag. `-cxxmodule` to rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3268
https://github.com/root-project/root/pull/3268:29,safety,modul,modules,29,"[cxxmodules] Add support for modules in genreflex; Add `--cxxmodule` flag to genreflex, which actually just passes the flag. `-cxxmodule` to rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3268
https://github.com/root-project/root/pull/3268:17,usability,support,support,17,"[cxxmodules] Add support for modules in genreflex; Add `--cxxmodule` flag to genreflex, which actually just passes the flag. `-cxxmodule` to rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3268
https://github.com/root-project/root/pull/3269:1,energy efficiency,Core,Core,1,"[Core] Add TClass::GetClass<T> method to lower contention; The method TClass::GetClass<T> obtains the TClass instance pointer. corresponding to T in two ways, according to the nature of T. If T inherits from or is TObject, the TClass* value is obtained via the. T::Class() static method, which locks only upon the first call. If T is a generic type, internally the TClass::GetClass(type_info, ...). method is called. The new functionality is put to a good use by this commit in TBuffer. and TDirectoryFile. It is worth noting how the usage of tag dispatching could be replaced. by 'if constexpr'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3269
https://github.com/root-project/root/pull/3269:194,modifiability,inherit,inherits,194,"[Core] Add TClass::GetClass<T> method to lower contention; The method TClass::GetClass<T> obtains the TClass instance pointer. corresponding to T in two ways, according to the nature of T. If T inherits from or is TObject, the TClass* value is obtained via the. T::Class() static method, which locks only upon the first call. If T is a generic type, internally the TClass::GetClass(type_info, ...). method is called. The new functionality is put to a good use by this commit in TBuffer. and TDirectoryFile. It is worth noting how the usage of tag dispatching could be replaced. by 'if constexpr'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3269
https://github.com/root-project/root/pull/3269:47,performance,content,contention,47,"[Core] Add TClass::GetClass<T> method to lower contention; The method TClass::GetClass<T> obtains the TClass instance pointer. corresponding to T in two ways, according to the nature of T. If T inherits from or is TObject, the TClass* value is obtained via the. T::Class() static method, which locks only upon the first call. If T is a generic type, internally the TClass::GetClass(type_info, ...). method is called. The new functionality is put to a good use by this commit in TBuffer. and TDirectoryFile. It is worth noting how the usage of tag dispatching could be replaced. by 'if constexpr'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3269
https://github.com/root-project/root/pull/3269:294,performance,lock,locks,294,"[Core] Add TClass::GetClass<T> method to lower contention; The method TClass::GetClass<T> obtains the TClass instance pointer. corresponding to T in two ways, according to the nature of T. If T inherits from or is TObject, the TClass* value is obtained via the. T::Class() static method, which locks only upon the first call. If T is a generic type, internally the TClass::GetClass(type_info, ...). method is called. The new functionality is put to a good use by this commit in TBuffer. and TDirectoryFile. It is worth noting how the usage of tag dispatching could be replaced. by 'if constexpr'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3269
https://github.com/root-project/root/pull/3269:294,security,lock,locks,294,"[Core] Add TClass::GetClass<T> method to lower contention; The method TClass::GetClass<T> obtains the TClass instance pointer. corresponding to T in two ways, according to the nature of T. If T inherits from or is TObject, the TClass* value is obtained via the. T::Class() static method, which locks only upon the first call. If T is a generic type, internally the TClass::GetClass(type_info, ...). method is called. The new functionality is put to a good use by this commit in TBuffer. and TDirectoryFile. It is worth noting how the usage of tag dispatching could be replaced. by 'if constexpr'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3269
https://github.com/root-project/root/pull/3270:16,safety,test,test,16,Remove not used test files and makefiles;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3270
https://github.com/root-project/root/pull/3270:16,testability,test,test,16,Remove not used test files and makefiles;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3270
https://github.com/root-project/root/pull/3273:23,deployability,version,version,23,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:109,deployability,build,build,109,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:149,deployability,version,version,149,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:179,deployability,version,versions,179,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:429,deployability,resourc,resource-dir,429,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:429,energy efficiency,resourc,resource-dir,429,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:23,integrability,version,version,23,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:149,integrability,version,version,149,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:179,integrability,version,versions,179,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:134,interoperability,specif,specific,134,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:23,modifiability,version,version,23,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:149,modifiability,version,version,149,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:179,modifiability,version,versions,179,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:429,performance,resourc,resource-dir,429,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:240,reliability,doe,does,240,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:322,safety,review,review,322,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:429,safety,resourc,resource-dir,429,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:322,testability,review,review,322,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:429,testability,resourc,resource-dir,429,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:79,usability,user,user,79,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3273:235,usability,user,user,235,"Adding method to set a version of clang if more than one found.; This allows a user (like conda-forge's ROOT build on macOS) to set a specific clang version if there are multiple versions of the clang libraries present. No change if a user does not pass `-D CLANG_RESOURCE_DIR_VERSION=5.0.0` or similar to CMake. Requires review from @amadio : there might be a better way to do this using something like `realpath $(clang -print-resource-dir)`, but that would be a larger change and would require the path to the clang binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3273
https://github.com/root-project/root/pull/3274:7,deployability,depend,dependencies,7,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:182,deployability,depend,dependencies,182,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:7,integrability,depend,dependencies,7,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:182,integrability,depend,dependencies,182,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:7,modifiability,depend,dependencies,7,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:182,modifiability,depend,dependencies,182,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:7,safety,depend,dependencies,7,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:182,safety,depend,dependencies,182,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:7,testability,depend,dependencies,7,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3274:182,testability,depend,dependencies,182,"Remove dependencies of TUnixSystem & TWinNTSystem on net/net/inc; Move declaration of ESockOptions and ESendRecvOptions enums from TSocket.h to TSystem.h, to get rid of this include dependencies in CMake:. include_directories(${CMAKE_SOURCE_DIR}/net/net/inc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3274
https://github.com/root-project/root/pull/3275:69,deployability,build,builds,69,[Exp PyROOT] Another round of test disabling for experimental PyROOT builds; To address:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/12/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3275
https://github.com/root-project/root/pull/3275:30,safety,test,test,30,[Exp PyROOT] Another round of test disabling for experimental PyROOT builds; To address:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/12/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3275
https://github.com/root-project/root/pull/3275:30,testability,test,test,30,[Exp PyROOT] Another round of test disabling for experimental PyROOT builds; To address:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/12/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3275
https://github.com/root-project/root/pull/3277:14,usability,support,support,14,Improve arrow support master;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3277
https://github.com/root-project/root/pull/3278:32,security,sign,signed,32,Fix warning: comparison between signed and unsigned integer expressio…; …ns on Ubuntu 32bit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3278
https://github.com/root-project/root/pull/3279:110,deployability,depend,dependency,110,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:217,deployability,build,build,217,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:110,integrability,depend,dependency,110,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:110,modifiability,depend,dependency,110,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:208,performance,parallel,parallel,208,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:229,performance,perform,performance,229,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:110,safety,depend,dependency,110,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:194,safety,test,tests,194,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:110,testability,depend,dependency,110,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:194,testability,test,tests,194,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:38,usability,tool,tools,38,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3279:229,usability,perform,performance,229,Added CMake target roottools for ROOT tools; roottools CMake target purpose is to provide handle to used as a dependency in roottest.git. It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3279
https://github.com/root-project/root/pull/3280:44,usability,help,help,44,[DictGen][ROOT-9900] rootcling prints short help with -h long help with --help;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3280
https://github.com/root-project/root/pull/3280:62,usability,help,help,62,[DictGen][ROOT-9900] rootcling prints short help with -h long help with --help;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3280
https://github.com/root-project/root/pull/3280:74,usability,help,help,74,[DictGen][ROOT-9900] rootcling prints short help with -h long help with --help;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3280
https://github.com/root-project/root/pull/3282:213,energy efficiency,load,load,213,"[Exp PyROOT] Make sure cppyy libraries on OSX have .so suffix; Otherwise `libcppyy` and `libcppyy_backend` are generated with the`.dylib` suffix on OSX. This causes a crash when importing cppyy, since it tries to load `libcppyy_backend.so` using ctypes. Thank you @amadio for the suggestion of setting `CMAKE_SHARED_LIBRARY_SUFFIX`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3282
https://github.com/root-project/root/pull/3282:213,performance,load,load,213,"[Exp PyROOT] Make sure cppyy libraries on OSX have .so suffix; Otherwise `libcppyy` and `libcppyy_backend` are generated with the`.dylib` suffix on OSX. This causes a crash when importing cppyy, since it tries to load `libcppyy_backend.so` using ctypes. Thank you @amadio for the suggestion of setting `CMAKE_SHARED_LIBRARY_SUFFIX`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3282
https://github.com/root-project/root/pull/3283:43,energy efficiency,core,core,43,[MT][ROOT-9901] Replace usage of strtok in core and hist; and protect the TUrl class from races.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3283
https://github.com/root-project/root/pull/3284:19,deployability,configurat,configuration,19,Unify builtin PCRE configuration for UNIX and Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3284
https://github.com/root-project/root/pull/3284:19,integrability,configur,configuration,19,Unify builtin PCRE configuration for UNIX and Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3284
https://github.com/root-project/root/pull/3284:19,modifiability,configur,configuration,19,Unify builtin PCRE configuration for UNIX and Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3284
https://github.com/root-project/root/pull/3284:19,security,configur,configuration,19,Unify builtin PCRE configuration for UNIX and Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3284
https://github.com/root-project/root/pull/3285:21,availability,cluster,clustering,21,[CmdTools] Add TTree clustering info to rootls;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3285
https://github.com/root-project/root/pull/3285:21,deployability,cluster,clustering,21,[CmdTools] Add TTree clustering info to rootls;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3285
https://github.com/root-project/root/pull/3286:25,integrability,coupl,couple,25,Speedup RArrowDS; Drop a couple of unneeded calls.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3286
https://github.com/root-project/root/pull/3286:25,modifiability,coupl,couple,25,Speedup RArrowDS; Drop a couple of unneeded calls.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3286
https://github.com/root-project/root/pull/3286:25,testability,coupl,couple,25,Speedup RArrowDS; Drop a couple of unneeded calls.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3286
https://github.com/root-project/root/pull/3287:50,deployability,build,build,50,[cxxmodule] Fix a warning in cxxmod-noimt nightly build; This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h. and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3287
https://github.com/root-project/root/pull/3287:62,deployability,patch,patch,62,[cxxmodule] Fix a warning in cxxmod-noimt nightly build; This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h. and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3287
https://github.com/root-project/root/pull/3287:62,safety,patch,patch,62,[cxxmodule] Fix a warning in cxxmod-noimt nightly build; This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h. and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3287
https://github.com/root-project/root/pull/3287:62,security,patch,patch,62,[cxxmodule] Fix a warning in cxxmod-noimt nightly build; This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h. and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3287
https://github.com/root-project/root/pull/3287:127,security,sign,signal,127,[cxxmodule] Fix a warning in cxxmod-noimt nightly build; This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h. and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3287
https://github.com/root-project/root/pull/3288:34,deployability,infrastructur,infrastructure,34,Add change with no effect to test infrastructure (not meant for merging);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3288
https://github.com/root-project/root/pull/3288:29,safety,test,test,29,Add change with no effect to test infrastructure (not meant for merging);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3288
https://github.com/root-project/root/pull/3288:29,testability,test,test,29,Add change with no effect to test infrastructure (not meant for merging);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3288
https://github.com/root-project/root/pull/3290:0,deployability,Updat,Update,0,Update builtin LZMA version; - multiple bug fixes . -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.4. -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3290
https://github.com/root-project/root/pull/3290:20,deployability,version,version,20,Update builtin LZMA version; - multiple bug fixes . -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.4. -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3290
https://github.com/root-project/root/pull/3290:20,integrability,version,version,20,Update builtin LZMA version; - multiple bug fixes . -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.4. -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3290
https://github.com/root-project/root/pull/3290:20,modifiability,version,version,20,Update builtin LZMA version; - multiple bug fixes . -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.4. -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3290
https://github.com/root-project/root/pull/3290:0,safety,Updat,Update,0,Update builtin LZMA version; - multiple bug fixes . -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.4. -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3290
https://github.com/root-project/root/pull/3290:0,security,Updat,Update,0,Update builtin LZMA version; - multiple bug fixes . -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.4. -- https://git.tukaani.org/?p=xz.git;a=shortlog;h=refs/tags/v5.2.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3290
https://github.com/root-project/root/pull/3291:96,deployability,patch,patch,96,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:353,deployability,fail,fails,353,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:364,deployability,Contain,Contains,364,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:604,deployability,Contain,Contains,604,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:1113,deployability,Contain,Contains,1113,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:1285,deployability,patch,patch,1285,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:545,energy efficiency,current,current,545,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:353,reliability,fail,fails,353,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:96,safety,patch,patch,96,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:1095,safety,safe,safe,1095,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:1285,safety,patch,patch,1285,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:96,security,patch,patch,96,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:1285,security,patch,patch,1285,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:14,usability,navigat,navigation,14,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:972,usability,document,documentation,972,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3291:1015,usability,clear,clearly,1015,"Fix incorrect navigation when exactly on the frontier of a node with overlaps [ROOT-9907]; This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3291
https://github.com/root-project/root/pull/3293:13,reliability,pra,pragma,13,"Fix ""unknown pragma"" compiler warning on Windows;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3293
https://github.com/root-project/root/pull/3294:13,reliability,pra,pragma,13,"Fix ""unknown pragma"" compiler warnings on Windows;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3294
https://github.com/root-project/root/pull/3297:13,reliability,pra,pragma,13,"Fix ""unknown pragma"" compiler warning on Windows;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3297
https://github.com/root-project/root/pull/3298:126,integrability,sub,subclasses,126,"[Exp PyROOT] Add TCollection and TIter pythonisations and tests; This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3298
https://github.com/root-project/root/pull/3298:58,safety,test,tests,58,"[Exp PyROOT] Add TCollection and TIter pythonisations and tests; This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3298
https://github.com/root-project/root/pull/3298:254,safety,test,tests,254,"[Exp PyROOT] Add TCollection and TIter pythonisations and tests; This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3298
https://github.com/root-project/root/pull/3298:58,testability,test,tests,58,"[Exp PyROOT] Add TCollection and TIter pythonisations and tests; This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3298
https://github.com/root-project/root/pull/3298:249,testability,unit,unit,249,"[Exp PyROOT] Add TCollection and TIter pythonisations and tests; This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3298
https://github.com/root-project/root/pull/3298:254,testability,test,tests,254,"[Exp PyROOT] Add TCollection and TIter pythonisations and tests; This PR mainly adds pythonisations for `TCollection` and its subclasses. It also adds a pythonisation for `TIter`, which is necessary to iterate over `TCollection`s. The corresponding unit tests for every pythonisation are also proposed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3298
https://github.com/root-project/root/pull/3299:29,deployability,modul,modules,29,"[cxxmodule] Fix a warning in modules build; Not expose ROOT/RConfig.h to rootcling, but to add the header to ROOT_Config pcm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3299
https://github.com/root-project/root/pull/3299:37,deployability,build,build,37,"[cxxmodule] Fix a warning in modules build; Not expose ROOT/RConfig.h to rootcling, but to add the header to ROOT_Config pcm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3299
https://github.com/root-project/root/pull/3299:29,modifiability,modul,modules,29,"[cxxmodule] Fix a warning in modules build; Not expose ROOT/RConfig.h to rootcling, but to add the header to ROOT_Config pcm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3299
https://github.com/root-project/root/pull/3299:29,safety,modul,modules,29,"[cxxmodule] Fix a warning in modules build; Not expose ROOT/RConfig.h to rootcling, but to add the header to ROOT_Config pcm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3299
https://github.com/root-project/root/pull/3299:48,security,expos,expose,48,"[cxxmodule] Fix a warning in modules build; Not expose ROOT/RConfig.h to rootcling, but to add the header to ROOT_Config pcm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3299
https://github.com/root-project/root/pull/3300:20,deployability,modul,modules,20,[Do not merge] Test modules without preloading;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3300
https://github.com/root-project/root/pull/3300:20,modifiability,modul,modules,20,[Do not merge] Test modules without preloading;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3300
https://github.com/root-project/root/pull/3300:15,safety,Test,Test,15,[Do not merge] Test modules without preloading;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3300
https://github.com/root-project/root/pull/3300:20,safety,modul,modules,20,[Do not merge] Test modules without preloading;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3300
https://github.com/root-project/root/pull/3300:15,testability,Test,Test,15,[Do not merge] Test modules without preloading;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3300
https://github.com/root-project/root/pull/3301:19,deployability,build,build,19,builtins/pcre: use build byproducts only for Ninja; This allows us to use generator expressions for the library name to also fix the build on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3301
https://github.com/root-project/root/pull/3301:133,deployability,build,build,133,builtins/pcre: use build byproducts only for Ninja; This allows us to use generator expressions for the library name to also fix the build on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3301
https://github.com/root-project/root/pull/3302:13,deployability,modul,modules,13,Fix link for modules release documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3302
https://github.com/root-project/root/pull/3302:21,deployability,releas,release,21,Fix link for modules release documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3302
https://github.com/root-project/root/pull/3302:13,modifiability,modul,modules,13,Fix link for modules release documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3302
https://github.com/root-project/root/pull/3302:13,safety,modul,modules,13,Fix link for modules release documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3302
https://github.com/root-project/root/pull/3302:29,usability,document,documentation,29,Fix link for modules release documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3302
https://github.com/root-project/root/pull/3303:84,availability,error,errors,84,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:199,availability,Error,Error,199,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:133,deployability,instal,installed,133,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:214,deployability,modul,modules,214,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:407,deployability,Stack,Stack,407,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:446,deployability,modul,modules,446,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:150,integrability,configur,configured,150,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:247,integrability,messag,message,247,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:247,interoperability,messag,message,247,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:150,modifiability,configur,configured,150,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:214,modifiability,modul,modules,214,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:446,modifiability,modul,modules,446,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:84,performance,error,errors,84,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:199,performance,Error,Error,199,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:84,safety,error,errors,84,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:199,safety,Error,Error,199,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:214,safety,modul,modules,214,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:446,safety,modul,modules,446,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:150,security,configur,configured,150,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:84,usability,error,errors,84,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3303:199,usability,Error,Error,199,root_generate_dictionary: do not search for headers with find_file(); This leads to errors due to absolute paths if ROOT is already. installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):. Header path. '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'. /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx. is not relative! Call Stack (most recent call first):. cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY). graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3303
https://github.com/root-project/root/pull/3305:65,deployability,fail,fail,65,[Exp PyROOT] tutorial-roofit-rf511_wsfactory_basic-py should not fail;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3305
https://github.com/root-project/root/pull/3305:65,reliability,fail,fail,65,[Exp PyROOT] tutorial-roofit-rf511_wsfactory_basic-py should not fail;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3305
https://github.com/root-project/root/pull/3306:81,energy efficiency,adapt,adapt,81,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3306:81,integrability,adapt,adapt,81,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3306:81,interoperability,adapt,adapt,81,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3306:81,modifiability,adapt,adapt,81,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3306:50,performance,memor,memory,50,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3306:22,usability,user,user,22,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3306:50,usability,memor,memory,50,[IO][ROOT-6145] Allow user to set the size of the memory block of TMemFiles; and adapt the size of the block for TBufferMergerFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3306
https://github.com/root-project/root/pull/3307:63,deployability,version,version,63,"[RF] Fix rf511 python tutorial, remove unncessary lines in C++ version;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3307
https://github.com/root-project/root/pull/3307:63,integrability,version,version,63,"[RF] Fix rf511 python tutorial, remove unncessary lines in C++ version;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3307
https://github.com/root-project/root/pull/3307:63,modifiability,version,version,63,"[RF] Fix rf511 python tutorial, remove unncessary lines in C++ version;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3307
https://github.com/root-project/root/pull/3308:37,interoperability,format,formatting,37,Windows: use 0x%p instead of %p when formatting pointer values;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3308
https://github.com/root-project/root/pull/3309:18,interoperability,incompatib,incompatible,18,Windows: disable (incompatible) stressHistFactory test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3309
https://github.com/root-project/root/pull/3309:50,safety,test,test,50,Windows: disable (incompatible) stressHistFactory test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3309
https://github.com/root-project/root/pull/3309:50,testability,test,test,50,Windows: disable (incompatible) stressHistFactory test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3309
https://github.com/root-project/root/pull/3310:210,deployability,releas,release,210,"Fix incorrect navigation when exactly on the frontier of an overlapping volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3310
https://github.com/root-project/root/pull/3310:224,deployability,patch,patch,224,"Fix incorrect navigation when exactly on the frontier of an overlapping volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3310
https://github.com/root-project/root/pull/3310:224,safety,patch,patch,224,"Fix incorrect navigation when exactly on the frontier of an overlapping volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3310
https://github.com/root-project/root/pull/3310:224,security,patch,patch,224,"Fix incorrect navigation when exactly on the frontier of an overlapping volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3310
https://github.com/root-project/root/pull/3310:202,testability,plan,plan,202,"Fix incorrect navigation when exactly on the frontier of an overlapping volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3310
https://github.com/root-project/root/pull/3310:14,usability,navigat,navigation,14,"Fix incorrect navigation when exactly on the frontier of an overlapping volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3310
https://github.com/root-project/root/pull/3311:14,usability,navigat,navigation,14,"Fix incorrect navigation when exactly on the frontier of an overlappiing volume; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3311
https://github.com/root-project/root/pull/3312:71,availability,failur,failure,71,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1964,availability,error,error,1964,"ND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2286,availability,Error,Error,2286,".17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2322,availability,Error,Error,2322,": previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2867,availability,Error,Error,2867,"uded from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2903,availability,Error,Error,2903,"Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3449,availability,Error,Error,3449,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3485,availability,Error,Error,3485,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4035,availability,Error,Error,4035,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4129,availability,error,error,4129,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4216,availability,Error,Error,4216,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4272,availability,Error,Error,4272,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:71,deployability,fail,failure,71,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:584,deployability,contain,contains,584,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:997,deployability,contain,contains,997,indows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1405,deployability,contain,contains,1405,". 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4079,deployability,modul,modules,4079,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4209,deployability,Fail,Failed,4209,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4265,deployability,FAIL,FAILED,4265,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1006,energy efficiency,green,green,1006,fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their re,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4113,integrability,messag,message,4113,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4113,interoperability,messag,message,4113,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4079,modifiability,modul,modules,4079,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:71,performance,failur,failure,71,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1964,performance,error,error,1964,"ND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2286,performance,Error,Error,2286,".17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2322,performance,Error,Error,2322,": previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2380,performance,content,content,2380,"0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSample",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2867,performance,Error,Error,2867,"uded from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2903,performance,Error,Error,2903,"Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2962,performance,content,content,2962,"ror: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3449,performance,Error,Error,3449,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3485,performance,Error,Error,3485,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3542,performance,content,content,3542,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4035,performance,Error,Error,4035,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4129,performance,error,error,4129,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4216,performance,Error,Error,4216,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4272,performance,Error,Error,4272,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:71,reliability,fail,failure,71,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4209,reliability,Fail,Failed,4209,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4265,reliability,FAIL,FAILED,4265,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:86,safety,test,test-stresshistofit-interpreted,86,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:118,safety,test,test,118,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:170,safety,test,test,170,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:276,safety,test,test,276,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:686,safety,test,test,686,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1100,safety,test,test,1100,"fit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1506,safety,test,test,1506,"vious definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1932,safety,test,test,1932,"on is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1964,safety,error,error,1964,"ND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2286,safety,Error,Error,2286,".17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2322,safety,Error,Error,2322,": previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2867,safety,Error,Error,2867,"uded from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2903,safety,Error,Error,2903,"Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3449,safety,Error,Error,3449,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3485,safety,Error,Error,3485,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4035,safety,Error,Error,4035,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4079,safety,modul,modules,4079,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4129,safety,error,error,4129,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4160,safety,Test,Test,4160,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4171,safety,test,test-stresshistofit-interpreted,4171,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4216,safety,Error,Error,4216,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4272,safety,Error,Error,4272,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:86,testability,test,test-stresshistofit-interpreted,86,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:118,testability,test,test,118,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:170,testability,test,test,170,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:276,testability,test,test,276,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:686,testability,test,test,686,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1100,testability,test,test,1100,"fit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1506,testability,test,test,1506,"vious definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1932,testability,test,test,1932,"on is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4160,testability,Test,Test,4160,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4171,testability,test,test-stresshistofit-interpreted,4171,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:144,usability,User,Users,144,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:250,usability,User,Users,250,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:660,usability,User,Users,660,Windows: fix stressHistoFit when interpreted; This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1074,usability,User,Users,1074,e of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx... 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_BLUE 1. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1480,usability,User,Users,1480,"oleapi2.h:35:9: note: previous definition is here. 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_GREEN 2. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1906,usability,User,Users,1906,": note: previous definition is here. 151: #define FOREGROUND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:1964,usability,error,error,1964,"ND_GREEN 0x0002 // text color contains green. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_RED 4. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2286,usability,Error,Error,2286,".17134.0\um\consoleapi2.h:37:9: note: previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2322,usability,Error,Error,2322,": previous definition is here. 151: #define FOREGROUND_RED 0x0004 // text color contains red. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]. 151: #define FOREGROUND_INTENSITY 8. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here. 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified. 151: ^. 151: In file included from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2867,usability,Error,Error,2867,"uded from input_line_10:1:. 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:2903,usability,Error,Error,2903,"Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded. 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);. 151: ^. 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here. 151: SetConsoleTextAttribute(. 151: ^. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3449,usability,Error,Error,3449,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:3485,usability,Error,Error,3485,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4035,usability,Error,Error,4035,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4047,usability,User,Users,4047,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4129,usability,error,error,4129,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4216,usability,Error,Error,4216,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3312:4272,usability,Error,Error,4272,"in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:. 151:. 151: #line 1 ""libUnuran dictionary payload"". 151:. 151: #ifndef HAVE_CONFIG_H. 151: #define HAVE_CONFIG_H 1. 151: #endif. 151:. 151: #define _BACKWARD_BACKWARD_WARNING_H. 151: #include ""TUnuran.h"". 151: #include ""TUnuranBaseDist.h"". 151: #include ""TUnuranContDist.h"". 151: #include ""TUnuranDiscrDist.h"". 151: #include ""TUnuranEmpDist.h"". 151: #include ""TUnuranMultiContDist.h"". 151: #include ""TUnuranSampler.h"". 151:. 151: #undef _BACKWARD_BACKWARD_WARNING_H. 151:. 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):. 151: error code: 1. 151:. 151:. 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3312
https://github.com/root-project/root/pull/3313:14,usability,navigat,navigation,14,"Fix incorrect navigation when exactly on the frontier of an overlapping volumes; This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3313
https://github.com/root-project/root/pull/3314:46,safety,test,test,46,Windows: copy the libElementStruct.dll in the test directory;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3314
https://github.com/root-project/root/pull/3314:46,testability,test,test,46,Windows: copy the libElementStruct.dll in the test directory;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3314
https://github.com/root-project/root/pull/3315:45,availability,sla,slashes,45,Windows: fix testoptical.C (use only forward slashes in the path);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3315
https://github.com/root-project/root/pull/3315:45,reliability,sla,slashes,45,Windows: fix testoptical.C (use only forward slashes in the path);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3315
https://github.com/root-project/root/pull/3315:13,safety,test,testoptical,13,Windows: fix testoptical.C (use only forward slashes in the path);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3315
https://github.com/root-project/root/pull/3315:13,testability,test,testoptical,13,Windows: fix testoptical.C (use only forward slashes in the path);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3315
https://github.com/root-project/root/pull/3316:64,safety,test,tests,64,Windows: make sure the files are not present before running the tests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3316
https://github.com/root-project/root/pull/3316:64,testability,test,tests,64,Windows: make sure the files are not present before running the tests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3316
https://github.com/root-project/root/pull/3317:46,interoperability,standard,standard,46,Fix for ROOT-9916 and better handling for C++ standard;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3317
https://github.com/root-project/root/pull/3319:127,energy efficiency,reduc,reduces,127,[TMVA] Dataloader includes spring cleaning; The DataLoader had a number of extraneous includes and friends. Removing them also reduces compilation time!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3319
https://github.com/root-project/root/pull/3319:147,performance,time,time,147,[TMVA] Dataloader includes spring cleaning; The DataLoader had a number of extraneous includes and friends. Removing them also reduces compilation time!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3319
https://github.com/root-project/root/pull/3320:303,deployability,version,version,303,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:79,integrability,Filter,Filters,79,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:153,integrability,Filter,Filter,153,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:161,integrability,transform,transformations,161,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:303,integrability,version,version,303,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:161,interoperability,transform,transformations,161,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:303,modifiability,version,version,303,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3320:210,performance,time,time,210,"[DF] 2x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings is non negligible. --> Have a look to the extreme version of this PR - a factor 50x speedup: https://github.com/root-project/root/pull/3324",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3320
https://github.com/root-project/root/pull/3321:325,energy efficiency,optim,optimized,325,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:400,energy efficiency,model,model,400,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:530,energy efficiency,load,load,530,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:539,energy efficiency,model,model,539,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:583,energy efficiency,model,model,583,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:764,energy efficiency,model,model,764,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:795,energy efficiency,model,model,795,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:909,energy efficiency,model,model,909,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1047,energy efficiency,Model,Model,1047," The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1328,energy efficiency,model,models,1328,"zed out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1363,energy efficiency,predict,prediction,1363,"r(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1376,energy efficiency,model,model,1376,"First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1382,energy efficiency,Predict,Predict,1382,"let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Pred",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1458,energy efficiency,predict,prediction,1458,".ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1995,energy efficiency,model,model,1995,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2001,energy efficiency,Predict,Predict,2001,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2028,energy efficiency,Predict,Prediction,2028,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2382,energy efficiency,Predict,Predict,2382,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2400,energy efficiency,model,model,2400,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2683,energy efficiency,Model,Model,2683,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2707,energy efficiency,Draw,Draw,2707,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2727,energy efficiency,Draw,Draw,2727,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:40,integrability,interfac,interface,40,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:153,integrability,interfac,interface,153,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:217,integrability,interfac,interface,217,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:965,integrability,Event,Event-by-event,965,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:997,integrability,Batch,Batch,997,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1033,integrability,event,events,1033,"ion interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Predicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1101,integrability,Event,Event-by-event,1101," following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform infere",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1134,integrability,event,event-by-event,1134,"application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame grap",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1436,integrability,event,event,1436,"name = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1487,integrability,Batch,Batch,1487,"e.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1523,integrability,event,events,1523," we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1538,integrability,batch,batch,1538,"del from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1845,integrability,event,events,1845,"ames used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/517403",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1958,integrability,event,events,1958,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2061,integrability,event,events,2061,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:40,interoperability,interfac,interface,40,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:153,interoperability,interfac,interface,153,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:217,interoperability,interfac,interface,217,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:559,interoperability,XML,XML,559,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:648,interoperability,xml,xml,648,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:40,modifiability,interfac,interface,40,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:153,modifiability,interfac,interface,153,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:217,modifiability,interfac,interface,217,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:717,modifiability,variab,variables,717,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:783,modifiability,variab,variables,783,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:880,modifiability,variab,variables,880,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:947,modifiability,scenario,scenarios,947,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1183,modifiability,variab,variables,1183,"utorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1883,modifiability,variab,variables,1883,"s << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2408,modifiability,variab,variables,2408,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:325,performance,optimiz,optimized,325,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:530,performance,load,load,530,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:997,performance,Batch,Batch,997,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1487,performance,Batch,Batch,1487,"e.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_hi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1538,performance,batch,batch,1538,"del from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2039,performance,perform,performed,2039,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2094,performance,Perform,Perform,2094,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2185,performance,perform,performs,2185,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1320,safety,process model,process models,1320,"timized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1363,safety,predict,prediction,1363,"r(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1382,safety,Predict,Predict,1382,"let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Pred",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1458,safety,predict,prediction,1458,".ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1918,safety,input,input,1918,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2001,safety,Predict,Predict,2001,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2028,safety,Predict,Prediction,2028,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2382,safety,Predict,Predict,2382,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:400,security,model,model,400,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:539,security,model,model,539,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:583,security,model,model,583,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:764,security,model,model,764,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:795,security,model,model,795,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:909,security,model,model,909,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1047,security,Model,Model,1047," The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1328,security,model,models,1328,"zed out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1376,security,model,model,1376,"First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1995,security,model,model,1995,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2400,security,model,model,2400,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2683,security,Model,Model,2683,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:80,usability,support,support,80,"[WIP][Proposal] Modern TMVA application interface; The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp. void train(const std::string& filename) {. // optimized out. }. void tmva003_RLegacyReader(). {. // First, let's train a model with TMVA. const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";. train(filename);. // Next, we load the model from the TMVA XML file. RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during. // training, you can ask the model for it. auto variables = model.GetVariableNames();. std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:1918,usability,input,input,1918,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2039,usability,perform,performed,2039,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2094,usability,Perform,Perform,2094,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2185,usability,perform,performs,2185,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3321:2800,usability,user,user-images,2800,"""\n\n"";. // The model can now be applied in different scenarios:. // 1) Event-by-event inference. // 2) Batch inference on data of multiple events. // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference. // The event-by-event inference takes the values of the variables as a std::vector<float>. // Note that the return value is as well a std::vector<float> since the reader. // is also capable to process models with multiple outputs. auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});. std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events. // For batch inference, the data needs to be structured as a matrix. For this. // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame. // and the AsTensor utility to make the read-out from the ROOT file. ROOT::RDataFrame df(""TreeS"", filename);. auto df2 = df.Range(3); // Read only 10 events. auto x = AsTensor<float>(df2, variables);. std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);. std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph. // We write a small lambda function that performs for us the inference on. // a dataframe to omit code duplication. auto make_histo = [&](const std::string &treename) {. ROOT::RDataFrame df(treename, filename);. auto df2 = df.Define(""y"", Predict<4, float>(model), variables);. return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");. };. auto sig = make_histo(""TreeS"");. auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);. auto c = new TCanvas("""", """", 800, 800);. sig->SetLineColor(kRed);. bkg->SetLineColor(kBlue);. bkg->GetXaxis()->SetTitle(""Model response"");. bkg->Draw(""HIST"");. sig->Draw(""HIST SAME"");. c->SaveAs(""bdt_response.pdf"");. }. ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3321
https://github.com/root-project/root/pull/3322:13,deployability,Updat,Update,13,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:48,deployability,updat,updates,48,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:195,deployability,updat,update,195,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:415,deployability,fail,failing,415,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:869,deployability,updat,update,869,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:751,integrability,sub,subclasses,751,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:785,integrability,interfac,interface,785,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:785,interoperability,interfac,interface,785,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:936,interoperability,standard,standard,936,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:30,modifiability,pac,packages,30,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:310,modifiability,variab,variable,310,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:762,modifiability,inherit,inherit,762,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:785,modifiability,interfac,interface,785,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:415,reliability,fail,failing,415,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:13,safety,Updat,Update,13,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:48,safety,updat,updates,48,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:195,safety,updat,update,195,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:405,safety,test,tests,405,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:441,safety,prevent,prevents,441,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:869,safety,updat,update,869,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:13,security,Updat,Update,13,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:48,security,updat,updates,48,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:195,security,updat,update,195,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:441,security,preven,prevents,441,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:869,security,updat,update,869,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3322:405,testability,test,tests,405,"[Exp PyROOT] Update the Cppyy packages; This PR updates the Cppyy copy of experimental PyROOT, in particular with:. - cppyy v1.4.1. - cppyy_backend v1.7.0 (clingwrapper). - CPyCppyy v1.5.1. This update brings in, among other things:. * A few fixes in Cppyy for Windows. * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/. * A fix for `addressof` in Cppyy. * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit. * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3322
https://github.com/root-project/root/pull/3324:547,availability,avail,available,547,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:591,deployability,version,version,591,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:91,integrability,Filter,Filters,91,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:165,integrability,Filter,Filter,165,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:173,integrability,transform,transformations,173,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:311,integrability,discover,discover,311,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:591,integrability,version,version,591,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:173,interoperability,transform,transformations,173,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:311,interoperability,discover,discover,311,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:591,modifiability,version,version,591,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:222,performance,time,time,222,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:607,performance,perform,performance,607,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:547,reliability,availab,available,547,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:547,safety,avail,available,547,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:474,security,ident,identifiers,474,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:547,security,availab,available,547,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:311,usability,discov,discover,311,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3324:607,usability,perform,performance,607,"[DF][ROOT-9917] 50x speedup factor in matching column names to code to jit; in Defines and Filters. When dealing with very large computation graphs with many Define/Filter. transformations defined with jitted strings, the time for matching. column names to strings was non negligible. The previous mechanism to discover the columns present in the strings. to be jitted was based on regular expressions. The new approach is based. on a lexer, lexertk. The idea is to extract identifiers from. the string and then compare them with the column names available. in the DF. This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3324
https://github.com/root-project/root/pull/3325:24,deployability,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,deployability,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,deployability,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,deployability,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,deployability,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:24,integrability,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,integrability,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,integrability,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,integrability,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,integrability,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:24,interoperability,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,interoperability,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,interoperability,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,interoperability,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,interoperability,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:24,modifiability,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,modifiability,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,modifiability,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,modifiability,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,modifiability,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:24,reliability,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,reliability,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,reliability,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,reliability,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,reliability,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:485,safety,test,test,485,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:24,security,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,security,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,security,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,security,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,security,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:24,testability,integr,integral,24,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:64,testability,integr,integral,64,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:120,testability,integr,integrals,120,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:208,testability,integr,integrals,208,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:480,testability,unit,unit,480,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:485,testability,test,test,485,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3325:511,testability,integr,integrals,511,"[RF] Improve analytical integral of RooGaussian; The analytical integral of RooGaussian was using erf() to compute the. integrals. Starting from x>5*sigma, this always yields 1 because of limited. precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail. To obtain the same precision in the low tails, all ranges are mapped. onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3325
https://github.com/root-project/root/pull/3326:42,deployability,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,deployability,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,deployability,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,deployability,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,deployability,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:42,integrability,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,integrability,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,integrability,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,integrability,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,integrability,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:42,interoperability,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,interoperability,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,interoperability,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,interoperability,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,interoperability,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:42,modifiability,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,modifiability,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:338,modifiability,variab,variables,338,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,modifiability,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,modifiability,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,modifiability,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:42,reliability,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,reliability,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,reliability,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,reliability,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,reliability,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:42,security,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,security,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,security,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,security,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,security,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:42,testability,integr,integral,42,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:93,testability,integr,integral,93,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:468,testability,integr,integration,468,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:499,testability,integr,integral,499,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3326:557,testability,integr,integral,557,"[RF][ROOT-9518][ROOT-5333] Fix analytical integral of RooPoisson; [ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the. discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1). yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without. ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used. as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,. the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3326
https://github.com/root-project/root/pull/3327:264,deployability,updat,updated,264,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:53,integrability,interfac,interface,53,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:81,integrability,interfac,interface,81,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:53,interoperability,interfac,interface,53,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:81,interoperability,interfac,interface,81,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:53,modifiability,interfac,interface,53,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:81,modifiability,interfac,interface,81,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:183,modifiability,paramet,parameter,183,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:91,reliability,doe,does,91,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:264,safety,updat,updated,264,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:228,security,access,accessible,228,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:264,security,updat,updated,264,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3327:246,usability,user,user,246,"[RF] Change number of contour points in RooMinimizer interface; The RooMinimizer interface does not allow for changing the number of points on a likelihood contour. By promoting this parameter to a default argument, this is now accessible to the user. Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3327
https://github.com/root-project/root/pull/3328:14,security,sign,signals,14,"TApplication, signals and exit code for v616 (ROOT-9995);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3328
https://github.com/root-project/root/pull/3329:14,security,sign,signals,14,"TApplication, signals and exit code for v614 (ROOT-9995);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3329
https://github.com/root-project/root/pull/3330:105,deployability,build,builds,105,"[Exp PyROOT] Re-enable tutorials, fix test; Part of the ongoing campaign to turn the experimental PyROOT builds green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3330
https://github.com/root-project/root/pull/3330:112,energy efficiency,green,green,112,"[Exp PyROOT] Re-enable tutorials, fix test; Part of the ongoing campaign to turn the experimental PyROOT builds green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3330
https://github.com/root-project/root/pull/3330:38,safety,test,test,38,"[Exp PyROOT] Re-enable tutorials, fix test; Part of the ongoing campaign to turn the experimental PyROOT builds green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3330
https://github.com/root-project/root/pull/3330:38,testability,test,test,38,"[Exp PyROOT] Re-enable tutorials, fix test; Part of the ongoing campaign to turn the experimental PyROOT builds green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3330
https://github.com/root-project/root/pull/3331:61,modifiability,exten,extend,61,[RF] Improve documentation of RooFit; Fix doxygen problems / extend docstrings in. - RooPolynomial. - HistFactory. - RooAbsReal. - RooRealSumPdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3331
https://github.com/root-project/root/pull/3331:13,usability,document,documentation,13,[RF] Improve documentation of RooFit; Fix doxygen problems / extend docstrings in. - RooPolynomial. - HistFactory. - RooAbsReal. - RooRealSumPdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3331
https://github.com/root-project/root/pull/3332:25,deployability,modul,modulename,25,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:95,deployability,modul,modulename,95,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:169,deployability,modul,modulename,169,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:25,modifiability,modul,modulename,25,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:95,modifiability,modul,modulename,95,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:169,modifiability,modul,modulename,169,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:25,safety,modul,modulename,25,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:95,safety,modul,modulename,95,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3332:169,safety,modul,modulename,169,"[cxxmodule] Infer proper modulename from libraryname; Before RegisterModule was assuming that ""modulename"" starts from ""lib"", which is not the case for CMSSW where the ""modulename"" is ""SimDataFormatsValidationFormats_xr"" for example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3332
https://github.com/root-project/root/pull/3333:94,availability,failur,failure,94,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3333:88,deployability,build,build,88,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3333:94,deployability,fail,failure,94,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3333:94,performance,failur,failure,94,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3333:94,reliability,fail,failure,94,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3333:80,safety,prevent,prevent,80,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3333:80,security,preven,prevent,80,[ROOT-9922] [Exp PyROOT] Python 3.7 fix; Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3333
https://github.com/root-project/root/pull/3334:206,availability,slo,slowdowns,206,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:95,deployability,contain,contain,95,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:298,deployability,manag,management,298,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:298,energy efficiency,manag,management,298,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:368,interoperability,semant,semantics,368,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:291,performance,memor,memory,291,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:206,reliability,slo,slowdowns,206,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:298,safety,manag,management,298,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3334:291,usability,memor,memory,291,"[RF] Speed up hist2workspace; hist2workspace reads histograms from multiple files, which often contain numerous folders with a lot of histograms. It therefore needlessly suffers from TList::RecursiveRemove slowdowns, although almost all. histograms and files are read only. Implementing the memory management for histograms without ROOT's TList, and implementing move semantics with better const correctness leads to a speed up of a factor 10 for a large ATLAS-style Higgs workspace with 28 channels and about 150 systematic uncertainties.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3334
https://github.com/root-project/root/pull/3336:233,modifiability,exten,extend,233,"[RF] Fix usage of unnamed temporaries in python tutorials; Python deletes temporary objects that are referenced by a C++ object. When the objects are named, the tutorials work. Further, add a more elaborate tutorial rf204a on how to extend PDFs when fits in multiple ranges are desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3336
https://github.com/root-project/root/pull/3337:16,deployability,instal,installation,16,[ROOT-9924] Fix installation of clad and its headers;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3337
https://github.com/root-project/root/pull/3339:67,deployability,depend,depends,67,"[RF] Reactivate copy assignment for HistFactory classes; Rootbench depends on copy assignment for the `Sample` class. After implementing move semantics to speed up hist2workspace, the copy assignment had been implicitly deleted. This was fixed, and a gtest has been added. Further, HistRef, a member of Sample, is now movable, and the histograms given back by Sample are now `const TH1*` instead of `TH1*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3339
https://github.com/root-project/root/pull/3339:67,integrability,depend,depends,67,"[RF] Reactivate copy assignment for HistFactory classes; Rootbench depends on copy assignment for the `Sample` class. After implementing move semantics to speed up hist2workspace, the copy assignment had been implicitly deleted. This was fixed, and a gtest has been added. Further, HistRef, a member of Sample, is now movable, and the histograms given back by Sample are now `const TH1*` instead of `TH1*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3339
https://github.com/root-project/root/pull/3339:142,interoperability,semant,semantics,142,"[RF] Reactivate copy assignment for HistFactory classes; Rootbench depends on copy assignment for the `Sample` class. After implementing move semantics to speed up hist2workspace, the copy assignment had been implicitly deleted. This was fixed, and a gtest has been added. Further, HistRef, a member of Sample, is now movable, and the histograms given back by Sample are now `const TH1*` instead of `TH1*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3339
https://github.com/root-project/root/pull/3339:67,modifiability,depend,depends,67,"[RF] Reactivate copy assignment for HistFactory classes; Rootbench depends on copy assignment for the `Sample` class. After implementing move semantics to speed up hist2workspace, the copy assignment had been implicitly deleted. This was fixed, and a gtest has been added. Further, HistRef, a member of Sample, is now movable, and the histograms given back by Sample are now `const TH1*` instead of `TH1*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3339
https://github.com/root-project/root/pull/3339:67,safety,depend,depends,67,"[RF] Reactivate copy assignment for HistFactory classes; Rootbench depends on copy assignment for the `Sample` class. After implementing move semantics to speed up hist2workspace, the copy assignment had been implicitly deleted. This was fixed, and a gtest has been added. Further, HistRef, a member of Sample, is now movable, and the histograms given back by Sample are now `const TH1*` instead of `TH1*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3339
https://github.com/root-project/root/pull/3339:67,testability,depend,depends,67,"[RF] Reactivate copy assignment for HistFactory classes; Rootbench depends on copy assignment for the `Sample` class. After implementing move semantics to speed up hist2workspace, the copy assignment had been implicitly deleted. This was fixed, and a gtest has been added. Further, HistRef, a member of Sample, is now movable, and the histograms given back by Sample are now `const TH1*` instead of `TH1*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3339
https://github.com/root-project/root/pull/3340:98,availability,error,error,98,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:153,deployability,Patch,Patch,153,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:194,deployability,version,versions,194,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:194,integrability,version,versions,194,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:194,modifiability,version,versions,194,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:98,performance,error,error,98,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:98,safety,error,error,98,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:153,safety,Patch,Patch,153,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:153,security,Patch,Patch,153,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3340:98,usability,error,error,98,"geom: create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493. Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3340
https://github.com/root-project/root/pull/3341:152,availability,robust,robust,152,Improve histogram axis comparison; Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test. This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3341
https://github.com/root-project/root/pull/3341:152,reliability,robust,robust,152,Improve histogram axis comparison; Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test. This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3341
https://github.com/root-project/root/pull/3341:152,safety,robust,robust,152,Improve histogram axis comparison; Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test. This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3341
https://github.com/root-project/root/pull/3341:170,safety,test,test,170,Improve histogram axis comparison; Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test. This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3341
https://github.com/root-project/root/pull/3341:170,testability,test,test,170,Improve histogram axis comparison; Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test. This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3341
https://github.com/root-project/root/pull/3342:146,availability,error,errors,146,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:120,deployability,modul,modules,120,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:187,deployability,modul,module-stl-imported-by-ast-file-found-in-a-different-module-map-file,187,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:28,interoperability,distribut,distribution,28,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:96,interoperability,distribut,distribution,96,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:120,modifiability,modul,modules,120,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:187,modifiability,modul,module-stl-imported-by-ast-file-found-in-a-different-module-map-file,187,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:146,performance,error,errors,146,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:120,safety,modul,modules,120,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:146,safety,error,errors,146,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:187,safety,modul,module-stl-imported-by-ast-file-found-in-a-different-module-map-file,187,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3342:146,usability,error,errors,146,"[cxxmodule] Backport binary distribution fixes to 6.16; These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3342
https://github.com/root-project/root/pull/3345:488,availability,slo,slower,488,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:284,deployability,contain,container,284,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:317,deployability,updat,updated,317,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:216,integrability,interfac,interface,216,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:628,integrability,interfac,interfaces,628,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:216,interoperability,interfac,interface,216,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:628,interoperability,interfac,interfaces,628,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:216,modifiability,interfac,interface,216,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:628,modifiability,interfac,interfaces,628,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:488,reliability,slo,slower,488,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:317,safety,updat,updated,317,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:561,safety,Review,Reviewers,561,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:574,safety,Review,Reviews,574,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:317,security,updat,updated,317,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:561,testability,Review,Reviewers,561,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:574,testability,Review,Reviews,574,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3345:438,usability,support,supported,438,"[RF][ROOT-9816] Improve RooAbsCollection; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the `R__SUGGEST_ALTERNATIVE` macro. **For Reviewers**. Reviews are most appreciated in `RooAbsCollection.h` (interfaces) and maybe `RooAbsCollection.cxx`. This is the central change. All other changes are mostly places where old iterators have been replaced by new iterators to make RooFit faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3345
https://github.com/root-project/root/pull/3346:103,availability,error,error,103,geom: 6.16 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3346
https://github.com/root-project/root/pull/3346:103,performance,error,error,103,geom: 6.16 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3346
https://github.com/root-project/root/pull/3346:103,safety,error,error,103,geom: 6.16 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3346
https://github.com/root-project/root/pull/3346:103,usability,error,error,103,geom: 6.16 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3346
https://github.com/root-project/root/pull/3347:103,availability,error,error,103,geom: 6.14 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3347
https://github.com/root-project/root/pull/3347:103,performance,error,error,103,geom: 6.14 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3347
https://github.com/root-project/root/pull/3347:103,safety,error,error,103,geom: 6.14 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3347
https://github.com/root-project/root/pull/3347:103,usability,error,error,103,geom: 6.14 create TGeoCone with name in TGeoBuilder; Looks like only TGeoCone was ignoring name. Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3347
https://github.com/root-project/root/pull/3348:25,interoperability,specif,specify,25,"Silent gcc8 warning when specify callback function for gluTessCallback; Unfortunately, gluTessCallback uses same function pointer type for. absolutely different functions kinds. Only inside gluTessCallback proper. casting done. Therefore the only solution - suppress warings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3348
https://github.com/root-project/root/pull/3349:149,deployability,build,build,149,"webgui: check ROOTWebDisplay library when --web option specified, ROOT-9927; When starting ROOT with --web option, check if necessary libraries are. build. Only in that case change Gui.Factory and call. gROOT->SetWebDisplay. . Fixes https://sft.its.cern.ch/jira/browse/ROOT-9927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3349
https://github.com/root-project/root/pull/3349:55,interoperability,specif,specified,55,"webgui: check ROOTWebDisplay library when --web option specified, ROOT-9927; When starting ROOT with --web option, check if necessary libraries are. build. Only in that case change Gui.Factory and call. gROOT->SetWebDisplay. . Fixes https://sft.its.cern.ch/jira/browse/ROOT-9927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3349
https://github.com/root-project/root/pull/3350:75,deployability,contain,contain,75,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:137,deployability,updat,updated,137,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:85,energy efficiency,Model,ModelConfig,85,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:113,energy efficiency,Model,ModelConfig,113,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:137,safety,updat,updated,137,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:200,safety,test,test,200,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:85,security,Model,ModelConfig,85,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:113,security,Model,ModelConfig,113,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:137,security,updat,updated,137,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:195,testability,unit,unit,195,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3350:200,testability,test,test,200,"[RF][ROOT-9777] Replay ""Fix cloning workspaces""; - When RooWorkspaces that contain a ModelConfig are cloned, the ModelConfig did not get updated. It would still point to the old workspace. - Add unit test. This reverts commit fdab28c0ca4782733527e6b74a4f795c252a877e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3350
https://github.com/root-project/root/pull/3351:34,deployability,modul,module,34,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:117,deployability,modul,module,117,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:399,deployability,log,logic,399,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:183,energy efficiency,current,current,183,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:438,energy efficiency,current,current,438,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:13,integrability,Configur,Configure,13,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:248,interoperability,bind,bindings,248,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:308,interoperability,skeleton,skeleton,308,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:13,modifiability,Configur,Configure,13,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:34,modifiability,modul,module,34,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:117,modifiability,modul,module,117,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:248,modifiability,bind,bindings,248,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:34,safety,modul,module,34,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:117,safety,modul,module,117,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:399,safety,log,logic,399,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:13,security,Configur,Configure,13,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:399,security,log,logic,399,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:301,testability,simpl,simple,301,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:399,testability,log,logic,399,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:129,usability,custom,custom,129,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:136,usability,behavi,behaviour,136,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3351:301,usability,simpl,simple,301,"[Exp PyROOT] Configure preliminar module facade for ROOT; This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT. https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3351
https://github.com/root-project/root/pull/3352:9,deployability,patch,patches,9,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:354,energy efficiency,current,current,354,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:508,energy efficiency,current,current,508,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:68,interoperability,incompatib,incompatibility,68,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:138,performance,time,time,138,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:366,reliability,doe,does,366,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:620,reliability,doe,does,620,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:9,safety,patch,patches,9,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3352:9,security,patch,patches,9,v5-34-00-patches mysql v8 fix; Fixes ROOT v5-34 `TMySQLStatement.h` incompatibility with mysql v8 as was done with the master branch some time ago:. [https://sft.its.cern.ch/jira/browse/ROOT-9624](https://sft.its.cern.ch/jira/browse/ROOT-9624). [https://github.com/root-project/root/pull/2726](https://github.com/root-project/root/pull/2726). N.B. - the current fix does not change the `my_bool` var on line 162 of `TMySQLServer.cxx` (as in the above-linked PR) because this seems to break other things. The current fix also adds a preprocessor directive to TMySQLServer.cxx on line 55 to include `<my_global.h>` (which does not exist in mysql v8) if mysql < v8.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3352
https://github.com/root-project/root/pull/3353:215,safety,test,test,215,"[DF][ROOT-9929] Extract branches names which are nested from jitted; strings. properly, for example treating cases such as 'branch0' and 'branch01'. The code of the helper FindUsedColumnNames has been simplified. A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3353
https://github.com/root-project/root/pull/3353:201,testability,simpl,simplified,201,"[DF][ROOT-9929] Extract branches names which are nested from jitted; strings. properly, for example treating cases such as 'branch0' and 'branch01'. The code of the helper FindUsedColumnNames has been simplified. A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3353
https://github.com/root-project/root/pull/3353:215,testability,test,test,215,"[DF][ROOT-9929] Extract branches names which are nested from jitted; strings. properly, for example treating cases such as 'branch0' and 'branch01'. The code of the helper FindUsedColumnNames has been simplified. A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3353
https://github.com/root-project/root/pull/3353:165,usability,help,helper,165,"[DF][ROOT-9929] Extract branches names which are nested from jitted; strings. properly, for example treating cases such as 'branch0' and 'branch01'. The code of the helper FindUsedColumnNames has been simplified. A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3353
https://github.com/root-project/root/pull/3353:201,usability,simpl,simplified,201,"[DF][ROOT-9929] Extract branches names which are nested from jitted; strings. properly, for example treating cases such as 'branch0' and 'branch01'. The code of the helper FindUsedColumnNames has been simplified. A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3353
https://github.com/root-project/root/pull/3354:123,deployability,automat,automatic,123,Windows: Fix formatting of Interpreter::toString(); Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3354
https://github.com/root-project/root/pull/3354:13,interoperability,format,formatting,13,Windows: Fix formatting of Interpreter::toString(); Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3354
https://github.com/root-project/root/pull/3354:123,testability,automat,automatic,123,Windows: Fix formatting of Interpreter::toString(); Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3354
https://github.com/root-project/root/pull/3356:199,deployability,automat,automatic,199,Windows: Fix pyroot_experimental; - Fix dynamic libraries extensions (.so/.dll/.pyd). - Fix path for the tests and tutorials. - Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3356
https://github.com/root-project/root/pull/3356:58,modifiability,extens,extensions,58,Windows: Fix pyroot_experimental; - Fix dynamic libraries extensions (.so/.dll/.pyd). - Fix path for the tests and tutorials. - Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3356
https://github.com/root-project/root/pull/3356:105,safety,test,tests,105,Windows: Fix pyroot_experimental; - Fix dynamic libraries extensions (.so/.dll/.pyd). - Fix path for the tests and tutorials. - Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3356
https://github.com/root-project/root/pull/3356:105,testability,test,tests,105,Windows: Fix pyroot_experimental; - Fix dynamic libraries extensions (.so/.dll/.pyd). - Fix path for the tests and tutorials. - Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3356
https://github.com/root-project/root/pull/3356:199,testability,automat,automatic,199,Windows: Fix pyroot_experimental; - Fix dynamic libraries extensions (.so/.dll/.pyd). - Fix path for the tests and tutorials. - Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3356
https://github.com/root-project/root/pull/3357:191,deployability,build,buildid,191,"Get rid of CMake warnings on 6.14; We've had these commits on 6.16 and master for a while, should be ok for 6.14 as well. Warnings are shown in CDash: https://cdash.cern.ch/viewConfigure.php?buildid=620083.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3357
https://github.com/root-project/root/pull/3358:61,energy efficiency,load,load,61,"webgui: allow --web also when ROOTWebDisplay library already load, ROOT-9927; https://sft.its.cern.ch/jira/browse/ROOT-9927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3358
https://github.com/root-project/root/pull/3358:61,performance,load,load,61,"webgui: allow --web also when ROOTWebDisplay library already load, ROOT-9927; https://sft.its.cern.ch/jira/browse/ROOT-9927",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3358
https://github.com/root-project/root/pull/3360:164,energy efficiency,core,core,164,"Fix issue with case insensitive file systems; This is needed to fix MacPorts, https://trac.macports.org/ticket/57007, HomeBrew https://github.com/Homebrew/homebrew-core/pull/36585, and any similar system with case insensitivity. `RConfig.h` includes itself instead of `ROOT/RConfig.h`. This prioritizes relative imports for RConfig on most compilers. *Any similar changes should use double-quote imports too* to avoid this ambiguity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3360
https://github.com/root-project/root/pull/3360:412,safety,avoid,avoid,412,"Fix issue with case insensitive file systems; This is needed to fix MacPorts, https://trac.macports.org/ticket/57007, HomeBrew https://github.com/Homebrew/homebrew-core/pull/36585, and any similar system with case insensitivity. `RConfig.h` includes itself instead of `ROOT/RConfig.h`. This prioritizes relative imports for RConfig on most compilers. *Any similar changes should use double-quote imports too* to avoid this ambiguity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3360
https://github.com/root-project/root/pull/3361:787,availability,consist,consistency,787,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:312,deployability,instal,installed,312,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:509,integrability,messag,message,509,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:627,integrability,messag,message,627,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:470,interoperability,compatib,compatibility,470,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:509,interoperability,messag,message,509,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:627,interoperability,messag,message,627,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:239,reliability,doe,doesn,239,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:646,reliability,doe,does,646,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:610,safety,avoid,avoid,610,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:276,usability,user,user,276,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3361:787,usability,consist,consistency,787,"Rename based fix for RConfig on case-insensitive systems; This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3361
https://github.com/root-project/root/pull/3362:112,deployability,automat,automatic,112,Windows: Fix pointer formatting in Eve7; Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3362
https://github.com/root-project/root/pull/3362:21,interoperability,format,formatting,21,Windows: Fix pointer formatting in Eve7; Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3362
https://github.com/root-project/root/pull/3362:112,testability,automat,automatic,112,Windows: Fix pointer formatting in Eve7; Make sure hexadecimal pointer values have the correct '0x' prefix (not automatic on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3362
https://github.com/root-project/root/pull/3363:31,availability,avail,available,31,[DF][ROOT-9931] Properly check available columns; when booking Histo1D and Graph. Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3363
https://github.com/root-project/root/pull/3363:31,reliability,availab,available,31,[DF][ROOT-9931] Properly check available columns; when booking Histo1D and Graph. Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3363
https://github.com/root-project/root/pull/3363:31,safety,avail,available,31,[DF][ROOT-9931] Properly check available columns; when booking Histo1D and Graph. Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3363
https://github.com/root-project/root/pull/3363:88,safety,test,test,88,[DF][ROOT-9931] Properly check available columns; when booking Histo1D and Graph. Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3363
https://github.com/root-project/root/pull/3363:31,security,availab,available,31,[DF][ROOT-9931] Properly check available columns; when booking Histo1D and Graph. Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3363
https://github.com/root-project/root/pull/3363:88,testability,test,test,88,[DF][ROOT-9931] Properly check available columns; when booking Histo1D and Graph. Add a test too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3363
https://github.com/root-project/root/pull/3364:106,interoperability,conflict,conflicts,106,[DF][ROOT-9933] Add GetNSlots method to RInterface; and a test. This PR includes also #3363 just to avoid conflicts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3364
https://github.com/root-project/root/pull/3364:58,safety,test,test,58,[DF][ROOT-9933] Add GetNSlots method to RInterface; and a test. This PR includes also #3363 just to avoid conflicts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3364
https://github.com/root-project/root/pull/3364:100,safety,avoid,avoid,100,[DF][ROOT-9933] Add GetNSlots method to RInterface; and a test. This PR includes also #3363 just to avoid conflicts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3364
https://github.com/root-project/root/pull/3364:58,testability,test,test,58,[DF][ROOT-9933] Add GetNSlots method to RInterface; and a test. This PR includes also #3363 just to avoid conflicts,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3364
https://github.com/root-project/root/pull/3365:19,usability,support,support,19,[IO][ROOT-9926]Add support for data members which are unique_ptrs<cnst T>;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3365
https://github.com/root-project/root/pull/3368:62,performance,memor,memory,62,"[PyROOT exp] Add AsRVec method; This feature is able to adopt memory from PyObjects defining an. `__array_interface__` as RVecs. The workflow is as follows:. ```python. import ROOT. import numpy. np = numpy.array([1, 2, 3]). rvec = ROOT.AsRVec(np). print(np) # [1 2 3]. print(rvec) # { 1, 2, 3 }. rvec[0] = 42. print(np) # [42 2 3]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3368
https://github.com/root-project/root/pull/3368:62,usability,memor,memory,62,"[PyROOT exp] Add AsRVec method; This feature is able to adopt memory from PyObjects defining an. `__array_interface__` as RVecs. The workflow is as follows:. ```python. import ROOT. import numpy. np = numpy.array([1, 2, 3]). rvec = ROOT.AsRVec(np). print(np) # [1 2 3]. print(rvec) # { 1, 2, 3 }. rvec[0] = 42. print(np) # [42 2 3]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3368
https://github.com/root-project/root/pull/3368:133,usability,workflow,workflow,133,"[PyROOT exp] Add AsRVec method; This feature is able to adopt memory from PyObjects defining an. `__array_interface__` as RVecs. The workflow is as follows:. ```python. import ROOT. import numpy. np = numpy.array([1, 2, 3]). rvec = ROOT.AsRVec(np). print(np) # [1 2 3]. print(rvec) # { 1, 2, 3 }. rvec[0] = 42. print(np) # [42 2 3]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3368
https://github.com/root-project/root/pull/3370:202,availability,avail,available,202,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:48,deployability,modul,module,48,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:120,deployability,modul,module,120,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:172,deployability,modul,module,172,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:356,deployability,modul,module,356,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:219,energy efficiency,current,current,219,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:48,modifiability,modul,module,48,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:120,modifiability,modul,module,120,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:162,modifiability,extens,extension,162,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:172,modifiability,modul,module,172,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:356,modifiability,modul,module,356,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:202,reliability,availab,available,202,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:48,safety,modul,module,48,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:85,safety,test,tests,85,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:120,safety,modul,module,120,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:172,safety,modul,module,172,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:202,safety,avail,available,202,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:243,safety,test,tests,243,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:356,safety,modul,module,356,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:13,security,Expos,Expose,13,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:100,security,expos,exposes,100,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:202,security,availab,available,202,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:336,security,expos,expose,336,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:85,testability,test,tests,85,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3370:243,testability,test,tests,243,"[Exp PyROOT] Expose cppyy functionality in ROOT module; With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3370
https://github.com/root-project/root/pull/3371:13,deployability,depend,dependency,13,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:85,deployability,depend,dependencies,85,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:249,deployability,depend,dependencies,249,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:366,deployability,depend,depending,366,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:68,energy efficiency,current,currently,68,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:242,energy efficiency,reduc,reduce,242,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:13,integrability,depend,dependency,13,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:85,integrability,depend,dependencies,85,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:249,integrability,depend,dependencies,249,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:366,integrability,depend,depending,366,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:13,modifiability,depend,dependency,13,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:85,modifiability,depend,dependencies,85,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:249,modifiability,depend,dependencies,249,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:366,modifiability,depend,depending,366,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:134,reliability,doe,does,134,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:13,safety,depend,dependency,13,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:85,safety,depend,dependencies,85,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:249,safety,depend,dependencies,249,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:366,safety,depend,depending,366,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:13,testability,depend,dependency,13,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:85,testability,depend,dependencies,85,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:173,testability,simpl,simplify,173,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:249,testability,depend,dependencies,249,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:366,testability,depend,depending,366,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3371:173,usability,simpl,simplify,173,"GenerateDict dependency fixes; split G__Core; Overall goals:. - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;. - simplify G__Core CMake setup;. - remove unnecessary dictionaries;. - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3371
https://github.com/root-project/root/pull/3372:18,safety,test,tests,18,[Exp PyROOT] Make tests runnable as Python scripts;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3372
https://github.com/root-project/root/pull/3372:18,testability,test,tests,18,[Exp PyROOT] Make tests runnable as Python scripts;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3372
https://github.com/root-project/root/pull/3373:23,availability,state,state,23,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3373:47,availability,error,error,47,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3373:23,integrability,state,state,23,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3373:47,performance,error,error,47,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3373:47,safety,error,error,47,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3373:11,usability,help,helpful,11,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3373:47,usability,error,error,47,[davix] Be helpful and state file name in open error.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3373
https://github.com/root-project/root/pull/3374:638,availability,error,error,638,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:1149,availability,error,error,1149,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:36,deployability,modul,modules,36,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:99,deployability,modul,modules,99,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:107,deployability,fail,failing,107,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:203,deployability,BUILD,BUILDTYPE,203,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:213,deployability,Releas,Release,213,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:386,deployability,BUILD,BUILDTYPE,386,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:396,deployability,Releas,Release,396,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:447,deployability,build,build,447,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:534,deployability,BUILD,BUILDTYPE,534,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:544,deployability,Releas,Release,544,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:595,deployability,build,build,595,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:708,deployability,modul,module,708,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:836,deployability,modul,module,836,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:921,deployability,BUILD,BUILDTYPE,921,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:931,deployability,Releas,Release,931,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:269,energy efficiency,core,core,269,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:987,energy efficiency,core,core,987,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:36,modifiability,modul,modules,36,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:99,modifiability,modul,modules,99,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:708,modifiability,modul,module,708,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:836,modifiability,modul,module,836,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:248,performance,perform,performance-,248,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:431,performance,perform,performance-,431,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:579,performance,perform,performance-,579,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:638,performance,error,error,638,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:966,performance,perform,performance-,966,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:1149,performance,error,error,1149,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:107,reliability,fail,failing,107,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:36,safety,modul,modules,36,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:99,safety,modul,modules,99,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:638,safety,error,error,638,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:708,safety,modul,module,708,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:836,safety,modul,module,836,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:1149,safety,error,error,1149,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:248,usability,perform,performance-,248,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:431,usability,perform,performance-,431,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:579,usability,perform,performance-,579,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:638,usability,error,error,638,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:966,usability,perform,performance-,966,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3374:1149,usability,error,error,1149,"Importing 'Imt.ROOT/TTaskGroup.hxx' modules required by TThreadExecutor; It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:. In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:. /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required. pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );. ^. In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:. /usr/include/pthread.h:51:3: note: previous declaration is here. PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,. ^. 1 error generated.`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3374
https://github.com/root-project/root/pull/3375:1,energy efficiency,Core,Core,1,"[Core] Extend usage of TClass::GetClass<T> ; - Re-implement {ROOT,TClass}::GetClass methods in terms of TClass::GetClass<T> where possible. - Use TClass::GetClass<T> where possible and in tutorials. Proof is left intentionally aside because not further developed. Rootcling is left aside since it runs exclusively in sequential mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3375
https://github.com/root-project/root/pull/3375:7,modifiability,Exten,Extend,7,"[Core] Extend usage of TClass::GetClass<T> ; - Re-implement {ROOT,TClass}::GetClass methods in terms of TClass::GetClass<T> where possible. - Use TClass::GetClass<T> where possible and in tutorials. Proof is left intentionally aside because not further developed. Rootcling is left aside since it runs exclusively in sequential mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3375
https://github.com/root-project/root/pull/3376:179,integrability,buffer,buffer,179,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3376:246,integrability,buffer,buffer,246,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3376:319,integrability,buffer,buffer,319,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3376:403,integrability,buffer,buffer,403,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3376:116,modifiability,layer,layer,116,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3376:284,safety,input,inputValues,284,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3376:284,usability,input,inputValues,284,"[TMVA ANN codegen] adding linebreak in codegen; otherwise the next for loop trails in this line like that:. ```. // layer 0 to 1. for (int o=0; o<9; o++) {. std::array<double, 5> buffer; // no need to initialise. for (int i = 0; i<5 - 1; i++) {. buffer[i] = fWeightMatrix0to1[o][i] * inputValues[i];. } // loop over i. buffer.back() = fWeightMatrix0to1[o][4]; for (int i=0; i<5; i++) {. fWeights1[o] += buffer[i];. } // loop over i. } // loop over o. ```. (from running TMVAClassification.C in the tutorials dir.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3376
https://github.com/root-project/root/pull/3379:74,availability,failur,failures,74,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:150,availability,ERROR,ERROR,150,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:217,availability,error,error,217,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:74,deployability,fail,failures,74,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:98,energy efficiency,model,models,98,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:157,integrability,messag,messages,157,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:223,integrability,messag,messages,223,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:157,interoperability,messag,messages,157,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:223,interoperability,messag,messages,223,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:74,performance,failur,failures,74,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:150,performance,ERROR,ERROR,150,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:217,performance,error,error,217,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:74,reliability,fail,failures,74,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:31,safety,test,test,31,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:46,safety,test,test,46,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:68,safety,test,tests,68,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:150,safety,ERROR,ERROR,150,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:207,safety,test,test,207,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:217,safety,error,error,217,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:98,security,model,models,98,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:26,testability,unit,unit,26,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:31,testability,test,test,31,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:41,testability,unit,unit,41,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:46,testability,test,test,46,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:68,testability,test,tests,68,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:207,testability,test,test,207,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:150,usability,ERROR,ERROR,150,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3379:217,usability,error,error,217,"[RF] Silence RooWorkspace unit test; The unit test for RooWorkspace tests failures when importing models into the workspace. Since RooFit will print `ERROR` messages, it looks like there is a problem in the test. The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3379
https://github.com/root-project/root/pull/3380:532,availability,slo,slower,532,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:722,availability,failur,failures,722,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:328,deployability,contain,container,328,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:361,deployability,updat,updated,361,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:722,deployability,fail,failures,722,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:24,energy efficiency,core,core,24,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:260,integrability,interfac,interface,260,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:260,interoperability,interfac,interface,260,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:260,modifiability,interfac,interface,260,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:722,performance,failur,failures,722,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:532,reliability,slo,slower,532,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:722,reliability,fail,failures,722,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:361,safety,updat,updated,361,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:705,safety,test,test,705,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:717,safety,test,test,717,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:361,security,updat,updated,361,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:608,security,ident,identical,608,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:705,testability,test,test,705,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:717,testability,test,test,717,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3380:482,usability,support,supported,482,"[RF][ROOT-9816] Replace core collections of RooFit with std::vector; Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %. The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3380
https://github.com/root-project/root/pull/3381:162,deployability,patch,patch,162,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:257,deployability,Modul,Modules,257,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:143,energy efficiency,current,currently,143,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:96,interoperability,standard,standard,96,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:257,modifiability,Modul,Modules,257,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:162,safety,patch,patch,162,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:257,safety,Modul,Modules,257,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3381:162,security,patch,patch,162,Adding directories needed to use LibXML; Both of these directories are needed if you have a non-standard location for LibXML2's needs. This is currently a manual patch in the root-feedstock for conda-forge. See <https://github.com/Kitware/CMake/blob/master/Modules/FindLibXml2.cmake>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3381
https://github.com/root-project/root/pull/3382:42,deployability,instal,installation,42,[Backport][ROOT-9924] Fixing compile time installation of clad; Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3382
https://github.com/root-project/root/pull/3382:64,deployability,Patch,Patch,64,[Backport][ROOT-9924] Fixing compile time installation of clad; Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3382
https://github.com/root-project/root/pull/3382:90,interoperability,distribut,distribution,90,[Backport][ROOT-9924] Fixing compile time installation of clad; Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3382
https://github.com/root-project/root/pull/3382:37,performance,time,time,37,[Backport][ROOT-9924] Fixing compile time installation of clad; Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3382
https://github.com/root-project/root/pull/3382:64,safety,Patch,Patch,64,[Backport][ROOT-9924] Fixing compile time installation of clad; Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3382
https://github.com/root-project/root/pull/3382:64,security,Patch,Patch,64,[Backport][ROOT-9924] Fixing compile time installation of clad; Patch fixes a ROOT binary distribution of clad for 6.16.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3382
https://github.com/root-project/root/pull/3383:1,energy efficiency,Core,Core,1,"[Core] 1MB less RSS at root startup with simple optimisations; Do not add information for autoparsing. The interpreter can just draw the info it needs from the PCH without parsing the full payload (which happens still trhough the PCH, but it's more)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3383
https://github.com/root-project/root/pull/3383:48,energy efficiency,optim,optimisations,48,"[Core] 1MB less RSS at root startup with simple optimisations; Do not add information for autoparsing. The interpreter can just draw the info it needs from the PCH without parsing the full payload (which happens still trhough the PCH, but it's more)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3383
https://github.com/root-project/root/pull/3383:128,energy efficiency,draw,draw,128,"[Core] 1MB less RSS at root startup with simple optimisations; Do not add information for autoparsing. The interpreter can just draw the info it needs from the PCH without parsing the full payload (which happens still trhough the PCH, but it's more)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3383
https://github.com/root-project/root/pull/3383:41,testability,simpl,simple,41,"[Core] 1MB less RSS at root startup with simple optimisations; Do not add information for autoparsing. The interpreter can just draw the info it needs from the PCH without parsing the full payload (which happens still trhough the PCH, but it's more)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3383
https://github.com/root-project/root/pull/3383:41,usability,simpl,simple,41,"[Core] 1MB less RSS at root startup with simple optimisations; Do not add information for autoparsing. The interpreter can just draw the info it needs from the PCH without parsing the full payload (which happens still trhough the PCH, but it's more)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3383
https://github.com/root-project/root/pull/3384:114,reliability,doe,does-not-work-when-importing-datasets,114,[RF] Silence importing datasets to RooWorkspace.; https://root-forum.cern.ch/t/rooworkspace-import-roofit-silence-does-not-work-when-importing-datasets/32591,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3384
https://github.com/root-project/root/pull/3385:407,availability,fault,faults,407,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:873,availability,fault,faults,873,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1169,availability,fault,faults,1169,"e/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1791,availability,down,down,1791,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:279,energy efficiency,clock,clock,279,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:300,energy efficiency,CPU,CPUs,300,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:361,energy efficiency,cpu,cpu-migrations,361,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:407,energy efficiency,fault,faults,407,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:745,energy efficiency,clock,clock,745,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:766,energy efficiency,CPU,CPUs,766,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:827,energy efficiency,cpu,cpu-migrations,827,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:873,energy efficiency,fault,faults,873,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1130,energy efficiency,reduc,reduced,1130,"33](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Writ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1148,energy efficiency,cpu,cpu-migrations,1148,"ern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1169,energy efficiency,fault,faults,1169,"e/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1774,energy efficiency,alloc,allocated,1774,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:2161,energy efficiency,reduc,reduce,2161,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:18,performance,improve perform,improve performance,18,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:66,performance,perform,performance,66,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:216,performance,Perform,Performance,216,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:300,performance,CPU,CPUs,300,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:361,performance,cpu,cpu-migrations,361,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:407,performance,fault,faults,407,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:635,performance,time,time,635,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:682,performance,Perform,Performance,682,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:766,performance,CPU,CPUs,766,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:827,performance,cpu,cpu-migrations,827,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:873,performance,fault,faults,873,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1101,performance,time,time,1101,"ducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1148,performance,cpu,cpu-migrations,1148,"ern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1169,performance,fault,faults,1169,"e/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1784,performance,memor,memory,1784,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1823,performance,memor,memory,1823,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1925,performance,memor,memory,1925,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:2168,performance,memor,memory,2168,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:407,reliability,fault,faults,407,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:873,reliability,fault,faults,873,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1169,reliability,fault,faults,1169,"e/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:407,safety,fault,faults,407,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:873,safety,fault,faults,873,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1169,safety,fault,faults,1169,"e/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:324,testability,context,context-switches,324,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:790,testability,context,context-switches,790,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1181,testability,context,context,1181,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:26,usability,perform,performance,26,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:66,usability,perform,performance,66,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:216,usability,Perform,Performance,216,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:682,usability,Perform,Performance,682,"Fix ROOT-9779 and improve performance for ROOT-9133; Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1270,usability,user,user-images,1270,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1385,usability,user,user-images,1385,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1520,usability,user,user-images,1520,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1635,usability,user,user-images,1635,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1784,usability,memor,memory,1784,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1823,usability,memor,memory,1823,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:1925,usability,memor,memory,1925,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3385:2168,usability,memor,memory,2168,"3):. **perf stat (before)**. ```. Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized . 481,078 context-switches # 0.004 M/sec . 710 cpu-migrations # 0.005 K/sec . 3,512,992 page-faults # 0.026 M/sec . 456,851,617,713 cycles # 3.370 GHz . 310,271,051,553 instructions # 0.68 insn per cycle . 65,664,345,345 branches # 484.369 M/sec . 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed. ```. **perf stat (after)**. ```. Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized . 343,733 context-switches # 0.003 M/sec . 327 cpu-migrations # 0.003 K/sec . 1,567,401 page-faults # 0.014 M/sec . 391,763,587,760 cycles # 3.382 GHz . 273,699,878,762 instructions # 0.70 insn per cycle . 57,799,809,349 branches # 498.961 M/sec . 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed. ```. *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**. ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png). ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png). *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3385
https://github.com/root-project/root/pull/3386:92,availability,consist,consistent,92,Remove special handling of gInterpreter in pyroot_experimental; Now all globals in ROOT are consistent.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3386
https://github.com/root-project/root/pull/3386:92,usability,consist,consistent,92,Remove special handling of gInterpreter in pyroot_experimental; Now all globals in ROOT are consistent.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3386
https://github.com/root-project/root/pull/3387:240,availability,sli,slices,240,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:116,integrability,sub,subclasses,116,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:131,integrability,Inject,Injection,131,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:250,integrability,Inject,Injection,250,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:240,reliability,sli,slices,240,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:379,safety,test,tests,379,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:131,security,Inject,Injection,131,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:149,security,access,access,149,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:250,security,Inject,Injection,250,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:374,testability,unit,unit,374,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3387:379,testability,test,tests,379,"[Exp PyROOT] Add TSeqCollection pythonizations; This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:. - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices. - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3387
https://github.com/root-project/root/pull/3389:263,availability,error,error,263,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:305,availability,error,error,305,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:15,deployability,build,build,15,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:110,deployability,contain,contain,110,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:184,deployability,fail,fail,184,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:249,deployability,fail,fail,249,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:288,deployability,patch,patch,288,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:375,deployability,build,build,375,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:401,deployability,fail,failed,401,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:390,integrability,sub,subcommand,390,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:263,performance,error,error,263,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:305,performance,error,error,305,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:184,reliability,fail,fail,184,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:249,reliability,fail,fail,249,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:354,reliability,diagno,diagnostics,354,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:401,reliability,fail,failed,401,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:0,safety,test,test-periodic,0,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:179,safety,test,test,179,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:244,safety,test,test,244,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:263,safety,error,error,263,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:288,safety,patch,patch,288,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:305,safety,error,error,305,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:288,security,patch,patch,288,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:0,testability,test,test-periodic,0,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:179,testability,test,test,179,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:244,testability,test,test,244,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:354,testability,diagno,diagnostics,354,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:263,usability,error,error,263,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:305,usability,error,error,305,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:325,usability,command,command,325,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3389:381,usability,stop,stopped,381,"test-periodic: build with same C++ compiler as ROOT; If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch. ```. c++: error: unrecognized command line option ‘-fcolor-diagnostics’. ninja: build stopped: subcommand failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3389
https://github.com/root-project/root/pull/3391:24,deployability,modul,modulemap,24,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:111,deployability,modul,module,111,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:168,deployability,modul,module,168,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:187,deployability,modul,module,187,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:239,deployability,modul,module,239,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:270,integrability,wrap,wrapping,270,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:24,modifiability,modul,modulemap,24,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:111,modifiability,modul,module,111,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:168,modifiability,modul,module,168,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:187,modifiability,modul,module,187,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:239,modifiability,modul,module,239,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:24,safety,modul,modulemap,24,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:51,safety,review,reviews,51,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:111,safety,modul,module,111,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:168,safety,modul,module,168,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:187,safety,modul,module,187,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:239,safety,modul,module,239,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3391:51,testability,review,reviews,51,"Remove cstdlib from stl modulemap; As explained in reviews.llvm.org/D43871, having cstdlib as part. of the stl module causes cyclic references between Clang's builtin. module and our stl module. The best fix is to not have cstdlib. in our module (which is anyway just a wrapping header around. stdlib.h).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3391
https://github.com/root-project/root/pull/3392:128,availability,consist,consistent,128,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:13,deployability,modul,module,13,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:58,deployability,modul,modulemap,58,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:95,deployability,modul,module,95,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:13,modifiability,modul,module,13,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:58,modifiability,modul,modulemap,58,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:95,modifiability,modul,module,95,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:13,safety,modul,module,13,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:58,safety,modul,modulemap,58,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:95,safety,modul,module,95,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3392:128,usability,consist,consistent,128,"Rename ""stl"" module to ""std""; libc++ comes with a builtin modulemap and is using ""std"" as the. module name for the STL. To stay consistent we should use the same. name (and ""std"" is anyway a better name).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3392
https://github.com/root-project/root/pull/3393:1,energy efficiency,core,core,1,[core] Check TString length parameters (ROOT-5012).;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3393
https://github.com/root-project/root/pull/3393:28,modifiability,paramet,parameters,28,[core] Check TString length parameters (ROOT-5012).;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3393
https://github.com/root-project/root/pull/3394:27,energy efficiency,draw,draw,27,"ROOT-8446 - introduce min0 draw option for TH1/TH2 histograms; Equivalent to the gStyle->SetHistMinimumZero(), but can be specified individually. Resolves https://sft.its.cern.ch/jira/browse/ROOT-8446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3394
https://github.com/root-project/root/pull/3394:122,interoperability,specif,specified,122,"ROOT-8446 - introduce min0 draw option for TH1/TH2 histograms; Equivalent to the gStyle->SetHistMinimumZero(), but can be specified individually. Resolves https://sft.its.cern.ch/jira/browse/ROOT-8446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3394
https://github.com/root-project/root/pull/3396:165,deployability,Depend,Depending,165,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:462,deployability,build,building-manually,462,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:583,deployability,patch,patch,583,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:575,energy efficiency,current,current,575,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:165,integrability,Depend,Depending,165,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:165,modifiability,Depend,Depending,165,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:358,modifiability,pac,package,358,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:5,safety,Avoid,Avoid,5,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:165,safety,Depend,Depending,165,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:583,safety,patch,patch,583,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:583,security,patch,patch,583,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3396:165,testability,Depend,Depending,165,"WIP: Avoid link on Python on macOS clang; It is not recommended to link directly to the Python libraries, but instead, use `-undefined dynamic_lookup` (macOS flag). Depending on how Python was built, using dynamic or static links to the libPython, a direct link can cause it to segfault. This uses that method, and was a necessary change for the conda-forge package for Python 3 macOS. See, for example:. https://pybind11.readthedocs.io/en/stable/compiling.html#building-manually. Note: This might be reasonable to do for Linux too, but maybe with the appropriate flags. The current patch is as conservative as possible. Discussion has moved here: <https://sft.its.cern.ch/jira/browse/ROOT-9950>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3396
https://github.com/root-project/root/pull/3397:0,deployability,Build,Build,0,Build system improvements;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3397
https://github.com/root-project/root/pull/3399:246,interoperability,specif,specific,246,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:52,modifiability,refact,refactor,52,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:52,performance,refactor,refactor,52,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:287,safety,test,test,287,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:319,safety,test,test,319,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:142,security,modif,modified,142,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:287,testability,test,test,287,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3399:319,testability,test,test,319,"Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin ; This PR replaces #1533. Now TH1::FindFirst(Last)Bin is modified and there exists only a common function for TH1 working for all dimensions. . The TH2, and TH3 specific functions are then removed. . A test is also added in hist/hist/test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3399
https://github.com/root-project/root/pull/3400:57,deployability,version,version,57,Changes allow to switch between builtin and external lz4 version; Tested in roottest to enable both references for buitin_lz4 and external lz4 (PR #289),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3400
https://github.com/root-project/root/pull/3400:57,integrability,version,version,57,Changes allow to switch between builtin and external lz4 version; Tested in roottest to enable both references for buitin_lz4 and external lz4 (PR #289),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3400
https://github.com/root-project/root/pull/3400:57,modifiability,version,version,57,Changes allow to switch between builtin and external lz4 version; Tested in roottest to enable both references for buitin_lz4 and external lz4 (PR #289),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3400
https://github.com/root-project/root/pull/3400:66,safety,Test,Tested,66,Changes allow to switch between builtin and external lz4 version; Tested in roottest to enable both references for buitin_lz4 and external lz4 (PR #289),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3400
https://github.com/root-project/root/pull/3400:66,testability,Test,Tested,66,Changes allow to switch between builtin and external lz4 version; Tested in roottest to enable both references for buitin_lz4 and external lz4 (PR #289),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3400
https://github.com/root-project/root/pull/3401:66,modifiability,variab,variable,66,[RF] Fix compiler warnings.; RooAbsSelfCached* were using a local variable that has the same name as a function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3401
https://github.com/root-project/root/pull/3402:428,deployability,observ,observed,428,"Fix the exclusion of underflow bin (and include the last bin) when computing the shortest interval in the BayesianCalculator ; fix a bug in excluding underflow bin when computing shortest interval in BayesianCalculator::ComputeShortestInterval. Before the underflow bin was included and the last bin excluded. . Normally the underflow bin of the posterior histogram will be empty, but the last bin not and a difference could be observed in the computed interval. The reference file of stressRooStats needs to be updated . This fixes problem reported in ROOT-4619",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3402
https://github.com/root-project/root/pull/3402:512,deployability,updat,updated,512,"Fix the exclusion of underflow bin (and include the last bin) when computing the shortest interval in the BayesianCalculator ; fix a bug in excluding underflow bin when computing shortest interval in BayesianCalculator::ComputeShortestInterval. Before the underflow bin was included and the last bin excluded. . Normally the underflow bin of the posterior histogram will be empty, but the last bin not and a difference could be observed in the computed interval. The reference file of stressRooStats needs to be updated . This fixes problem reported in ROOT-4619",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3402
https://github.com/root-project/root/pull/3402:512,safety,updat,updated,512,"Fix the exclusion of underflow bin (and include the last bin) when computing the shortest interval in the BayesianCalculator ; fix a bug in excluding underflow bin when computing shortest interval in BayesianCalculator::ComputeShortestInterval. Before the underflow bin was included and the last bin excluded. . Normally the underflow bin of the posterior histogram will be empty, but the last bin not and a difference could be observed in the computed interval. The reference file of stressRooStats needs to be updated . This fixes problem reported in ROOT-4619",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3402
https://github.com/root-project/root/pull/3402:512,security,updat,updated,512,"Fix the exclusion of underflow bin (and include the last bin) when computing the shortest interval in the BayesianCalculator ; fix a bug in excluding underflow bin when computing shortest interval in BayesianCalculator::ComputeShortestInterval. Before the underflow bin was included and the last bin excluded. . Normally the underflow bin of the posterior histogram will be empty, but the last bin not and a difference could be observed in the computed interval. The reference file of stressRooStats needs to be updated . This fixes problem reported in ROOT-4619",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3402
https://github.com/root-project/root/pull/3402:428,testability,observ,observed,428,"Fix the exclusion of underflow bin (and include the last bin) when computing the shortest interval in the BayesianCalculator ; fix a bug in excluding underflow bin when computing shortest interval in BayesianCalculator::ComputeShortestInterval. Before the underflow bin was included and the last bin excluded. . Normally the underflow bin of the posterior histogram will be empty, but the last bin not and a difference could be observed in the computed interval. The reference file of stressRooStats needs to be updated . This fixes problem reported in ROOT-4619",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3402
https://github.com/root-project/root/pull/3403:53,modifiability,paramet,parameter,53,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:142,modifiability,paramet,parameter,142,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:270,modifiability,paramet,parameter,270,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:178,testability,simul,simulated,178,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:446,testability,Simul,Simulated-Annealing-functions,446,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:481,testability,Simul,Simulated-Annealing-functions,481,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:4,usability,Support,Support,4,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:43,usability,minim,minimizer,43,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:93,usability,support,support,93,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:132,usability,minim,minimizer,132,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:198,usability,minim,minimizer,198,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3403:351,usability,document,documentation,351,"Add Support for setting and retrieving the minimizer parameter options for GSLSimAn; Add the support for setting and retrieving the minimizer parameter options for GSLSimAn, the simulated annealing minimizer algorithm from GSL. This fixes ROOT-4880. The PR also fixes a parameter name in the GSLSimAnParams structure to be the same defined in the GSL documentation. . See gsl_siman_params_t in . https://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing-functions.html#Simulated-Annealing-functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3403
https://github.com/root-project/root/pull/3404:19,deployability,depend,dependency,19,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:54,deployability,depend,dependencies,54,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:141,deployability,modul,modulo,141,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:148,deployability,modul,modules,148,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:77,energy efficiency,core,core,77,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:19,integrability,depend,dependency,19,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:54,integrability,depend,dependencies,54,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:19,modifiability,depend,dependency,19,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:54,modifiability,depend,dependencies,54,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:141,modifiability,modul,modulo,141,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:148,modifiability,modul,modules,148,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:19,safety,depend,dependency,19,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:54,safety,depend,dependencies,54,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:141,safety,modul,modulo,141,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:148,safety,modul,modules,148,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:19,testability,depend,dependency,19,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:54,testability,depend,dependencies,54,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:68,testability,Simpl,Simplify,68,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:94,testability,Simpl,Simplify,94,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:177,testability,simpl,simplified,177,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:68,usability,Simpl,Simplify,68,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:94,usability,Simpl,Simplify,94,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3404:177,usability,simpl,simplified,177,CMake GenerateDict dependency fixes; Fix header->dict dependencies. Simplify core dictionary. Simplify cmake code for dictionary generation (modulo modules - that's still to be simplified...),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3404
https://github.com/root-project/root/pull/3405:403,deployability,instal,installed,403,"Added make uninstall; This is in reference to this forum post - https://root-forum.cern.ch/t/feature-request-make-uninstall/32663. This is but a naive implementation of make uninstall (https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake). This feature does have some issues.. quoting from the forum post - ""One of the problems could be the removal of files that were installed independently of ROOT. """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3405
https://github.com/root-project/root/pull/3405:288,reliability,doe,does,288,"Added make uninstall; This is in reference to this forum post - https://root-forum.cern.ch/t/feature-request-make-uninstall/32663. This is but a naive implementation of make uninstall (https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake). This feature does have some issues.. quoting from the forum post - ""One of the problems could be the removal of files that were installed independently of ROOT. """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3405
https://github.com/root-project/root/pull/3406:5,usability,Support,Support,5,[DF] Support for jitted expressions with return and no ending ';';,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3406
https://github.com/root-project/root/pull/3407:200,availability,error,error,200,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:84,deployability,fail,failing,84,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:319,deployability,fail,fails,319,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:200,performance,error,error,200,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:84,reliability,fail,failing,84,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:319,reliability,fail,fails,319,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:175,safety,except,exception,175,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:200,safety,error,error,200,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:338,security,token,tokenize,338,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:192,usability,clear,clearer,192,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3407:200,usability,error,error,200,"[DF] ROOT-9946 Fix some edge cases in jitting of expressions; This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),. and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:. ```c++. std::cout << \""check\"" << std::endl; return x;. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3407
https://github.com/root-project/root/pull/3408:8,usability,support,support,8,Improve support of runtime_cxxmodules on osx;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3408
https://github.com/root-project/root/pull/3409:6,deployability,build,builds,6,[lazy-builds] Add add_subdirectory wrapper;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3409
https://github.com/root-project/root/pull/3409:35,integrability,wrap,wrapper,35,[lazy-builds] Add add_subdirectory wrapper;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3409
https://github.com/root-project/root/pull/3409:35,interoperability,wrapper,wrapper,35,[lazy-builds] Add add_subdirectory wrapper;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3409
https://github.com/root-project/root/pull/3410:317,deployability,updat,updated,317,[Exp PyROOT] Remove special handling of gInterpreter in pyroot_experimental; https://github.com/root-project/root/pull/3386 reloaded. This intends to fix PyROOT experimental until https://bitbucket.org/wlav/cppyy-backend/pull-requests/17/remove-special-handling-for-ginterpreter is merged and ROOT's copy of Cppyy is updated with a future release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3410
https://github.com/root-project/root/pull/3410:339,deployability,releas,release,339,[Exp PyROOT] Remove special handling of gInterpreter in pyroot_experimental; https://github.com/root-project/root/pull/3386 reloaded. This intends to fix PyROOT experimental until https://bitbucket.org/wlav/cppyy-backend/pull-requests/17/remove-special-handling-for-ginterpreter is merged and ROOT's copy of Cppyy is updated with a future release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3410
https://github.com/root-project/root/pull/3410:317,safety,updat,updated,317,[Exp PyROOT] Remove special handling of gInterpreter in pyroot_experimental; https://github.com/root-project/root/pull/3386 reloaded. This intends to fix PyROOT experimental until https://bitbucket.org/wlav/cppyy-backend/pull-requests/17/remove-special-handling-for-ginterpreter is merged and ROOT's copy of Cppyy is updated with a future release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3410
https://github.com/root-project/root/pull/3410:317,security,updat,updated,317,[Exp PyROOT] Remove special handling of gInterpreter in pyroot_experimental; https://github.com/root-project/root/pull/3386 reloaded. This intends to fix PyROOT experimental until https://bitbucket.org/wlav/cppyy-backend/pull-requests/17/remove-special-handling-for-ginterpreter is merged and ROOT's copy of Cppyy is updated with a future release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3410
https://github.com/root-project/root/pull/3411:155,deployability,patch,patch,155,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3411:226,deployability,version,version,226,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3411:35,energy efficiency,current,current,35,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3411:226,integrability,version,version,226,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3411:226,modifiability,version,version,226,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3411:155,safety,patch,patch,155,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3411:155,security,patch,patch,155,"Adding corrected C++ std flags for current compiler for root-config; ROOT can get the incorrect flags if a compiler needs c++1z or something similar. This patch makes sure the compiler matches exactly what CMake uses. The old version can cause issues activating C++17 mode on AppleClang, for example, and then using `root-config`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3411
https://github.com/root-project/root/pull/3412:43,reliability,doe,does,43,[DOC][NFC] Mention that EnableThreadSafety does not make graphics thread-safe;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3412
https://github.com/root-project/root/pull/3412:73,safety,safe,safe,73,[DOC][NFC] Mention that EnableThreadSafety does not make graphics thread-safe;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3412
https://github.com/root-project/root/pull/3413:127,deployability,patch,patch,127,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3413:75,energy efficiency,current,current,75,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3413:147,modifiability,pac,package,147,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3413:0,safety,Test,Test,0,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3413:127,safety,patch,patch,127,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3413:127,security,patch,patch,127,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3413:0,testability,Test,Test,0,Test for not function in the stdlib; This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3413
https://github.com/root-project/root/pull/3414:7,energy efficiency,Optim,Optimizer,7,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:58,energy efficiency,optim,optimizer,58,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:172,energy efficiency,optim,optimizer,172,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:7,performance,Optimiz,Optimizer,7,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:58,performance,optimiz,optimizer,58,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:172,performance,optimiz,optimizer,172,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:24,testability,simpl,simplification,24,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:24,usability,simpl,simplification,24,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:68,usability,efficien,efficiency,68,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:120,usability,user,users,120,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3414:188,usability,User,User,188,"[TMVA] Optimizer choice simplification; Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3414
https://github.com/root-project/root/pull/3415:13,deployability,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,deployability,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:13,integrability,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,integrability,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:13,interoperability,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:90,interoperability,platform,platforms,90,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,interoperability,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:195,interoperability,platform,platform-independent-python-include,195,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:13,modifiability,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,modifiability,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:13,reliability,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,reliability,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:13,security,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,security,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:13,testability,Integr,Integrate,13,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3415:106,testability,integr,integrated,106,[pyroot exp] Integrate cppyy fix solving issues with python include p…; …ath on different platforms. Also integrated in official cppyy repo:. https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3415
https://github.com/root-project/root/pull/3416:27,deployability,version,version,27,"[RDF, Tutorial] Add python version of df102;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3416
https://github.com/root-project/root/pull/3416:27,integrability,version,version,27,"[RDF, Tutorial] Add python version of df102;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3416
https://github.com/root-project/root/pull/3416:27,modifiability,version,version,27,"[RDF, Tutorial] Add python version of df102;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3416
https://github.com/root-project/root/pull/3417:26,availability,restor,restored,26,Default GDML import units restored to Geant4 ones.; Default GDML import units restored to Geant4 ones. Can be changed before import using TGeoManager::SetDefaultRootUnits().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3417
https://github.com/root-project/root/pull/3417:78,availability,restor,restored,78,Default GDML import units restored to Geant4 ones.; Default GDML import units restored to Geant4 ones. Can be changed before import using TGeoManager::SetDefaultRootUnits().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3417
https://github.com/root-project/root/pull/3417:26,reliability,restor,restored,26,Default GDML import units restored to Geant4 ones.; Default GDML import units restored to Geant4 ones. Can be changed before import using TGeoManager::SetDefaultRootUnits().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3417
https://github.com/root-project/root/pull/3417:78,reliability,restor,restored,78,Default GDML import units restored to Geant4 ones.; Default GDML import units restored to Geant4 ones. Can be changed before import using TGeoManager::SetDefaultRootUnits().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3417
https://github.com/root-project/root/pull/3417:20,testability,unit,units,20,Default GDML import units restored to Geant4 ones.; Default GDML import units restored to Geant4 ones. Can be changed before import using TGeoManager::SetDefaultRootUnits().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3417
https://github.com/root-project/root/pull/3417:72,testability,unit,units,72,Default GDML import units restored to Geant4 ones.; Default GDML import units restored to Geant4 ones. Can be changed before import using TGeoManager::SetDefaultRootUnits().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3417
https://github.com/root-project/root/pull/3418:9,integrability,Filter,Filter,9,[DF] Let Filter accept return values convertible to bool; ...and add test coverage,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3418
https://github.com/root-project/root/pull/3418:69,safety,test,test,69,[DF] Let Filter accept return values convertible to bool; ...and add test coverage,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3418
https://github.com/root-project/root/pull/3418:69,testability,test,test,69,[DF] Let Filter accept return values convertible to bool; ...and add test coverage,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3418
https://github.com/root-project/root/pull/3418:74,testability,coverag,coverage,74,[DF] Let Filter accept return values convertible to bool; ...and add test coverage,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3418
https://github.com/root-project/root/pull/3419:5,deployability,build,build,5,More build system fixes; Related JIRA issue: [ROOT-9874](https://sft.its.cern.ch/jira/browse/ROOT-9874).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3419
https://github.com/root-project/root/pull/3420:249,performance,memor,memory,249,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3420:436,performance,time,times,436,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3420:511,performance,time,time,511,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3420:16,safety,Prevent,Prevent,16,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3420:16,security,Preven,Prevent,16,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3420:446,security,session,session,446,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3420:249,usability,memor,memory,249,"[RF][ROOT-9861] Prevent saving pointers to temporaries in RooCmdArg.; This is a dirty fix for RooCmdArgs saving pointers to temporaries, which get deleted before. being used when functions are called from python. This fix comes at the cost of small memory leaks. (~100 byte) for every function such as RooAbsReal::createIntegral() that uses a construct like. RooCmdArg(const RooArgSet&) as argument. These are usually called only a few times per session. Properly sorting out the ownership would take much more time, but for now it was decided that leaks are better. than crashes or wrong results (e.g. https://root-forum.cern.ch/t/createintegral-gives-unexpected-result/32627). When fixing the leaks, see the comment at the top of RooGlobalFunc.cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3420
https://github.com/root-project/root/pull/3421:4,usability,document,documentation,4,"Fix documentation generation bug; If the comment is left in the code, the html documentation renderer shows it as part of the next member function which is misleading. See this [link](https://root.cern.ch/doc/master/classTList.html#a85c8734ab131c0db5f68c724e47496a7) with wrong doc string. Someone who knows which button to press to generate the docs should check if this really fixes the issue. I haven't found the button ;)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3421
https://github.com/root-project/root/pull/3421:79,usability,document,documentation,79,"Fix documentation generation bug; If the comment is left in the code, the html documentation renderer shows it as part of the next member function which is misleading. See this [link](https://root.cern.ch/doc/master/classTList.html#a85c8734ab131c0db5f68c724e47496a7) with wrong doc string. Someone who knows which button to press to generate the docs should check if this really fixes the issue. I haven't found the button ;)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3421
https://github.com/root-project/root/pull/3423:100,integrability,inject,injects,100,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3423:251,modifiability,inherit,inherits,251,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3423:282,reliability,doe,does,282,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3423:100,security,inject,injects,100,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3423:536,security,stolen,stolen,536,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3423:164,usability,custom,customizes,164,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3423:438,usability,support,support,438,"[Exp PyROOT] Add item setting pythonisation for TClonesArray; The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3423
https://github.com/root-project/root/pull/3424:448,availability,avail,available,448,"[PyROOT exp] Add MakeNumpyDataFrame feature; This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14). ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport. Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3424
https://github.com/root-project/root/pull/3424:294,integrability,Filter,Filter,294,"[PyROOT exp] Add MakeNumpyDataFrame feature; This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14). ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport. Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3424
https://github.com/root-project/root/pull/3424:448,reliability,availab,available,448,"[PyROOT exp] Add MakeNumpyDataFrame feature; This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14). ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport. Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3424
https://github.com/root-project/root/pull/3424:448,safety,avail,available,448,"[PyROOT exp] Add MakeNumpyDataFrame feature; This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14). ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport. Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3424
https://github.com/root-project/root/pull/3424:448,security,availab,available,448,"[PyROOT exp] Add MakeNumpyDataFrame feature; This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14). ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport. Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3424
https://github.com/root-project/root/pull/3424:328,testability,assert,assert,328,"[PyROOT exp] Add MakeNumpyDataFrame feature; This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14). ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport. Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3424
https://github.com/root-project/root/pull/3425:309,availability,error,error,309,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:291,deployability,contain,contain,291,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:561,deployability,log,log,561,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:463,energy efficiency,current,current,463,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:315,integrability,messag,message,315,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:315,interoperability,messag,message,315,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:309,performance,error,error,309,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:282,reliability,doe,does,282,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:309,safety,error,error,309,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:471,safety,test,test,471,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:477,safety,test,testRootFinder,477,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:561,safety,log,log,561,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:561,security,log,log,561,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:471,testability,test,test,471,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:477,testability,test,testRootFinder,477,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:561,testability,log,log,561,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:309,usability,error,error,309,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3425:599,usability,support,supports,599,Improve BrentRootFinder algorithm of MathCore and TF1::GetX ; This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it. Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. . In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before. This commit fixes the problem reported in . ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3425
https://github.com/root-project/root/pull/3426:332,deployability,version,version,332,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:390,deployability,version,version,390,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:332,integrability,version,version,332,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:390,integrability,version,version,390,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:332,modifiability,version,version,332,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:390,modifiability,version,version,390,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:476,performance,time,time,476,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:20,safety,Test,Tests,20,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:78,safety,test,tests,78,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:87,safety,Test,Tests,87,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:183,safety,test,test,183,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:222,safety,test,tests,222,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:290,safety,test,tests,290,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:446,safety,test,tests,446,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:20,testability,Test,Tests,20,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:78,testability,test,tests,78,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:87,testability,Test,Tests,87,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:183,testability,test,test,183,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:222,testability,test,tests,222,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:290,testability,test,tests,290,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3426:446,testability,test,tests,446,"Revise Long Running Tests; This PR change the longtest labels for some of the tests. . Tests like stressHistogram, stressHistoFit, stressRooFit, stressRooStats are essentials and are test suites made of several individual tests. . Their running for every PR is essential. . Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Start flagging instead as longtest other minor tests in math which take some time (longer than few seconds) but they are not critical. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3426
https://github.com/root-project/root/pull/3427:100,deployability,version,version,100,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3427:92,energy efficiency,current,current,92,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3427:100,integrability,version,version,100,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3427:100,modifiability,version,version,100,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3427:116,reliability,doe,doesn,116,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3427:186,testability,simpl,simple,186,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3427:186,usability,simpl,simple,186,"TH2: DoFitSlices() TCutG are processed in option; When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3427
https://github.com/root-project/root/pull/3428:51,energy efficiency,current,currently,51,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3428:404,performance,cach,cached,404,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3428:91,reliability,doe,does,91,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3428:279,security,expos,exposes,279,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3428:16,usability,support,support,16,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3428:381,usability,effectiv,effectively,381,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3428:411,usability,cursor,cursor,411,Fix RArrowDS to support rewinding; Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3428
https://github.com/root-project/root/pull/3429:187,reliability,doe,does,187,[NOBUILD][PyROOT exp] Fix implicit import of TIter; Omit explicit import of TIter since this triggers cppyy to fetch the class upon importing ROOT. Acessing TIter through cppyy.gbl.TIter does the same job lazily.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3429
https://github.com/root-project/root/pull/3431:22,security,expos,expose,22,"[DF] Breaking change: expose type of Defined column from RInterface ; This allows to write the following:. ```c++. auto df2 = df.Define(""x"", [](int x, int y) { return SomeFunction(x, y); }, {""y"", ""z""});. using x_type = decltype(df2)::DefinedCol_t;. auto df3 = df.Define(""w"", [](x_type x) { return x*x; }, {""x""});. ```. where `x_type` is the type of the Defined column ""x"". EDIT: the breakage comes from a change in the type returned by a non-jitted `Define`. Very few and expert users should ever even care what this type is in the first place, but still.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3431
https://github.com/root-project/root/pull/3431:479,usability,user,users,479,"[DF] Breaking change: expose type of Defined column from RInterface ; This allows to write the following:. ```c++. auto df2 = df.Define(""x"", [](int x, int y) { return SomeFunction(x, y); }, {""y"", ""z""});. using x_type = decltype(df2)::DefinedCol_t;. auto df3 = df.Define(""w"", [](x_type x) { return x*x; }, {""x""});. ```. where `x_type` is the type of the Defined column ""x"". EDIT: the breakage comes from a change in the type returned by a non-jitted `Define`. Very few and expert users should ever even care what this type is in the first place, but still.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3431
https://github.com/root-project/root/pull/3432:125,safety,test,test,125,"Fixing notfn a bit more clearly; This is a better fix for not_fn, where the check is now applied in the right place, and the test runs regardless (it could check for the not_fn define as well). Followup to #3413 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3432
https://github.com/root-project/root/pull/3432:125,testability,test,test,125,"Fixing notfn a bit more clearly; This is a better fix for not_fn, where the check is now applied in the right place, and the test runs regardless (it could check for the not_fn define as well). Followup to #3413 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3432
https://github.com/root-project/root/pull/3432:24,usability,clear,clearly,24,"Fixing notfn a bit more clearly; This is a better fix for not_fn, where the check is now applied in the right place, and the test runs regardless (it could check for the not_fn define as well). Followup to #3413 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3432
https://github.com/root-project/root/pull/3433:32,testability,assert,asserts,32,Improve RArrowDS; * Comment out asserts. * Speedup inner loop by moving some checks one level up in the outer loop. * Actually support rewinding an RArrowDS,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3433
https://github.com/root-project/root/pull/3433:127,usability,support,support,127,Improve RArrowDS; * Comment out asserts. * Speedup inner loop by moving some checks one level up in the outer loop. * Actually support rewinding an RArrowDS,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3433
https://github.com/root-project/root/pull/3434:66,deployability,build,building,66,Fix doxygen generation with Python 3; This PR fixes problems when building the doxygen documentation when the ROOT Python bindings (PyROOT) are built against Python 3.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3434
https://github.com/root-project/root/pull/3434:122,interoperability,bind,bindings,122,Fix doxygen generation with Python 3; This PR fixes problems when building the doxygen documentation when the ROOT Python bindings (PyROOT) are built against Python 3.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3434
https://github.com/root-project/root/pull/3434:122,modifiability,bind,bindings,122,Fix doxygen generation with Python 3; This PR fixes problems when building the doxygen documentation when the ROOT Python bindings (PyROOT) are built against Python 3.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3434
https://github.com/root-project/root/pull/3434:87,usability,document,documentation,87,Fix doxygen generation with Python 3; This PR fixes problems when building the doxygen documentation when the ROOT Python bindings (PyROOT) are built against Python 3.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3434
https://github.com/root-project/root/pull/3435:111,availability,error,error,111,Fix v7 line tutorial when running in batch mode; The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3435
https://github.com/root-project/root/pull/3435:74,deployability,fail,fails,74,Fix v7 line tutorial when running in batch mode; The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3435
https://github.com/root-project/root/pull/3435:230,deployability,fail,fail,230,Fix v7 line tutorial when running in batch mode; The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3435
https://github.com/root-project/root/pull/3435:37,integrability,batch,batch,37,Fix v7 line tutorial when running in batch mode; The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3435
https://github.com/root-project/root/pull/3435:92,integrability,batch,batch,92,Fix v7 line tutorial when running in batch mode; The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3435
https://github.com/root-project/root/pull/3435:37,performance,batch,batch,37,Fix v7 line tutorial when running in batch mode; The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3435
