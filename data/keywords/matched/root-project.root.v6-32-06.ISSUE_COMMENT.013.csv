id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/2644:54,performance,time,time,54,"@yamaguchi1024 how much does this improve the startup time and memory saving? As @bluehood says, I think that something more ""contained"" than the few lines could be the right solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:63,performance,memor,memory,63,"@yamaguchi1024 how much does this improve the startup time and memory saving? As @bluehood says, I think that something more ""contained"" than the few lines could be the right solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:24,reliability,doe,does,24,"@yamaguchi1024 how much does this improve the startup time and memory saving? As @bluehood says, I think that something more ""contained"" than the few lines could be the right solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:63,usability,memor,memory,63,"@yamaguchi1024 how much does this improve the startup time and memory saving? As @bluehood says, I think that something more ""contained"" than the few lines could be the right solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:107,availability,avail,available,107,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:97,integrability,interfac,interface,97,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:97,interoperability,interfac,interface,97,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:97,modifiability,interfac,interface,97,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:107,reliability,availab,available,107,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:107,safety,avail,available,107,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:107,security,availab,available,107,"Hi Danilo,. I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2644:22,usability,close,close,22,@yamaguchi1024 can we close this given https://github.com/root-project/root/pull/2664 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2644
https://github.com/root-project/root/pull/2651:80,deployability,updat,update,80,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:644,deployability,DEPEND,DEPENDENCIES,644,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:658,energy efficiency,Core,Core,658,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:644,integrability,DEPEND,DEPENDENCIES,644,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:184,modifiability,variab,variables,184,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:644,modifiability,DEPEND,DEPENDENCIES,644,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:80,safety,updat,update,80,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:170,safety,avoid,avoid,170,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:644,safety,DEPEND,DEPENDENCIES,644,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:80,security,updat,update,80,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2651:644,testability,DEPEND,DEPENDENCIES,644,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```. ROOT_STANDARD_LIBRARY_PACKAGE(RInterface. HEADERS. RExports.h. TRDataFrame.h. TRFunctionExport.h. TRFunctionImport.h. TRInterface.h. TRInternalFunction.h. TRObject.h. SOURCES. RExports.cxx. TRCompletion.cxx. TRDataFrame.cxx. TRFunctionExport.cxx. TRFunctionImport.cxx. TRInterface.cxx. TRObject.cxx. DICTIONARY_OPTIONS. -I${R_INCLUDE_DIR}. -I${R_Rcpp_INCLUDE_DIR}. -I${R_RInside_INCLUDE_DIR}. LIBRARIES. R::R readline. DEPENDENCIES. Core. Matrix. RIO. Thread. ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2651
https://github.com/root-project/root/pull/2652:15,availability,error,errors,15,There are many errors in python testing - no idea if it has something to do with that PR? I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:15,performance,error,errors,15,There are many errors in python testing - no idea if it has something to do with that PR? I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:15,safety,error,errors,15,There are many errors in python testing - no idea if it has something to do with that PR? I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:32,safety,test,testing,32,There are many errors in python testing - no idea if it has something to do with that PR? I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:32,testability,test,testing,32,There are many errors in python testing - no idea if it has something to do with that PR? I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:15,usability,error,errors,15,There are many errors in python testing - no idea if it has something to do with that PR? I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:41,deployability,fail,fails,41,@Axel-Naumann . Do you understand why it fails with many python tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:41,reliability,fail,fails,41,@Axel-Naumann . Do you understand why it fails with many python tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:64,safety,test,tests,64,@Axel-Naumann . Do you understand why it fails with many python tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:23,testability,understand,understand,23,@Axel-Naumann . Do you understand why it fails with many python tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:64,testability,test,tests,64,@Axel-Naumann . Do you understand why it fails with many python tests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:28,availability,error,errors,28,"It could well be that these errors are due to your change; please check. In general, another approach would be to use a `union {void(*)() ptr, T*}` to convert from the actual function type to a `void()`. After all, we *know* that it's all just a pointer, storage-wise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:28,performance,error,errors,28,"It could well be that these errors are due to your change; please check. In general, another approach would be to use a `union {void(*)() ptr, T*}` to convert from the actual function type to a `void()`. After all, we *know* that it's all just a pointer, storage-wise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:28,safety,error,errors,28,"It could well be that these errors are due to your change; please check. In general, another approach would be to use a `union {void(*)() ptr, T*}` to convert from the actual function type to a `void()`. After all, we *know* that it's all just a pointer, storage-wise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:28,usability,error,errors,28,"It could well be that these errors are due to your change; please check. In general, another approach would be to use a `union {void(*)() ptr, T*}` to convert from the actual function type to a `void()`. After all, we *know* that it's all just a pointer, storage-wise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:240,interoperability,compatib,compatible,240,"> After all, we know that it's all just a pointer, storage-wise. We store not a pointer, but pointer on the functions. And there are two different signatures: `void * GetSomeInstance()` and `void *& GetOtherInstance()`. By chance they gave compatible ABI, but one cannot guarantee this forever. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:147,security,sign,signatures,147,"> After all, we know that it's all just a pointer, storage-wise. We store not a pointer, but pointer on the functions. And there are two different signatures: `void * GetSomeInstance()` and `void *& GetOtherInstance()`. By chance they gave compatible ABI, but one cannot guarantee this forever. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:261,testability,simpl,simpler,261,"For all our supported ABIs, all pointers to global / static functions, whatever their type, have the same size. If that ever changes we will have lots and lots of problems. So yes, your solution is correct, while mine is relying on undefined behavior but a lot simpler :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:12,usability,support,supported,12,"For all our supported ABIs, all pointers to global / static functions, whatever their type, have the same size. If that ever changes we will have lots and lots of problems. So yes, your solution is correct, while mine is relying on undefined behavior but a lot simpler :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:242,usability,behavi,behavior,242,"For all our supported ABIs, all pointers to global / static functions, whatever their type, have the same size. If that ever changes we will have lots and lots of problems. So yes, your solution is correct, while mine is relying on undefined behavior but a lot simpler :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:261,usability,simpl,simpler,261,"For all our supported ABIs, all pointers to global / static functions, whatever their type, have the same size. If that ever changes we will have lots and lots of problems. So yes, your solution is correct, while mine is relying on undefined behavior but a lot simpler :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:64,deployability,fail,failing,64,Now I using function reference. But still basic pyton tests are failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:64,reliability,fail,failing,64,Now I using function reference. But still basic pyton tests are failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:54,safety,test,tests,54,Now I using function reference. But still basic pyton tests are failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:54,testability,test,tests,54,Now I using function reference. But still basic pyton tests are failing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:104,deployability,fail,fail,104,"Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:104,reliability,fail,fail,104,"Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:23,usability,minim,minimal,23,"Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:106,deployability,fail,fail,106,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:258,deployability,patch,patch,258,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:228,performance,time,time,228,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:317,performance,time,time,317,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:106,reliability,fail,fail,106,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:258,safety,patch,patch,258,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:258,security,patch,patch,258,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:121,testability,understand,understand,121,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:25,usability,minim,minimal,25,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2652:291,usability,close,close,291,"> Can we first apply the minimal change from #2659 to the master, before we find out what's making PyROOT fail? I do not understand at all why it happens - I see similar problem on my machine just with master branch. . Yes, for time been you can cherry-pick patch from #2659. . And probably close this PR - I have no time to deeply debug it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2652
https://github.com/root-project/root/pull/2653:40,deployability,instal,install,40,"@Axel-Naumann do you know if we need to install anything coming from clang? The change looks good for me, but I want to make sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2653
https://github.com/root-project/root/pull/2653:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2653
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build just on ubuntu18/gcc7 with flags -G Ninja,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build just on ubuntu16/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2654:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2654
https://github.com/root-project/root/pull/2655:2,deployability,updat,update,2,I update comments in the tutorials and remove unused parts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2655
https://github.com/root-project/root/pull/2655:2,safety,updat,update,2,I update comments in the tutorials and remove unused parts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2655
https://github.com/root-project/root/pull/2655:2,security,updat,update,2,I update comments in the tutorials and remove unused parts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2655
https://github.com/root-project/root/pull/2656:37,safety,review,reviewer,37,"@etejedor , I acknowledge my role of reviewer. I will tackle this at the beginning of next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2656
https://github.com/root-project/root/pull/2656:37,testability,review,reviewer,37,"@etejedor , I acknowledge my role of reviewer. I will tackle this at the beginning of next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2656
https://github.com/root-project/root/pull/2656:31,performance,perform,performance,31,"> There is a nice thread about performance of application of pythonisations, but it's independent from the approval I think. Sure, I'm just trying to understand why things are as they are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2656
https://github.com/root-project/root/pull/2656:150,testability,understand,understand,150,"> There is a nice thread about performance of application of pythonisations, but it's independent from the approval I think. Sure, I'm just trying to understand why things are as they are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2656
https://github.com/root-project/root/pull/2656:31,usability,perform,performance,31,"> There is a nice thread about performance of application of pythonisations, but it's independent from the approval I think. Sure, I'm just trying to understand why things are as they are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2656
https://github.com/root-project/root/pull/2658:47,usability,clear,clearly,47,"Hi, since we are touching this, is the feature clearly indicated in the docs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2658
https://github.com/root-project/root/pull/2658:55,usability,indicat,indicated,55,"Hi, since we are touching this, is the feature clearly indicated in the docs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2658
https://github.com/root-project/root/pull/2658:28,usability,document,documentation,28,"merged after addressing the documentation comment, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2658
https://github.com/root-project/root/pull/2660:70,safety,test,test,70,> This will most probably not work on Windows. Why do you think so? I test it at least from windows command line - it was starting firefox in headless mode.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2660
https://github.com/root-project/root/pull/2660:70,testability,test,test,70,> This will most probably not work on Windows. Why do you think so? I test it at least from windows command line - it was starting firefox in headless mode.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2660
https://github.com/root-project/root/pull/2660:100,usability,command,command,100,> This will most probably not work on Windows. Why do you think so? I test it at least from windows command line - it was starting firefox in headless mode.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2660
https://github.com/root-project/root/pull/2660:55,interoperability,platform,platforms,55,Because usually Windows is always different than other platforms... Never mind,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2660
https://github.com/root-project/root/pull/2662:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2662
https://github.com/root-project/root/pull/2664:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2664
https://github.com/root-project/root/pull/2664:64,integrability,rout,routine,64,I do not quite understand why don’t we put a TCling::printValue routine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2664
https://github.com/root-project/root/pull/2664:15,testability,understand,understand,15,I do not quite understand why don’t we put a TCling::printValue routine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2664
https://github.com/root-project/root/pull/2669:32,deployability,modul,modules,32,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:53,deployability,fail,failed,53,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:32,modifiability,modul,modules,32,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:53,reliability,fail,failed,53,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:32,safety,modul,modules,32,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:41,safety,test,tests,41,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:41,testability,test,tests,41,"@dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:34,deployability,modul,modules,34,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:55,deployability,fail,failed,55,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:34,modifiability,modul,modules,34,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:55,reliability,fail,failed,55,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:34,safety,modul,modules,34,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:43,safety,test,tests,43,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2669:43,testability,test,tests,43,"> @dpiparo we are tunning PR with modules, tests which failed in your PR is actually passing in master, please don't mind about them! @oshadura no problem! thanks for the info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2669
https://github.com/root-project/root/pull/2671:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2671
https://github.com/root-project/root/pull/2671:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2671
https://github.com/root-project/root/pull/2671:20,usability,close,closed,20,I guess this can be closed? See [ROOT-9906](https://sft.its.cern.ch/jira/browse/ROOT-9906).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2671
https://github.com/root-project/root/pull/2673:51,deployability,upgrad,upgrade,51,"@vgvassilev No, but you can discard these when you upgrade LLVM. The OCaml part has been changed upstream, but I don't think the Windows warning has been removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2673
https://github.com/root-project/root/pull/2673:51,modifiability,upgrad,upgrade,51,"@vgvassilev No, but you can discard these when you upgrade LLVM. The OCaml part has been changed upstream, but I don't think the Windows warning has been removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2673
https://github.com/root-project/root/pull/2674:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:407,availability,consist,consistent,407,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:39,deployability,patch,patch,39,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:74,deployability,observ,observed,74,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:280,deployability,patch,patch,280,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:487,deployability,patch,patch,487,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:606,deployability,patch,patch,606,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:813,deployability,patch,patch,813,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:1017,deployability,patch,patch,1017,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:93,energy efficiency,Core,Core,93,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:110,energy efficiency,CPU,CPU,110,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:136,energy efficiency,core,cores,136,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:670,energy efficiency,optim,optimized,670,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:110,performance,CPU,CPU,110,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:148,performance,time,times,148,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:444,performance,perform,performed,444,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:651,performance,time,time,651,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:670,performance,optimiz,optimized,670,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:39,safety,patch,patch,39,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:280,safety,patch,patch,280,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:487,safety,patch,patch,487,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:606,safety,patch,patch,606,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:813,safety,patch,patch,813,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:1017,safety,patch,patch,1017,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:39,security,patch,patch,39,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:280,security,patch,patch,280,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:487,security,patch,patch,487,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:606,security,patch,patch,606,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:813,security,patch,patch,813,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:1017,security,patch,patch,1017,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:74,testability,observ,observed,74,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:65,usability,behavi,behavior,65,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:407,usability,consist,consistent,407,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2674:444,usability,perform,performed,444,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores). All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)). #### Master (no patch). ``` . total interpreted: 5.23 . loop interpreted: 4.1 . compile -O3: 3.2 . execute loop: 0.14. ````. These timings are consistent with the latest that were performed on this benchmark. . . #### With patch. ``` . total interpreted: 1.5. loop interpreted: 0.37 . compilation and loop execution: same as above (master no patch). ```. Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)). #### Master (no patch). ```. ---- run_dataframe.C ----. interpreted loop: 8. compile O3: 5. compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted loop: 6. compile O3: 5. compiled loop: 3. ```. #### With patch. ```. --- run_dataframe.C ---. interpreted: 5. compile -O3: 5. loop: 5. --- run_dataframe_imt.C (4 threads) ---. interpreted: 3. compile -O3: 5. loop: 3. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2674
https://github.com/root-project/root/pull/2675:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:37,availability,slo,slowdown,37,On my linux workstation I see a ~10% slowdown in single-thread benchmarks (same benchmarks as #2674 ) and some speedup in IMT executions (4s instead of 6s for h1analysis with many input files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:37,reliability,slo,slowdown,37,On my linux workstation I see a ~10% slowdown in single-thread benchmarks (same benchmarks as #2674 ) and some speedup in IMT executions (4s instead of 6s for h1analysis with many input files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:180,safety,input,input,180,On my linux workstation I see a ~10% slowdown in single-thread benchmarks (same benchmarks as #2674 ) and some speedup in IMT executions (4s instead of 6s for h1analysis with many input files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:180,usability,input,input,180,On my linux workstation I see a ~10% slowdown in single-thread benchmarks (same benchmarks as #2674 ) and some speedup in IMT executions (4s instead of 6s for h1analysis with many input files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:5,performance,time,time,5,Real time on Mac 10.14:. test | master | this PR. ----|-----|----. stressGraphics | 32 | 31. df102_NanoAODDimuonAnalysis.C | 232 | 152. OK so merging. Thanks @bluehood for the Linux data!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:25,safety,test,test,25,Real time on Mac 10.14:. test | master | this PR. ----|-----|----. stressGraphics | 32 | 31. df102_NanoAODDimuonAnalysis.C | 232 | 152. OK so merging. Thanks @bluehood for the Linux data!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2675:25,testability,test,test,25,Real time on Mac 10.14:. test | master | this PR. ----|-----|----. stressGraphics | 32 | 31. df102_NanoAODDimuonAnalysis.C | 232 | 152. OK so merging. Thanks @bluehood for the Linux data!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2675
https://github.com/root-project/root/pull/2676:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2676
https://github.com/root-project/root/pull/2678:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2678
https://github.com/root-project/root/pull/2680:27,reliability,diagno,diagnositic,27,What is the case where the diagnositic is a false positive (i.e. is it really wise to disable it)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:27,testability,diagno,diagnositic,27,What is the case where the diagnositic is a false positive (i.e. is it really wise to disable it)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:154,availability,error,errors,154,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:14,deployability,Build,Build,14,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:30,deployability,Build,Build,30,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:127,deployability,patch,patch,127,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:305,deployability,depend,dependencies,305,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:325,deployability,build,build,325,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:248,energy efficiency,current,current,248,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:305,integrability,depend,dependencies,305,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:305,modifiability,depend,dependencies,305,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:154,performance,error,errors,154,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:127,safety,patch,patch,127,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:154,safety,error,errors,154,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:305,safety,depend,dependencies,305,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:127,security,patch,patch,127,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:305,testability,depend,dependencies,305,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2680:154,usability,error,errors,154,"Consider:. 1. Build A.pcm. 2. Build B.pcm which imports A.pcm. 3. Rebuild A.pcm (without rebuilding B.pcm). 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2680
https://github.com/root-project/root/pull/2683:0,energy efficiency,Current,Currently,0,"Currently, rmkdepend is needed by roottest. Happy to see that changed... Way to go for cint-config.in!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:2,energy efficiency,Current,Currently,2,"> Currently, rmkdepend is needed by roottest. Happy to see that changed... Ah, ok. I will drop that commit then. Thanks for letting me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:30,deployability,build,build,30,I will rebase and push so the build will fail due to the branch that will be missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:41,deployability,fail,fail,41,I will rebase and push so the build will fail due to the branch that will be missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:41,reliability,fail,fail,41,I will rebase and push so the build will fail due to the branch that will be missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:82,safety,test,tests,82,> should we move that to roottest and remove it from ROOT? I'd rather. - move the tests needing `rmkdepend` from Makefiles to CMake. - then remove `rmkdepend`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:82,testability,test,tests,82,> should we move that to roottest and remove it from ROOT? I'd rather. - move the tests needing `rmkdepend` from Makefiles to CMake. - then remove `rmkdepend`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2683:95,integrability,sub,subsequent,95,"Ok, that sounds reasonable. I will take a look to see if it's not too much work and do it in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2683
https://github.com/root-project/root/pull/2684:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2684
https://github.com/root-project/root/pull/2686:8,safety,review,reviews,8,https://reviews.llvm.org/D49852,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:8,testability,review,reviews,8,https://reviews.llvm.org/D49852,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2686:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2686
https://github.com/root-project/root/pull/2691:9,availability,failur,failure,9,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:9,deployability,fail,failure,9,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:9,performance,failur,failure,9,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:9,reliability,fail,failure,9,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:4,safety,test,test,4,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2691:4,testability,test,test,4,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2691
https://github.com/root-project/root/pull/2694:25,safety,review,review,25,@egpbos Could you please review these changes? Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:25,testability,review,review,25,@egpbos Could you please review these changes? Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:0,availability,Failur,Failures,0,"Failures are not related to this PR, I so will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:0,deployability,Fail,Failures,0,"Failures are not related to this PR, I so will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:0,performance,Failur,Failures,0,"Failures are not related to this PR, I so will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2694:0,reliability,Fail,Failures,0,"Failures are not related to this PR, I so will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2694
https://github.com/root-project/root/pull/2696:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2696:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2696:59,deployability,build,build,59,The only problems are either know (32bits and snapshot) or build related (stale test libraries),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2696:80,safety,test,test,80,The only problems are either know (32bits and snapshot) or build related (stale test libraries),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2696:80,testability,test,test,80,The only problems are either know (32bits and snapshot) or build related (stale test libraries),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2696
https://github.com/root-project/root/pull/2697:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2697
https://github.com/root-project/root/pull/2698:15,deployability,continu,continued,15,"I'm sorry have continued this discussion for **so long**, but this is the final interface that you can use!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:80,integrability,interfac,interface,80,"I'm sorry have continued this discussion for **so long**, but this is the final interface that you can use!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:80,interoperability,interfac,interface,80,"I'm sorry have continued this discussion for **so long**, but this is the final interface that you can use!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:80,modifiability,interfac,interface,80,"I'm sorry have continued this discussion for **so long**, but this is the final interface that you can use!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:49,reliability,doe,does,49,"Thank you @yamaguchi1024 ! Out of curiosity, how does cling know how to print `RVec`s now that you removed the `printValue` overload for `RVec<T>`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:500,deployability,modul,module-release,500,"> @yamaguchi1024 uhm I'm confused, unless cling had some other mechanism to figure out how to print an `RVec<T>`, the `printValue` overload was definitely doing something because if you instantiate an `RVec` at root prompt it gets pretty-printed...? > . > EDIT: but more importantly: is `RVec` pretty-printed after your changes? > For example. > . > ```. > root [0] ROOT::VecOps::RVec<int> v{1,2,3}. > (ROOT::VecOps::RVec<int> &) { 1, 2, 3 }. > ```. It'll be printed like this:. ```. [yuka@yuka-arch module-release]$ root -l. root [0] ROOT::VecOps::RVec<int> v{1,2,3}. (ROOT::VecOps::RVec<int> &) { 1, 2, 3 }. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:500,modifiability,modul,module-release,500,"> @yamaguchi1024 uhm I'm confused, unless cling had some other mechanism to figure out how to print an `RVec<T>`, the `printValue` overload was definitely doing something because if you instantiate an `RVec` at root prompt it gets pretty-printed...? > . > EDIT: but more importantly: is `RVec` pretty-printed after your changes? > For example. > . > ```. > root [0] ROOT::VecOps::RVec<int> v{1,2,3}. > (ROOT::VecOps::RVec<int> &) { 1, 2, 3 }. > ```. It'll be printed like this:. ```. [yuka@yuka-arch module-release]$ root -l. root [0] ROOT::VecOps::RVec<int> v{1,2,3}. (ROOT::VecOps::RVec<int> &) { 1, 2, 3 }. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:500,safety,modul,module-release,500,"> @yamaguchi1024 uhm I'm confused, unless cling had some other mechanism to figure out how to print an `RVec<T>`, the `printValue` overload was definitely doing something because if you instantiate an `RVec` at root prompt it gets pretty-printed...? > . > EDIT: but more importantly: is `RVec` pretty-printed after your changes? > For example. > . > ```. > root [0] ROOT::VecOps::RVec<int> v{1,2,3}. > (ROOT::VecOps::RVec<int> &) { 1, 2, 3 }. > ```. It'll be printed like this:. ```. [yuka@yuka-arch module-release]$ root -l. root [0] ROOT::VecOps::RVec<int> v{1,2,3}. (ROOT::VecOps::RVec<int> &) { 1, 2, 3 }. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:18,deployability,contain,container,18,"We have a generic container (`begin()` `end()`) printer. I bet that gets hit:. ```. // vector, set, deque etc. template <typename CollectionType>. auto printValue_impl(. const CollectionType* obj,. typename std::enable_if<. std::is_reference<decltype(*(obj->begin()))>::value>::type* = 0). -> decltype(++(obj->begin()), obj->end(), std::string()) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2698:11,deployability,build,build,11,@phsft-bot build just on fedora28/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2698
https://github.com/root-project/root/pull/2700:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2700
https://github.com/root-project/root/pull/2700:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2700
https://github.com/root-project/root/pull/2703:267,integrability,Filter,Filters,267,"This PR introduces a great behaviour. We need to think about our tutorials and examples now, e.g. whether somewhere we assumed that by default no MT was enabled :). One big consequence is that users are forced to a paradigm shift: code written for example in Defines/Filters of RDF should be thread safe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:299,safety,safe,safe,299,"This PR introduces a great behaviour. We need to think about our tutorials and examples now, e.g. whether somewhere we assumed that by default no MT was enabled :). One big consequence is that users are forced to a paradigm shift: code written for example in Defines/Filters of RDF should be thread safe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:27,usability,behavi,behaviour,27,"This PR introduces a great behaviour. We need to think about our tutorials and examples now, e.g. whether somewhere we assumed that by default no MT was enabled :). One big consequence is that users are forced to a paradigm shift: code written for example in Defines/Filters of RDF should be thread safe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:193,usability,user,users,193,"This PR introduces a great behaviour. We need to think about our tutorials and examples now, e.g. whether somewhere we assumed that by default no MT was enabled :). One big consequence is that users are forced to a paradigm shift: code written for example in Defines/Filters of RDF should be thread safe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:264,availability,echo,echo,264,"I welcome the idea of turning on parallelism where it makes sense, but the approach chosen is not the best in my opinion. I think a better alternative would be to use `isatty` to check if stdin comes from a terminal or if we are running in batch mode:. ```bash. $ echo 'std::cout << isatty(STDIN_FILENO) << ""\n"";' | root -l. 0. $ root -l. root [0] isatty(STDIN_FILENO). (int) 1. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:240,integrability,batch,batch,240,"I welcome the idea of turning on parallelism where it makes sense, but the approach chosen is not the best in my opinion. I think a better alternative would be to use `isatty` to check if stdin comes from a terminal or if we are running in batch mode:. ```bash. $ echo 'std::cout << isatty(STDIN_FILENO) << ""\n"";' | root -l. 0. $ root -l. root [0] isatty(STDIN_FILENO). (int) 1. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:33,performance,parallel,parallelism,33,"I welcome the idea of turning on parallelism where it makes sense, but the approach chosen is not the best in my opinion. I think a better alternative would be to use `isatty` to check if stdin comes from a terminal or if we are running in batch mode:. ```bash. $ echo 'std::cout << isatty(STDIN_FILENO) << ""\n"";' | root -l. 0. $ root -l. root [0] isatty(STDIN_FILENO). (int) 1. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:240,performance,batch,batch,240,"I welcome the idea of turning on parallelism where it makes sense, but the approach chosen is not the best in my opinion. I think a better alternative would be to use `isatty` to check if stdin comes from a terminal or if we are running in batch mode:. ```bash. $ echo 'std::cout << isatty(STDIN_FILENO) << ""\n"";' | root -l. 0. $ root -l. root [0] isatty(STDIN_FILENO). (int) 1. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:81,deployability,resourc,resource,81,"@amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:81,energy efficiency,resourc,resource,81,"@amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:74,interoperability,share,shared,74,"@amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:81,performance,resourc,resource,81,"@amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:81,safety,resourc,resource,81,"@amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:81,testability,resourc,resource,81,"@amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:20,availability,failur,failures,20,⚠️ This PR triggers failures (i.e. uncovers thread-unsafe constructs in ROOT) that will first need to get fixed before this PR can get merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:20,deployability,fail,failures,20,⚠️ This PR triggers failures (i.e. uncovers thread-unsafe constructs in ROOT) that will first need to get fixed before this PR can get merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:20,performance,failur,failures,20,⚠️ This PR triggers failures (i.e. uncovers thread-unsafe constructs in ROOT) that will first need to get fixed before this PR can get merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:20,reliability,fail,failures,20,⚠️ This PR triggers failures (i.e. uncovers thread-unsafe constructs in ROOT) that will first need to get fixed before this PR can get merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:51,safety,unsaf,unsafe,51,⚠️ This PR triggers failures (i.e. uncovers thread-unsafe constructs in ROOT) that will first need to get fixed before this PR can get merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:11,deployability,build,build,11,@phsft-bot build since quite some changes took place in the past 2 months.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:11,deployability,build,build,11,@phsft-bot build just on mac1014/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:429,availability,avail,available,429,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:678,availability,state,state,678,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:740,availability,Avail,Availability,740,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:796,availability,Servic,Service,796,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:873,availability,avail,available,873,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:83,deployability,resourc,resource,83,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:209,deployability,log,login,209,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:731,deployability,log,login,731,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:790,deployability,Log,Login,790,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:796,deployability,Servic,Service,796,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:83,energy efficiency,resourc,resource,83,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:563,energy efficiency,measur,measures,563,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:592,integrability,complian,compliance,592,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:678,integrability,state,state,678,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:783,integrability,Pub,Public,783,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:796,integrability,Servic,Service,796,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:76,interoperability,share,shared,76,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:796,modifiability,Servic,Service,796,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:83,performance,resourc,resource,83,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:429,reliability,availab,available,429,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:740,reliability,Availab,Availability,740,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:873,reliability,availab,available,873,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:83,safety,resourc,resource,83,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:209,safety,log,login,209,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:429,safety,avail,available,429,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:592,safety,compl,compliance,592,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:731,safety,log,login,731,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:740,safety,Avail,Availability,740,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:790,safety,Log,Login,790,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:873,safety,avail,available,873,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:1107,safety,review,reviewing,1107,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:1158,safety,review,reviews,1158,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:192,security,ssh,ssh,192,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:209,security,log,login,209,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:429,security,availab,available,429,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:592,security,compl,compliance,592,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:731,security,log,login,731,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:740,security,Availab,Availability,740,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:790,security,Log,Login,790,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:873,security,availab,available,873,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:83,testability,resourc,resource,83,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:209,testability,log,login,209,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:731,testability,log,login,731,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:790,testability,Log,Login,790,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:1107,testability,review,reviewing,1107,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:1158,testability,review,reviews,1158,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:1286,testability,plan,planned,1286,"> @amadio : lxplus is your counter-argument, with plenty of ttys but it's a shared resource so we must not enable IMT. Please keep trying to beat X11 as autoIMT symptom! :-). ```. epsftws ~ $ ssh lxplus. Last login: Fri Nov 6 13:54:59 2020 from 2a02:1205:c6af:f4e0:7593:da3b:ac49:b142. * ********************************************************************. * Welcome to lxplus718.cern.ch, CentOS, 7.8.2003. * Archive of news is available in /etc/motd-archive. * Reminder: you have agreed to the CERN. * computing rules, in particular OC5. CERN implements. * the measures necessary to ensure compliance. * https://cern.ch/ComputingRules. * Puppet environment: production, Roger state: production. * Foreman hostgroup: lxplus/nodes/login. * Availability zone: cern-geneva-b. * LXPLUS Public Login Service - http://lxplusdoc.web.cern.ch/. * A C8 based lxplus8.cern.ch is now available. * Tuesday November 24th lxplus6.cern.ch will terminate - http://cern.ch/go/j9cD. * ********************************************************************. lxplus ~ $ ls /tmp/.X11-unix/. X33 X38 X55 X6 X69 X7 X75 X8. ```. I'm reviewing old pull requests assigned to me or with reviews requested, etc... As you can see above, your method would enable IMT on lxplus. In any case, is this pull request still planned to be merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:22,interoperability,conflict,conflicts,22,"This PR has has merge conflicts now. @Axel-Naumann, what is the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2703:64,testability,plan,plan,64,"This PR has has merge conflicts now. @Axel-Naumann, what is the plan?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2703
https://github.com/root-project/root/pull/2704:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2704:11,deployability,build,build,11,@phsft-bot build just on slc6-i686/gcc49,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2704:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2704
https://github.com/root-project/root/pull/2705:80,deployability,build,build,80,> I'll go through the C++ source later... @bellenot and all other. It is really build test - I used very fancy forwarding of template declaration with 6 arguments. Want to be sure that it works on all platforms. On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:201,interoperability,platform,platforms,201,> I'll go through the C++ source later... @bellenot and all other. It is really build test - I used very fancy forwarding of template declaration with 6 arguments. Want to be sure that it works on all platforms. On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:265,modifiability,refact,refactor,265,> I'll go through the C++ source later... @bellenot and all other. It is really build test - I used very fancy forwarding of template declaration with 6 arguments. Want to be sure that it works on all platforms. On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:265,performance,refactor,refactor,265,> I'll go through the C++ source later... @bellenot and all other. It is really build test - I used very fancy forwarding of template declaration with 6 arguments. Want to be sure that it works on all platforms. On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:86,safety,test,test,86,> I'll go through the C++ source later... @bellenot and all other. It is really build test - I used very fancy forwarding of template declaration with 6 arguments. Want to be sure that it works on all platforms. On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:86,testability,test,test,86,> I'll go through the C++ source later... @bellenot and all other. It is really build test - I used very fancy forwarding of template declaration with 6 arguments. Want to be sure that it works on all platforms. On the meeting we should discuss how deep we want to refactor old code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2705:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -Dcxx14=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2705
https://github.com/root-project/root/pull/2706:4,availability,failur,failures,4,The failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:4,deployability,fail,failures,4,The failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:4,performance,failur,failures,4,The failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:4,reliability,fail,failures,4,The failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:117,deployability,modul,modules,117,@vgvassilev in principle this is good to merge. Would you like to go ahead or do you prefer to first investigate why modules were not working in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:117,modifiability,modul,modules,117,@vgvassilev in principle this is good to merge. Would you like to go ahead or do you prefer to first investigate why modules were not working in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:117,safety,modul,modules,117,@vgvassilev in principle this is good to merge. Would you like to go ahead or do you prefer to first investigate why modules were not working in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:85,usability,prefer,prefer,85,@vgvassilev in principle this is good to merge. Would you like to go ahead or do you prefer to first investigate why modules were not working in the first place?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:150,performance,time,time,150,"@bluehood, I'd like to do that but let's merge this PR. We are swamped by other issues at the moment. I'd prefer to come back to that when it we have time (by simply reverting locally) or what's more probable when the issue pops up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:159,testability,simpl,simply,159,"@bluehood, I'd like to do that but let's merge this PR. We are swamped by other issues at the moment. I'd prefer to come back to that when it we have time (by simply reverting locally) or what's more probable when the issue pops up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:106,usability,prefer,prefer,106,"@bluehood, I'd like to do that but let's merge this PR. We are swamped by other issues at the moment. I'd prefer to come back to that when it we have time (by simply reverting locally) or what's more probable when the issue pops up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2706:159,usability,simpl,simply,159,"@bluehood, I'd like to do that but let's merge this PR. We are swamped by other issues at the moment. I'd prefer to come back to that when it we have time (by simply reverting locally) or what's more probable when the issue pops up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2706
https://github.com/root-project/root/pull/2707:11,deployability,build,build,11,@phsft-bot build just on fedora28/native with flags -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_TYPE=Release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2707:71,deployability,Releas,Release,71,@phsft-bot build just on fedora28/native with flags -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_TYPE=Release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2707:97,deployability,Releas,Release,97,@phsft-bot build just on fedora28/native with flags -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_TYPE=Release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2707
https://github.com/root-project/root/pull/2708:133,availability,slo,slot,133,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:253,availability,slo,slower,253,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:266,availability,slo,slot,266,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:17,integrability,messag,message,17,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:17,interoperability,messag,message,17,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:206,performance,cach,cache,206,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:133,reliability,slo,slot,133,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:253,reliability,slo,slower,253,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:266,reliability,slo,slot,266,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:170,safety,safe,safe,170,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:288,safety,safe,safer,288,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:51,performance,concurren,concurrent,51,@pcanal I agree with adding the comment. Note that concurrent access to different elements of a `std::vector` is guaranteed to be safe (except for `vector<bool>`.......),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:130,safety,safe,safe,130,@pcanal I agree with adding the comment. Note that concurrent access to different elements of a `std::vector` is guaranteed to be safe (except for `vector<bool>`.......),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:136,safety,except,except,136,@pcanal I agree with adding the comment. Note that concurrent access to different elements of a `std::vector` is guaranteed to be safe (except for `vector<bool>`.......),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:62,security,access,access,62,@pcanal I agree with adding the comment. Note that concurrent access to different elements of a `std::vector` is guaranteed to be safe (except for `vector<bool>`.......),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:12,performance,concurren,concurrent,12,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:89,safety,safe,safe,89,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:23,security,access,access,23,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:126,usability,clear,clear,126,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:49,deployability,Contain,Container,49,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:192,deployability,contain,contained,192,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:243,deployability,contain,container,243,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:343,integrability,topic,topic,343,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:20,interoperability,standard,standard,20,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:176,performance,content,contents,176,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:293,performance,concurren,concurrently,293,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:538,performance,cach,cache,538,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:567,performance,concurren,concurrent,567,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:150,safety,avoid,avoid,150,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:254,safety,except,excepting,254,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:365,safety,except,excepting,365,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:395,safety,except,excepting,395,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:284,security,modif,modified,284,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:578,security,access,access,578,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:. > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:. * this is one of the main reasons why `vector<bool>` was a horrible horrible decision. * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:286,deployability,version,version,286,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:286,integrability,version,version,286,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:286,modifiability,version,version,286,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:278,testability,simpl,simpler,278,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:239,usability,close,closer,239,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:278,usability,simpl,simpler,278,"> 23.2.2 . fair enough. thanks. > switch all these vectors for std::list and see if there is any benefit. unlikely, since the 'search' for the right entry will be more costly than the cost of false sharing. (Using a vector<T**> would be a closer 'race' still likely lost to the simpler version).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:346,safety,avoid,avoid,346,"> the 'search' for the right entry will be more costly than the cost of false sharing. in our case, as each thread will always hammer the same address for the duration of a task, we could get the address at the beginning of the task (one search in a linked list of length nThreads, so not too bad) and store the address in a temporary pointer to avoid further searches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:139,energy efficiency,alloc,allocator,139,"I am not sure whether there is something actionable about the vector of pointers. The only improvement I can see is to have a cache alined allocator to avoid false sharing but when comparing to the rest, I am not sure this will be a serious advantage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:126,performance,cach,cache,126,"I am not sure whether there is something actionable about the vector of pointers. The only improvement I can see is to have a cache alined allocator to avoid false sharing but when comparing to the rest, I am not sure this will be a serious advantage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2708:152,safety,avoid,avoid,152,"I am not sure whether there is something actionable about the vector of pointers. The only improvement I can see is to have a cache alined allocator to avoid false sharing but when comparing to the rest, I am not sure this will be a serious advantage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2708
https://github.com/root-project/root/pull/2709:213,deployability,build,build,213,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:247,deployability,build,build,247,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:47,interoperability,plug,plugins,47,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:269,performance,lock,lock,269,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:269,security,lock,lock,269,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:73,usability,Command,Command,73,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:149,usability,statu,status,149,"@bellenot on windows I'm getting . ```. hudson.plugins.git.GitException: Command ""git checkout -f 4831835e28fe3f182409bea54dc61b148e1461a0"" returned status code 128:. stdout: . stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:12,deployability,build,build,12,"@dpiparo if build passes on windows, this is ready to merge as far as I'm concerned (I just need to squash the latest commit with a commit above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:74,modifiability,concern,concerned,74,"@dpiparo if build passes on windows, this is ready to merge as far as I'm concerned (I just need to squash the latest commit with a commit above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:74,testability,concern,concerned,74,"@dpiparo if build passes on windows, this is ready to merge as far as I'm concerned (I just need to squash the latest commit with a commit above)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:11,deployability,build,build,11,"@phsft-bot build on slc6/gcc48, slc6-i686/gcc49, centos7/clang39, centos7/gcc62, centos7/gcc7, fedora28/native, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2709:11,deployability,build,build,11,"@phsft-bot build also on slc6-i686/gcc49, centos7/clang39, centos7/gcc62, centos7/gcc7, fedora28/native, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2709
https://github.com/root-project/root/pull/2711:11,deployability,build,build,11,@phsft-bot build -Droot7=ON -Dcxx14=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2711:11,deployability,build,build,11,@phsft-bot build just with flags -Droot7=ON -Dcxx14=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2711:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -Dcxx14=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2711:94,deployability,fail,fails,94,@Axel-Naumann . Can we merge it? It is bug fixes and rename of WebWindow classes. Compilation fails on some platforms where C++14 is not supported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2711:108,interoperability,platform,platforms,108,@Axel-Naumann . Can we merge it? It is bug fixes and rename of WebWindow classes. Compilation fails on some platforms where C++14 is not supported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2711:94,reliability,fail,fails,94,@Axel-Naumann . Can we merge it? It is bug fixes and rename of WebWindow classes. Compilation fails on some platforms where C++14 is not supported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2711:137,usability,support,supported,137,@Axel-Naumann . Can we merge it? It is bug fixes and rename of WebWindow classes. Compilation fails on some platforms where C++14 is not supported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2711
https://github.com/root-project/root/pull/2713:157,performance,perform,performed,157,Timings reported [here](https://sft.its.cern.ch/jira/browse/ROOT-9468) show a factor 2 speedup for compilation and jitting of large snapshot calls (test was performed with 200 `int` columns).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:148,safety,test,test,148,Timings reported [here](https://sft.its.cern.ch/jira/browse/ROOT-9468) show a factor 2 speedup for compilation and jitting of large snapshot calls (test was performed with 200 `int` columns).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:148,testability,test,test,148,Timings reported [here](https://sft.its.cern.ch/jira/browse/ROOT-9468) show a factor 2 speedup for compilation and jitting of large snapshot calls (test was performed with 200 `int` columns).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:157,usability,perform,performed,157,Timings reported [here](https://sft.its.cern.ch/jira/browse/ROOT-9468) show a factor 2 speedup for compilation and jitting of large snapshot calls (test was performed with 200 `int` columns).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:46,modifiability,concern,concerned,46,@dpiparo this is ready to merge as far as I'm concerned,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2713:46,testability,concern,concerned,46,@dpiparo this is ready to merge as far as I'm concerned,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2713
https://github.com/root-project/root/pull/2715:9,availability,failur,failures,9,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:9,deployability,fail,failures,9,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:9,performance,failur,failures,9,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:9,reliability,fail,failures,9,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:4,safety,test,test,4,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2715:4,testability,test,test,4,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2715
https://github.com/root-project/root/pull/2716:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2716
https://github.com/root-project/root/pull/2716:56,deployability,patch,patch,56,"@Axel-Naumann, seems that the test is not fixed by this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2716
https://github.com/root-project/root/pull/2716:30,safety,test,test,30,"@Axel-Naumann, seems that the test is not fixed by this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2716
https://github.com/root-project/root/pull/2716:56,safety,patch,patch,56,"@Axel-Naumann, seems that the test is not fixed by this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2716
https://github.com/root-project/root/pull/2716:56,security,patch,patch,56,"@Axel-Naumann, seems that the test is not fixed by this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2716
https://github.com/root-project/root/pull/2716:30,testability,test,test,30,"@Axel-Naumann, seems that the test is not fixed by this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2716
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:0,availability,Failur,Failures,0,Failures looks unrelated.....:),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:0,deployability,Fail,Failures,0,Failures looks unrelated.....:),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:0,performance,Failur,Failures,0,Failures looks unrelated.....:),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:0,reliability,Fail,Failures,0,Failures looks unrelated.....:),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2717:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2717
https://github.com/root-project/root/pull/2720:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2720:69,availability,avail,available,69,"Rebuilding just on Windows. The `errx()` function used before is not available, replaced it with `perror()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2720:69,reliability,availab,available,69,"Rebuilding just on Windows. The `errx()` function used before is not available, replaced it with `perror()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2720:69,safety,avail,available,69,"Rebuilding just on Windows. The `errx()` function used before is not available, replaced it with `perror()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2720:69,security,availab,available,69,"Rebuilding just on Windows. The `errx()` function used before is not available, replaced it with `perror()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2720
https://github.com/root-project/root/pull/2721:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:45,safety,test,test,45,"This is due to cdash upload issue, otherwise test seems to be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2721:45,testability,test,test,45,"This is due to cdash upload issue, otherwise test seems to be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2721
https://github.com/root-project/root/pull/2722:10,availability,failur,failure,10,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:10,deployability,fail,failure,10,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:10,performance,failur,failure,10,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:10,reliability,fail,failure,10,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:5,safety,test,test,5,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2722:5,testability,test,test,5,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2722
https://github.com/root-project/root/pull/2723:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:117,availability,error,errors,117,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:108,deployability,build,building,108,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:66,performance,time,time,66,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:117,performance,error,errors,117,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:18,safety,safe,safe,18,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:117,safety,error,errors,117,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:117,usability,error,errors,117,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:64,usability,close,close,64,@xvallspl Thank you avid if you can do it. It would be great to close this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:170,availability,error,error,170,"While fixing and old bug I used TError for the early termination of the function, and clang-tidy is not picking that up... Should I unnecesarily return some double as an error code or should I just ignore clang tidy? @lmoneta @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:170,performance,error,error,170,"While fixing and old bug I used TError for the early termination of the function, and clang-tidy is not picking that up... Should I unnecesarily return some double as an error code or should I just ignore clang tidy? @lmoneta @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:170,safety,error,error,170,"While fixing and old bug I used TError for the early termination of the function, and clang-tidy is not picking that up... Should I unnecesarily return some double as an error code or should I just ignore clang tidy? @lmoneta @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:170,usability,error,error,170,"While fixing and old bug I used TError for the early termination of the function, and clang-tidy is not picking that up... Should I unnecesarily return some double as an error code or should I just ignore clang tidy? @lmoneta @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:8,performance,time,time,8,To save time - could you point me to the file / line where you use this construct?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:1,availability,Error,Error,1,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:41,availability,error,error,41,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:79,availability,error,error,79,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:47,integrability,messag,message,47,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:47,interoperability,messag,message,47,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:1,performance,Error,Error,1,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:41,performance,error,error,41,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:79,performance,error,error,79,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:8,reliability,doe,doesn,8,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:1,safety,Error,Error,1,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:41,safety,error,error,41,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:79,safety,error,error,79,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:1,usability,Error,Error,1,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:41,usability,error,error,41,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:79,usability,error,error,79,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:122,availability,Error,Error,122,"> Hah, sorry for that. I was convinced it terminated as well. The looging routine that terminates is 'Fatal' rather than 'Error'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:74,integrability,rout,routine,74,"> Hah, sorry for that. I was convinced it terminated as well. The looging routine that terminates is 'Fatal' rather than 'Error'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:122,performance,Error,Error,122,"> Hah, sorry for that. I was convinced it terminated as well. The looging routine that terminates is 'Fatal' rather than 'Error'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:122,safety,Error,Error,122,"> Hah, sorry for that. I was convinced it terminated as well. The looging routine that terminates is 'Fatal' rather than 'Error'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:122,usability,Error,Error,122,"> Hah, sorry for that. I was convinced it terminated as well. The looging routine that terminates is 'Fatal' rather than 'Error'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:190,integrability,messag,message,190,"Hi Xavi, . Can you remind me please what this PR brings in addition ? . I see a re-arrange of the functions implementing the fit methods, but in addition what else was changed ? The commits message are short",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:190,interoperability,messag,message,190,"Hi Xavi, . Can you remind me please what this PR brings in addition ? . I see a re-arrange of the functions implementing the fit methods, but in addition what else was changed ? The commits message are short",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:17,modifiability,refact,refactoring,17,It was the grand refactoring. I can just close it and come back to it maybe later if so.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:17,performance,refactor,refactoring,17,It was the grand refactoring. I can just close it and come back to it maybe later if so.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:41,usability,close,close,41,It was the grand refactoring. I can just close it and come back to it maybe later if so.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:51,deployability,build,build,51,"Don;t understand why adding a comment trigger a re-build even if the PR has a conflict. It should not do that. . A part from the re-factoring, which I agree is a nice thing to do but not urgent, do you remember if there are other fixes worth merging ? . If not maybe then it is probably better to close it. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:78,interoperability,conflict,conflict,78,"Don;t understand why adding a comment trigger a re-build even if the PR has a conflict. It should not do that. . A part from the re-factoring, which I agree is a nice thing to do but not urgent, do you remember if there are other fixes worth merging ? . If not maybe then it is probably better to close it. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:202,safety,reme,remember,202,"Don;t understand why adding a comment trigger a re-build even if the PR has a conflict. It should not do that. . A part from the re-factoring, which I agree is a nice thing to do but not urgent, do you remember if there are other fixes worth merging ? . If not maybe then it is probably better to close it. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:6,testability,understand,understand,6,"Don;t understand why adding a comment trigger a re-build even if the PR has a conflict. It should not do that. . A part from the re-factoring, which I agree is a nice thing to do but not urgent, do you remember if there are other fixes worth merging ? . If not maybe then it is probably better to close it. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2723:297,usability,close,close,297,"Don;t understand why adding a comment trigger a re-build even if the PR has a conflict. It should not do that. . A part from the re-factoring, which I agree is a nice thing to do but not urgent, do you remember if there are other fixes worth merging ? . If not maybe then it is probably better to close it. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2723
https://github.com/root-project/root/pull/2724:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2724
https://github.com/root-project/root/pull/2725:6,availability,failur,failures,6,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:6,deployability,fail,failures,6,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:6,performance,failur,failures,6,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:6,reliability,fail,failures,6,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:0,safety,Test,Tests,0,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2725:0,testability,Test,Tests,0,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2725
https://github.com/root-project/root/pull/2727:22,deployability,build,builds,22,Long term: will super builds solve this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:24,deployability,build,builds,24,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:67,deployability,build,build,67,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:109,deployability,instal,installation,109,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,deployability,depend,dependencies,213,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,integrability,depend,dependencies,213,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:498,integrability,sub,submodules,498,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,modifiability,depend,dependencies,213,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:183,reliability,doe,does,183,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,safety,depend,dependencies,213,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:338,safety,test,test,338,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:213,testability,depend,dependencies,213,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:338,testability,test,test,338,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:317,usability,support,support,317,"> Long term: will super builds solve this? Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:24,availability,failur,failure,24,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:24,deployability,fail,failure,24,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:24,performance,failur,failure,24,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:24,reliability,fail,failure,24,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:19,safety,test,test,19,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:19,testability,test,test,19,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:38,deployability,resourc,resources,38,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:51,deployability,build,building,51,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:38,energy efficiency,resourc,resources,38,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:38,performance,resourc,resources,38,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:18,safety,avoid,avoid,18,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:38,safety,resourc,resources,38,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2727:38,testability,resourc,resources,38,Deleted branch to avoid wasting infra resources on building this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2727
https://github.com/root-project/root/pull/2728:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2728
https://github.com/root-project/root/pull/2729:23,availability,Error,Errors,23,@couet @Axel-Naumann . Errors on `fedora28/native` has nothing to do with submitted code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:74,integrability,sub,submitted,74,@couet @Axel-Naumann . Errors on `fedora28/native` has nothing to do with submitted code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:23,performance,Error,Errors,23,@couet @Axel-Naumann . Errors on `fedora28/native` has nothing to do with submitted code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:23,safety,Error,Errors,23,@couet @Axel-Naumann . Errors on `fedora28/native` has nothing to do with submitted code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2729:23,usability,Error,Errors,23,@couet @Axel-Naumann . Errors on `fedora28/native` has nothing to do with submitted code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2729
https://github.com/root-project/root/pull/2731:9,availability,failur,failure,9,The only failure is fedora28/native which is due to the 'shared_ptr' incompatibility crash: https://sft.its.cern.ch/jira/browse/ROOT-9704 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:9,deployability,fail,failure,9,The only failure is fedora28/native which is due to the 'shared_ptr' incompatibility crash: https://sft.its.cern.ch/jira/browse/ROOT-9704 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:69,interoperability,incompatib,incompatibility,69,The only failure is fedora28/native which is due to the 'shared_ptr' incompatibility crash: https://sft.its.cern.ch/jira/browse/ROOT-9704 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:9,performance,failur,failure,9,The only failure is fedora28/native which is due to the 'shared_ptr' incompatibility crash: https://sft.its.cern.ch/jira/browse/ROOT-9704 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2731:9,reliability,fail,failure,9,The only failure is fedora28/native which is due to the 'shared_ptr' incompatibility crash: https://sft.its.cern.ch/jira/browse/ROOT-9704 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2731
https://github.com/root-project/root/pull/2732:50,deployability,manag,managed,50,I guess now we have to see how TThreadExecutor is managed in RDataFrame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:50,energy efficiency,manag,managed,50,I guess now we have to see how TThreadExecutor is managed in RDataFrame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:50,safety,manag,managed,50,I guess now we have to see how TThreadExecutor is managed in RDataFrame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:0,safety,Test,Test,0,Test added in https://github.com/root-project/roottest/pull/225,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:0,testability,Test,Test,0,Test added in https://github.com/root-project/roottest/pull/225,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:5,availability,failur,failure,5,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:5,deployability,fail,failure,5,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:5,performance,failur,failure,5,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:5,reliability,fail,failure,5,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:0,safety,Test,Test,0,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2732:0,testability,Test,Test,0,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2732
https://github.com/root-project/root/pull/2733:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2733
https://github.com/root-project/root/pull/2734:0,availability,failur,failures,0,failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:0,deployability,fail,failures,0,failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:0,performance,failur,failures,0,failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2734:0,reliability,fail,failures,0,failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2734
https://github.com/root-project/root/pull/2736:101,availability,slo,slow,101,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:301,availability,sli,slight,301,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:216,deployability,scale,scale,216,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:96,energy efficiency,CPU,CPU,96,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:193,energy efficiency,core,cores,193,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:216,energy efficiency,scale,scale,216,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:333,energy efficiency,core,core,333,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:348,energy efficiency,core,core,348,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:216,modifiability,scal,scale,216,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:70,performance,I/O,I/O,70,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:96,performance,CPU,CPU,96,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:183,performance,disk,disk,183,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:216,performance,scale,scale,216,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:241,performance,disk,disk,241,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:404,performance,I/O,I/O,404,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:101,reliability,slo,slow,101,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2736:301,reliability,sli,slight,301,"Why the arbitrary *hard* limit? hadd might be limited by the physical I/O (fast cloning) or the CPU (slow cloning, re-compression). For example, if I have a server with more spinning disk that cores, I might want to scale with the number of disk. Even with the usual case, one might still want to use slight more process/thread than core to try to core running while some process are waiting on physical I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2736
https://github.com/root-project/root/pull/2737:8,availability,failur,failure,8,Windows failure is not connected to my changes..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:8,deployability,fail,failure,8,Windows failure is not connected to my changes..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:8,performance,failur,failure,8,Windows failure is not connected to my changes..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:8,reliability,fail,failure,8,Windows failure is not connected to my changes..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:164,availability,down,downloading,164,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:16,deployability,configurat,configuration,16,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:48,deployability,build,build,48,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:67,deployability,build,build,67,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:83,deployability,build,build,83,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:101,deployability,build,build,101,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:132,deployability,build,build,132,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:185,deployability,build,building,185,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:16,integrability,configur,configuration,16,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:208,integrability,configur,configure,208,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:16,modifiability,configur,configuration,16,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:145,modifiability,pac,packages,145,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:208,modifiability,configur,configure,208,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:16,security,configur,configuration,16,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:208,security,configur,configure,208,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:199,testability,simpl,simple,199,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:199,usability,simpl,simple,199,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make. I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:166,safety,review,review,166,"@lmoneta and @amadio I think I resolved all your comments. Lorenzo, I created a separate PR https://github.com/root-project/root/pull/2808 as you recommended in your review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2737:166,testability,review,review,166,"@lmoneta and @amadio I think I resolved all your comments. Lorenzo, I created a separate PR https://github.com/root-project/root/pull/2808 as you recommended in your review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2737
https://github.com/root-project/root/pull/2738:11,deployability,build,build,11,@phsft-bot build just on fedora26/gcc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2738
https://github.com/root-project/root/pull/2741:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:18,availability,failur,failure,18,The windows build failure is unrelated (RDataFrame related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:12,deployability,build,build,12,The windows build failure is unrelated (RDataFrame related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:18,deployability,fail,failure,18,The windows build failure is unrelated (RDataFrame related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:18,performance,failur,failure,18,The windows build failure is unrelated (RDataFrame related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2741:18,reliability,fail,failure,18,The windows build failure is unrelated (RDataFrame related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2741
https://github.com/root-project/root/pull/2742:57,deployability,build,build,57,:) You can see it in incrementals or running: @phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:73,performance,time,time,73,"@oshadura oh it's under experimental in cdash dammit, i'll check it next time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:35,deployability,Continu,Continuous,35,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow). I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:103,deployability,build,build,103,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow). I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:181,deployability,build,buildid,181,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow). I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:318,deployability,build,builds,318,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow). I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:96,testability,simpl,simple,96,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow). I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2742:96,usability,simpl,simple,96,"@bluehood, it is in incrementals (""Continuous dashboard"") but name in CDash is just the same as simple build: master-x86_64-slc6-gcc62-opt - http://cdash.cern.ch/viewBuildError.php?buildid=571554 (I will fix anming tomorrow). I am checking in Mattermost channel for now ;) https://mattermost.web.cern.ch/root/channels/builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2742
https://github.com/root-project/root/pull/2744:106,integrability,encapsulat,encapsulated,106,Hi @bluehood : thanks for commenting about this. Indeed I was not sure myself - this is why the change is encapsulated in a separate commit. I propose to go ahead with everything but the creation of these two aliases then. Before merging I'll have to check why windows is not happy though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2744
https://github.com/root-project/root/pull/2744:106,modifiability,encapsul,encapsulated,106,Hi @bluehood : thanks for commenting about this. Indeed I was not sure myself - this is why the change is encapsulated in a separate commit. I propose to go ahead with everything but the creation of these two aliases then. Before merging I'll have to check why windows is not happy though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2744
https://github.com/root-project/root/pull/2745:0,deployability,Depend,Depends,0,Depends on PR #2795 and vgvassilev/clad#97.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:0,integrability,Depend,Depends,0,Depends on PR #2795 and vgvassilev/clad#97.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:0,modifiability,Depend,Depends,0,Depends on PR #2795 and vgvassilev/clad#97.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:0,safety,Depend,Depends,0,Depends on PR #2795 and vgvassilev/clad#97.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:0,testability,Depend,Depends,0,Depends on PR #2795 and vgvassilev/clad#97.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:4,availability,failur,failure,4,The failure is in runtime_cxxmodules mode and it is sporadic. It is not caused by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:4,deployability,fail,failure,4,The failure is in runtime_cxxmodules mode and it is sporadic. It is not caused by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:4,performance,failur,failure,4,The failure is in runtime_cxxmodules mode and it is sporadic. It is not caused by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2745:4,reliability,fail,failure,4,The failure is in runtime_cxxmodules mode and it is sporadic. It is not caused by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2745
https://github.com/root-project/root/pull/2746:5,availability,failur,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2746:5,deployability,fail,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2746:5,performance,failur,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2746:5,reliability,fail,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2746:0,safety,test,test,0,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2746:0,testability,test,test,0,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2746
https://github.com/root-project/root/pull/2747:5,availability,failur,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2747:5,deployability,fail,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2747:5,performance,failur,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2747:5,reliability,fail,failures,5,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2747:0,safety,test,test,0,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2747:0,testability,test,test,0,test failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2747
https://github.com/root-project/root/pull/2749:194,reliability,doe,does,194,@dpiparo I'm not sure how to deal with `Snapshot` of `RVec<bool>`: when we need to write it as `bool[]` we are missing a pointer to the data to pass to `TTree::Branch` since `std::vector<bool>` does not have a `data` method.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2749
https://github.com/root-project/root/pull/2749:27,safety,review,reviewed,27,@dpiparo PR is ready to be reviewed (and possibly merged),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2749
https://github.com/root-project/root/pull/2749:27,testability,review,reviewed,27,@dpiparo PR is ready to be reviewed (and possibly merged),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2749
https://github.com/root-project/root/pull/2749:29,safety,review,reviewed,29,@dpiparo I think this can be reviewed/merged independently of dictionary generation for `RVec<bool>` -- `Snapshot<RVec<bool>>` is the only thing that remains broken but `Snapshot(..)` and `Snapshot<vector<bool>>` work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2749
https://github.com/root-project/root/pull/2749:29,testability,review,reviewed,29,@dpiparo I think this can be reviewed/merged independently of dictionary generation for `RVec<bool>` -- `Snapshot<RVec<bool>>` is the only thing that remains broken but `Snapshot(..)` and `Snapshot<vector<bool>>` work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2749
https://github.com/root-project/root/pull/2751:126,deployability,patch,patch,126,"@gganis . While I agree to the comments to #2754 and will try to talk to them, . Is there a good reason you don't want _this_ patch in ROOT? I've split these into 2 PRs (one for net/alien, this one for net/netxng) for exactly that reason and I see no harm to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) in 'vanilla' ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:376,deployability,Releas,ReleaseNotes,376,"@gganis . While I agree to the comments to #2754 and will try to talk to them, . Is there a good reason you don't want _this_ patch in ROOT? I've split these into 2 PRs (one for net/alien, this one for net/netxng) for exactly that reason and I see no harm to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) in 'vanilla' ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:126,safety,patch,patch,126,"@gganis . While I agree to the comments to #2754 and will try to talk to them, . Is there a good reason you don't want _this_ patch in ROOT? I've split these into 2 PRs (one for net/alien, this one for net/netxng) for exactly that reason and I see no harm to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) in 'vanilla' ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:126,security,patch,patch,126,"@gganis . While I agree to the comments to #2754 and will try to talk to them, . Is there a good reason you don't want _this_ patch in ROOT? I've split these into 2 PRs (one for net/alien, this one for net/netxng) for exactly that reason and I see no harm to allow [XRootD local redirection](https://github.com/xrootd/xrootd/blob/8c9d0a9cc7f00cbb2db35be275c35126f3e091c0/docs/ReleaseNotes.txt#L14) in 'vanilla' ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:25,deployability,fail,failing,25,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:535,deployability,fail,fail,535,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:288,performance,parallel,parallelopen,288,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:386,performance,time,time,386,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:445,performance,time,time,445,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:25,reliability,fail,failing,25,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:535,reliability,fail,fail,535,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:15,safety,test,tests,15,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:522,security,sign,signature,522,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:15,testability,test,tests,15,"@jknedlik: the tests are failing because the new constructor is ambiguous: you should set the 'lurl' as in my example, as second argument, without default:. `. TNetXNGFile(const char *url, const char *lurl, Option_t *mode="""", const char *title="""",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);. `. otherwise the two constructors are indistinguishable when called at run time. (My suggestion for two constructors addressed a link time problem, when default values are ignored, making code expecting the old signature to fail linking).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:108,deployability,build,build,108,"Thank you for the clarification! I've changed to ctors accordingly, would be nice, if you could trigger the build again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:36,deployability,fail,fails,36,"Hm, even with your changes it still fails, because it is still unsure, if we'd want to use the new constructor or want to use the old constructor and only overwrite the Option_t or title defaults. Do you know, where Option_t is defined, and what it is? Seems like you can easily set it using a const char*.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:36,reliability,fail,fails,36,"Hm, even with your changes it still fails, because it is still unsure, if we'd want to use the new constructor or want to use the old constructor and only overwrite the Option_t or title defaults. Do you know, where Option_t is defined, and what it is? Seems like you can easily set it using a const char*.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:147,deployability,log,logical,147,"Okay, so now I have removed all defaults from the 'new' ctor that anyone would use directly from the outside, if they would want to enable using a logical url. Since there are no more defaults, it will not be ambiguous anymore. The new one will still be used through the old ctor with sane defaults in all other/prior ways anyway. Could you please trigger the build again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:360,deployability,build,build,360,"Okay, so now I have removed all defaults from the 'new' ctor that anyone would use directly from the outside, if they would want to enable using a logical url. Since there are no more defaults, it will not be ambiguous anymore. The new one will still be used through the old ctor with sane defaults in all other/prior ways anyway. Could you please trigger the build again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:147,safety,log,logical,147,"Okay, so now I have removed all defaults from the 'new' ctor that anyone would use directly from the outside, if they would want to enable using a logical url. Since there are no more defaults, it will not be ambiguous anymore. The new one will still be used through the old ctor with sane defaults in all other/prior ways anyway. Could you please trigger the build again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:147,security,log,logical,147,"Okay, so now I have removed all defaults from the 'new' ctor that anyone would use directly from the outside, if they would want to enable using a logical url. Since there are no more defaults, it will not be ambiguous anymore. The new one will still be used through the old ctor with sane defaults in all other/prior ways anyway. Could you please trigger the build again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:147,testability,log,logical,147,"Okay, so now I have removed all defaults from the 'new' ctor that anyone would use directly from the outside, if they would want to enable using a logical url. Since there are no more defaults, it will not be ambiguous anymore. The new one will still be used through the old ctor with sane defaults in all other/prior ways anyway. Could you please trigger the build again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:91,modifiability,concern,concerned,91,"Looks good, thanks for the fixes. @Axel-Naumann, @amadio: it can be merged, as far as I am concerned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:91,testability,concern,concerned,91,"Looks good, thanks for the fixes. @Axel-Naumann, @amadio: it can be merged, as far as I am concerned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:38,deployability,releas,release,38,@jknedlik could you add a line to the release notes at `README/ReleaseNotes/v618/index.md` in a separate PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2751:63,deployability,Releas,ReleaseNotes,63,@jknedlik could you add a line to the release notes at `README/ReleaseNotes/v618/index.md` in a separate PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2751
https://github.com/root-project/root/pull/2752:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2752:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2752
https://github.com/root-project/root/pull/2753:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2753:54,deployability,manag,managing,54,Thanks @pcanal . That was a mistake on my side in the managing of branches. The TTreeReader commits have of course nothing to do with this PR. I removed them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2753:54,energy efficiency,manag,managing,54,Thanks @pcanal . That was a mistake on my side in the managing of branches. The TTreeReader commits have of course nothing to do with this PR. I removed them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2753:54,safety,manag,managing,54,Thanks @pcanal . That was a mistake on my side in the managing of branches. The TTreeReader commits have of course nothing to do with this PR. I removed them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2753
https://github.com/root-project/root/pull/2754:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2754:230,deployability,patch,patch,230,"Dear jknedlik,. The agreement with Peter Hristov and Dario Berzano, early 2018, was that the code in net/alien would have been moved to AliRoot, where it pertains (and should have been from the beginning). So, before merging this patch, I think you should check with them what the situation is and provide. a roadmap for removal? G Ganis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2754:230,safety,patch,patch,230,"Dear jknedlik,. The agreement with Peter Hristov and Dario Berzano, early 2018, was that the code in net/alien would have been moved to AliRoot, where it pertains (and should have been from the beginning). So, before merging this patch, I think you should check with them what the situation is and provide. a roadmap for removal? G Ganis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2754:230,security,patch,patch,230,"Dear jknedlik,. The agreement with Peter Hristov and Dario Berzano, early 2018, was that the code in net/alien would have been moved to AliRoot, where it pertains (and should have been from the beginning). So, before merging this patch, I think you should check with them what the situation is and provide. a roadmap for removal? G Ganis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2754:101,interoperability,conflict,conflicts,101,Closing this due to inactivity for a very long time. Feel free to open a new PR (after resolving the conflicts) if you still want this merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2754:47,performance,time,time,47,Closing this due to inactivity for a very long time. Feel free to open a new PR (after resolving the conflicts) if you still want this merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2754
https://github.com/root-project/root/pull/2755:42,interoperability,platform,platform,42,"@vgvassilev for compleness sake, on which platform did you run the full roottest suite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:16,safety,compl,compleness,16,"@vgvassilev for compleness sake, on which platform did you run the full roottest suite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:16,security,compl,compleness,16,"@vgvassilev for compleness sake, on which platform did you run the full roottest suite?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build just on ubuntu16/native with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build just on ubuntu16/native with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:20,availability,failur,failure,20,"@yamaguchi1024, the failure seems related to the removal of `#include ""TObject.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:20,deployability,fail,failure,20,"@yamaguchi1024, the failure seems related to the removal of `#include ""TObject.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:20,performance,failur,failure,20,"@yamaguchi1024, the failure seems related to the removal of `#include ""TObject.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:20,reliability,fail,failure,20,"@yamaguchi1024, the failure seems related to the removal of `#include ""TObject.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:9,availability,redund,redundant,9,> Remove redundant declaration from TCling. Could you explicit where the other include are? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:9,deployability,redundan,redundant,9,> Remove redundant declaration from TCling. Could you explicit where the other include are? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:9,reliability,redundan,redundant,9,> Remove redundant declaration from TCling. Could you explicit where the other include are? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:9,safety,redund,redundant,9,> Remove redundant declaration from TCling. Could you explicit where the other include are? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:17,energy efficiency,green,greenlight,17,"@pcanal, can you greenlight this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:4,availability,error,error,4,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:164,deployability,build,build,164,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:4,performance,error,error,4,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:4,safety,error,error,4,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:89,safety,test,test,89,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:89,testability,test,test,89,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:97,testability,verif,verify,97,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:4,usability,error,error,4,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:183,testability,understand,understand,183,"Hi Axel,. I thought that unless there is a good reason for those include to stay, then they can go out. It looked that this includes are from CINT, and I thought they are outdated. I understand that for example RuntimeUniverse.h and new should be explicitly included because those are used to initialize Cling, but I didn't see the reason why ROOT should include cassert for example. So I do not have a good explanation why those includes can go out (probably I can say because it works fine without them) not knowing why they are there at the first place, but I'm also good to leave it there if there are some reasons. Also we can get 5Mbytes improvement :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:179,deployability,fail,fail,179,"The ""good reason for those includes to stay"" is that people currently have code like. ```. void foo(const string& str) {. if (strstr(str.c_str(), ""abc"") {}. }. ```. and that will fail to parse after your change. I.e. we're breaking users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:60,energy efficiency,current,currently,60,"The ""good reason for those includes to stay"" is that people currently have code like. ```. void foo(const string& str) {. if (strstr(str.c_str(), ""abc"") {}. }. ```. and that will fail to parse after your change. I.e. we're breaking users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:179,reliability,fail,fail,179,"The ""good reason for those includes to stay"" is that people currently have code like. ```. void foo(const string& str) {. if (strstr(str.c_str(), ""abc"") {}. }. ```. and that will fail to parse after your change. I.e. we're breaking users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:232,usability,user,users,232,"The ""good reason for those includes to stay"" is that people currently have code like. ```. void foo(const string& str) {. if (strstr(str.c_str(), ""abc"") {}. }. ```. and that will fail to parse after your change. I.e. we're breaking users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:94,deployability,modul,modules,94,"I see, I'm not sure if string is in PCH and maybe includes can stay for PCH, but at least for modules we know that we're loading stl and libc at startup time, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:121,energy efficiency,load,loading,121,"I see, I'm not sure if string is in PCH and maybe includes can stay for PCH, but at least for modules we know that we're loading stl and libc at startup time, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:94,modifiability,modul,modules,94,"I see, I'm not sure if string is in PCH and maybe includes can stay for PCH, but at least for modules we know that we're loading stl and libc at startup time, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:121,performance,load,loading,121,"I see, I'm not sure if string is in PCH and maybe includes can stay for PCH, but at least for modules we know that we're loading stl and libc at startup time, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:153,performance,time,time,153,"I see, I'm not sure if string is in PCH and maybe includes can stay for PCH, but at least for modules we know that we're loading stl and libc at startup time, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:94,safety,modul,modules,94,"I see, I'm not sure if string is in PCH and maybe includes can stay for PCH, but at least for modules we know that we're loading stl and libc at startup time, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:596,availability,consist,consistency,596,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:503,deployability,version,version,503,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:119,energy efficiency,optim,optimization,119,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:370,integrability,inject,injected,370,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:503,integrability,version,version,503,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:180,interoperability,compatib,compatible,180,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:503,modifiability,version,version,503,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:119,performance,optimiz,optimization,119,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:382,reliability,pra,pragma,382,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:160,safety,valid,valid,160,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:236,security,expos,exposed,236,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:370,security,inject,injected,370,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:19,usability,prefer,prefer,19,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:195,usability,user,users,195,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:596,usability,consist,consistency,596,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime. - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2755:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2755
https://github.com/root-project/root/pull/2756:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,deployability,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,integrability,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,interoperability,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,modifiability,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,reliability,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:69,safety,avoid,avoided,69,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,security,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,testability,integr,integrating,11,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2756:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2756
https://github.com/root-project/root/pull/2762:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2762
https://github.com/root-project/root/pull/2764:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2764:0,safety,Accid,Accidentally,0,Accidentally deleted the branch. I will land the PR by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2764
https://github.com/root-project/root/pull/2765:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2765:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2765
https://github.com/root-project/root/pull/2766:11,deployability,build,build,11,@phsft-bot build just on mac1014/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2766
https://github.com/root-project/root/pull/2766:11,deployability,build,build,11,@phsft-bot build just on mac1014/native.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2766
https://github.com/root-project/root/pull/2767:69,deployability,updat,update,69,Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:100,energy efficiency,current,current,100,Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:69,safety,updat,update,69,Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:69,security,updat,update,69,Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:71,deployability,updat,update,71,"> Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks. done, let me know if anything else needs to be done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:102,energy efficiency,current,current,102,"> Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks. done, let me know if anything else needs to be done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:71,safety,updat,update,71,"> Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks. done, let me know if anything else needs to be done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:71,security,updat,update,71,"> Pull requests may not have merge commits. Please use `git rebase` to update your branch relative to current master instead. Thanks. done, let me know if anything else needs to be done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2767:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2767
https://github.com/root-project/root/pull/2770:11,deployability,build,build,11,@phsft-bot build just on centos7/gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2770
https://github.com/root-project/root/pull/2770:11,deployability,build,build,11,@phsft-bot build just on mac1014/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2770
https://github.com/root-project/root/pull/2772:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:49,reliability,doe,doesn,49,"@vgvassilev Because if it was from rootcling, it doesn't do `#include ""cling/Interpreter/RuntimeUniverse.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:221,deployability,modul,modules,221,`rootcling` calls the constructor of `TCling` which in turn calls `cling::Interpreter::Interpreter` which calls `cling::Interpreter::Initialize` and includes the `RuntimeUniverse.h`. This means that before preloading any modules we have the Cling_Runtime module implicitly imported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:255,deployability,modul,module,255,`rootcling` calls the constructor of `TCling` which in turn calls `cling::Interpreter::Interpreter` which calls `cling::Interpreter::Initialize` and includes the `RuntimeUniverse.h`. This means that before preloading any modules we have the Cling_Runtime module implicitly imported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:221,modifiability,modul,modules,221,`rootcling` calls the constructor of `TCling` which in turn calls `cling::Interpreter::Interpreter` which calls `cling::Interpreter::Initialize` and includes the `RuntimeUniverse.h`. This means that before preloading any modules we have the Cling_Runtime module implicitly imported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:255,modifiability,modul,module,255,`rootcling` calls the constructor of `TCling` which in turn calls `cling::Interpreter::Interpreter` which calls `cling::Interpreter::Initialize` and includes the `RuntimeUniverse.h`. This means that before preloading any modules we have the Cling_Runtime module implicitly imported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:221,safety,modul,modules,221,`rootcling` calls the constructor of `TCling` which in turn calls `cling::Interpreter::Interpreter` which calls `cling::Interpreter::Initialize` and includes the `RuntimeUniverse.h`. This means that before preloading any modules we have the Cling_Runtime module implicitly imported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2772:255,safety,modul,module,255,`rootcling` calls the constructor of `TCling` which in turn calls `cling::Interpreter::Interpreter` which calls `cling::Interpreter::Initialize` and includes the `RuntimeUniverse.h`. This means that before preloading any modules we have the Cling_Runtime module implicitly imported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2772
https://github.com/root-project/root/pull/2773:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2773
https://github.com/root-project/root/pull/2775:40,availability,failur,failures,40,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:40,deployability,fail,failures,40,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:40,performance,failur,failures,40,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:40,reliability,fail,failures,40,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:19,safety,avoid,avoid,19,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:35,safety,test,test,35,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:35,testability,test,test,35,(rebased to try to avoid unrelated test failures in master). @pcanal - anything else?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:84,deployability,automat,automatically,84,We need a corresponding roottest PR. If you use the same branchname it will be used automatically by jenkins when rebuilding for this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:84,testability,automat,automatically,84,We need a corresponding roottest PR. If you use the same branchname it will be used automatically by jenkins when rebuilding for this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:21,testability,coverag,coverage,21,This has fairly good coverage as part of this PR. Anything else you are looking for?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:24,deployability,fail,failing,24,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:81,deployability,updat,update,81,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:24,reliability,fail,failing,24,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:5,safety,test,testForeignDraw,5,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:81,safety,updat,update,81,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:81,security,updat,update,81,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:5,testability,test,testForeignDraw,5,well testForeignDraw is failing either due to a deficiency or due to the need to update the reference file ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:69,deployability,build,build,69,"Ah - I think I understand you now. Fixed, I think. @phsft-bot please build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:15,testability,understand,understand,15,"Ah - I think I understand you now. Fixed, I think. @phsft-bot please build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:18,deployability,fail,failing,18,@pcanal - for the failing unit test: why didn't it utilize the corresponding PR in roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:18,reliability,fail,failing,18,@pcanal - for the failing unit test: why didn't it utilize the corresponding PR in roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:31,safety,test,test,31,@pcanal - for the failing unit test: why didn't it utilize the corresponding PR in roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:26,testability,unit,unit,26,@pcanal - for the failing unit test: why didn't it utilize the corresponding PR in roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:31,testability,test,test,31,@pcanal - for the failing unit test: why didn't it utilize the corresponding PR in roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:529,availability,sla,slavedict,529,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:143,deployability,log,log,143,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:514,deployability,depend,dependency,514,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:247,energy efficiency,core,core,247,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:497,integrability,messag,message,497,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:514,integrability,depend,dependency,514,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:497,interoperability,messag,message,497,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:514,modifiability,depend,dependency,514,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:269,performance,time,timeout,269,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:374,performance,time,timeout,374,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:411,performance,time,timeout,411,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:529,reliability,sla,slavedict,529,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:143,safety,log,log,143,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:269,safety,timeout,timeout,269,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:374,safety,timeout,timeout,374,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:411,safety,timeout,timeout,411,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:514,safety,depend,dependency,514,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:143,security,log,log,143,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:143,testability,log,log,143,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:514,testability,depend,dependency,514,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:. ```. Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master). > git config core.sparsecheckout # timeout=10. > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317. > git branch -a -v --no-abbrev # timeout=10. > git branch -D master # timeout=10. > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317. Commit message: ""Adding dependency for slavedict generation on masterdict"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:52,deployability,fail,failing,52,There is something weird. The roottest PR should be failing and is not and this PR is not picking up the roottest branch ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:52,reliability,fail,failing,52,There is something weird. The roottest PR should be failing and is not and this PR is not picking up the roottest branch ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:20,availability,failur,failure,20,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:20,deployability,fail,failure,20,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:63,deployability,fail,fails,63,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:45,integrability,sub,subtil,45,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:74,interoperability,platform,platforms,74,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:20,performance,failur,failure,20,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:20,reliability,fail,failure,20,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:63,reliability,fail,fails,63,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:4,safety,test,testForeignDraw,4,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:4,testability,test,testForeignDraw,4,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:91,testability,understand,understand,91,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:284,safety,test,test,284,"Hi @bbockelm,. I see next in Jenkins:. ```. 16:35:29 First, rewinding head to replay your work on top of it... 16:35:35 Applying: Propagate IO features from parent to child for TBranchElement. 16:35:35 Applying: Enable offset array generation for TLeafElement. 16:35:35 Applying: Add test cases corresponding to offset array generation. 16:35:35 Applying: Add in extra byte for the fact TLeafElement can be NULL. 16:35:35 Applying: Fix inconsistent/misleading indentation. 16:35:36 From https://github.com/bbockelm/roottest. 16:35:36 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:284,testability,test,test,284,"Hi @bbockelm,. I see next in Jenkins:. ```. 16:35:29 First, rewinding head to replay your work on top of it... 16:35:35 Applying: Propagate IO features from parent to child for TBranchElement. 16:35:35 Applying: Enable offset array generation for TLeafElement. 16:35:35 Applying: Add test cases corresponding to offset array generation. 16:35:35 Applying: Add in extra byte for the fact TLeafElement can be NULL. 16:35:35 Applying: Fix inconsistent/misleading indentation. 16:35:36 From https://github.com/bbockelm/roottest. 16:35:36 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:81,usability,help,help,81,I think it is about rebasing on master your roottest branch? @vgvassilev can you help here please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:62,deployability,build,build,62,"Oh, I can at least try rebasing the `roottest` PR! @phsft-bot build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:39,deployability,fail,failed,39,"Here roottest branch was not picked in failed builds:. ```. 17:30:22 First, rewinding head to replay your work on top of it... 17:30:24 Applying: Propagate IO features from parent to child for TBranchElement. 17:30:24 Applying: Enable offset array generation for TLeafElement. 17:30:24 Applying: Add test cases corresponding to offset array generation. 17:30:24 Applying: Add in extra byte for the fact TLeafElement can be NULL. 17:30:24 Applying: Fix inconsistent/misleading indentation. 17:30:26 From https://github.com/bbockelm/roottest. 17:30:26 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:46,deployability,build,builds,46,"Here roottest branch was not picked in failed builds:. ```. 17:30:22 First, rewinding head to replay your work on top of it... 17:30:24 Applying: Propagate IO features from parent to child for TBranchElement. 17:30:24 Applying: Enable offset array generation for TLeafElement. 17:30:24 Applying: Add test cases corresponding to offset array generation. 17:30:24 Applying: Add in extra byte for the fact TLeafElement can be NULL. 17:30:24 Applying: Fix inconsistent/misleading indentation. 17:30:26 From https://github.com/bbockelm/roottest. 17:30:26 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:39,reliability,fail,failed,39,"Here roottest branch was not picked in failed builds:. ```. 17:30:22 First, rewinding head to replay your work on top of it... 17:30:24 Applying: Propagate IO features from parent to child for TBranchElement. 17:30:24 Applying: Enable offset array generation for TLeafElement. 17:30:24 Applying: Add test cases corresponding to offset array generation. 17:30:24 Applying: Add in extra byte for the fact TLeafElement can be NULL. 17:30:24 Applying: Fix inconsistent/misleading indentation. 17:30:26 From https://github.com/bbockelm/roottest. 17:30:26 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:300,safety,test,test,300,"Here roottest branch was not picked in failed builds:. ```. 17:30:22 First, rewinding head to replay your work on top of it... 17:30:24 Applying: Propagate IO features from parent to child for TBranchElement. 17:30:24 Applying: Enable offset array generation for TLeafElement. 17:30:24 Applying: Add test cases corresponding to offset array generation. 17:30:24 Applying: Add in extra byte for the fact TLeafElement can be NULL. 17:30:24 Applying: Fix inconsistent/misleading indentation. 17:30:26 From https://github.com/bbockelm/roottest. 17:30:26 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:300,testability,test,test,300,"Here roottest branch was not picked in failed builds:. ```. 17:30:22 First, rewinding head to replay your work on top of it... 17:30:24 Applying: Propagate IO features from parent to child for TBranchElement. 17:30:24 Applying: Enable offset array generation for TLeafElement. 17:30:24 Applying: Add test cases corresponding to offset array generation. 17:30:24 Applying: Add in extra byte for the fact TLeafElement can be NULL. 17:30:24 Applying: Fix inconsistent/misleading indentation. 17:30:26 From https://github.com/bbockelm/roottest. 17:30:26 ! [rejected] leafelement_offsetarray -> bbockelm-leafelement_offsetarray (non-fast-forward). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:11,deployability,build,build,11,@phsft-bot build! The issue seems to be addressed by root-project/rootspi@6f60658,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:5,availability,failur,failure,5,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:5,deployability,fail,failure,5,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:5,performance,failur,failure,5,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:5,reliability,fail,failure,5,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:0,safety,Test,Test,0,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2775:0,testability,Test,Test,0,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2775
https://github.com/root-project/root/pull/2776:4,deployability,fail,failing,4,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:38,deployability,fail,failing,38,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:4,reliability,fail,failing,4,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:38,reliability,fail,failing,38,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:12,safety,test,tests,12,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:46,safety,test,test,46,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:12,testability,test,tests,12,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2776:46,testability,test,test,46,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2776
https://github.com/root-project/root/pull/2777:25,deployability,fail,failing,25,processExecutorH1Test is failing on master too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2777:25,reliability,fail,failing,25,processExecutorH1Test is failing on master too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2777
https://github.com/root-project/root/pull/2778:65,safety,review,review,65,@jblomer Should we add comments or would you like to wait before review?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:65,testability,review,review,65,@jblomer Should we add comments or would you like to wait before review?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:26,availability,failur,failures,26,"The ROOT-ubuntu18.04-i386 failures are ""expected"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:26,deployability,fail,failures,26,"The ROOT-ubuntu18.04-i386 failures are ""expected"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:26,performance,failur,failures,26,"The ROOT-ubuntu18.04-i386 failures are ""expected"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2778:26,reliability,fail,failures,26,"The ROOT-ubuntu18.04-i386 failures are ""expected"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2778
https://github.com/root-project/root/pull/2779:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2779
https://github.com/root-project/root/pull/2779:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2779
https://github.com/root-project/root/pull/2779:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2779
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -Dcxx14=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:330,availability,state,statemets,330,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1259,availability,slo,slow,1259,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1268,availability,down,down,1268,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1311,availability,mainten,maintenance,1311,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1293,energy efficiency,reduc,reduce,1293,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:330,integrability,state,statemets,330,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:303,interoperability,format,formatted,303,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1259,reliability,slo,slow,1259,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1311,reliability,mainten,maintenance,1311,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:80,safety,review,reviewer,80,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:80,testability,review,reviewer,80,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1335,usability,minim,minimal,1335,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:. - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly. - The code can be clang-formatted. - The copyright statemets can be made uniform. - The 70 commits are the right granularity (is the code compiling for each one of them?). - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless. - ClassDef and ClassImp are needed. - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5). - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1. - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:421,availability,state,statemets,421,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1365,availability,slo,slow,1365,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1374,availability,down,down,1374,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1417,availability,mainten,maintenance,1417,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1399,energy efficiency,reduc,reduce,1399,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:421,integrability,state,statemets,421,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1192,integrability,wrap,wrapper,1192,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:237,interoperability,format,formatting,237,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:316,interoperability,format,formatted,316,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:940,interoperability,exchang,exchanged,940,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:990,interoperability,convers,conversion,990,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1192,interoperability,wrapper,wrapper,1192,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1365,reliability,slo,slow,1365,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1417,reliability,mainten,maintenance,1417,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:366,usability,prefer,prefer,366,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:1441,usability,minim,minimal,1441,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). . > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting. Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others? > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2780:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2780
https://github.com/root-project/root/pull/2781:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2781
https://github.com/root-project/root/pull/2782:0,availability,Failur,Failure,0,Failure is pre-existent and not related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:0,deployability,Fail,Failure,0,Failure is pre-existent and not related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:0,performance,Failur,Failure,0,Failure is pre-existent and not related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2782:0,reliability,Fail,Failure,0,Failure is pre-existent and not related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2782
https://github.com/root-project/root/pull/2784:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2784
https://github.com/root-project/root/pull/2785:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:65,deployability,modul,modules,65,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:73,deployability,log,logic,73,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:96,deployability,fail,failing,96,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:65,modifiability,modul,modules,65,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:96,reliability,fail,failing,96,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:65,safety,modul,modules,65,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:73,safety,log,logic,73,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:73,security,log,logic,73,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:73,testability,log,logic,73,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2785:17,usability,progress,progress,17,"In order to make progress here, I propose to revert the excluded modules logic and `#ifdef` the failing R tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2785
https://github.com/root-project/root/pull/2786:30,deployability,fail,fails,30,processExecutorH1Test already fails in the master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2786:30,reliability,fail,fails,30,processExecutorH1Test already fails in the master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2786
https://github.com/root-project/root/pull/2787:58,deployability,fail,fails,58,processExecutorH1Test and cling_functionTemplate_testcint fails in the head v6.14 patch branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:82,deployability,patch,patch,82,processExecutorH1Test and cling_functionTemplate_testcint fails in the head v6.14 patch branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:58,reliability,fail,fails,58,processExecutorH1Test and cling_functionTemplate_testcint fails in the head v6.14 patch branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:82,safety,patch,patch,82,processExecutorH1Test and cling_functionTemplate_testcint fails in the head v6.14 patch branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2787:82,security,patch,patch,82,processExecutorH1Test and cling_functionTemplate_testcint fails in the head v6.14 patch branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2787
https://github.com/root-project/root/pull/2789:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2789
https://github.com/root-project/root/pull/2789:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2789
https://github.com/root-project/root/pull/2797:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2797
https://github.com/root-project/root/pull/2797:30,deployability,fail,failing,30,processExecutorH1Test is also failing on the master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2797
https://github.com/root-project/root/pull/2797:30,reliability,fail,failing,30,processExecutorH1Test is also failing on the master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2797
https://github.com/root-project/root/pull/2798:16,deployability,fail,fails,16,fedora28/native fails the same way on the head of the v6.14 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2798
https://github.com/root-project/root/pull/2798:60,deployability,patch,patch,60,fedora28/native fails the same way on the head of the v6.14 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2798
https://github.com/root-project/root/pull/2798:16,reliability,fail,fails,16,fedora28/native fails the same way on the head of the v6.14 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2798
https://github.com/root-project/root/pull/2798:60,safety,patch,patch,60,fedora28/native fails the same way on the head of the v6.14 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2798
https://github.com/root-project/root/pull/2798:60,security,patch,patch,60,fedora28/native fails the same way on the head of the v6.14 patch branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2798
https://github.com/root-project/root/pull/2799:148,energy efficiency,reduc,reduced,148,"> I guess if libTree_is_loaded would mean calling TInterpreter::IsLibraryLoaded, which might involve a fair amount of string comparisons. It can be reduced to a Hash lookup:. ```. auto islibTreeLoaded = TClassTable::GetDict(""TTree"") != null;. ```. (and once the answer is true, you can cache the result).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:286,performance,cach,cache,286,"> I guess if libTree_is_loaded would mean calling TInterpreter::IsLibraryLoaded, which might involve a fair amount of string comparisons. It can be reduced to a Hash lookup:. ```. auto islibTreeLoaded = TClassTable::GetDict(""TTree"") != null;. ```. (and once the answer is true, you can cache the result).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:161,security,Hash,Hash,161,"> I guess if libTree_is_loaded would mean calling TInterpreter::IsLibraryLoaded, which might involve a fair amount of string comparisons. It can be reduced to a Hash lookup:. ```. auto islibTreeLoaded = TClassTable::GetDict(""TTree"") != null;. ```. (and once the answer is true, you can cache the result).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:57,deployability,contain,contains,57,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:218,integrability,sub,subclasses,218,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:397,integrability,inject,inject,397,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:182,modifiability,inherit,inheritance,182,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:245,modifiability,inherit,inherit,245,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:397,security,inject,inject,397,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:169,usability,behavi,behaviour,169,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2799:213,usability,user,user,213,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2799
https://github.com/root-project/root/pull/2800:14,availability,failur,failures,14,"Merged, since failures are not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:14,deployability,fail,failures,14,"Merged, since failures are not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:14,performance,failur,failures,14,"Merged, since failures are not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:14,reliability,fail,failures,14,"Merged, since failures are not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:26,deployability,depend,dependencies,26,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:50,deployability,modul,modules,50,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:26,integrability,depend,dependencies,26,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:26,modifiability,depend,dependencies,26,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:50,modifiability,modul,modules,50,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:26,safety,depend,dependencies,26,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:50,safety,modul,modules,50,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2800:26,testability,depend,dependencies,26,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2800
https://github.com/root-project/root/pull/2802:112,deployability,depend,dependency,112,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:112,integrability,depend,dependency,112,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:112,modifiability,depend,dependency,112,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:34,safety,avoid,avoid,34,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:112,safety,depend,dependency,112,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:112,testability,depend,dependency,112,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:88,deployability,DEPEND,DEPENDENCIES,88,"@pcanal I removed, I think CMakelist was not ""correct"" from beginning (was LIBRARIES vs DEPENDENCIES)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:88,integrability,DEPEND,DEPENDENCIES,88,"@pcanal I removed, I think CMakelist was not ""correct"" from beginning (was LIBRARIES vs DEPENDENCIES)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:88,modifiability,DEPEND,DEPENDENCIES,88,"@pcanal I removed, I think CMakelist was not ""correct"" from beginning (was LIBRARIES vs DEPENDENCIES)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:88,safety,DEPEND,DEPENDENCIES,88,"@pcanal I removed, I think CMakelist was not ""correct"" from beginning (was LIBRARIES vs DEPENDENCIES)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:88,testability,DEPEND,DEPENDENCIES,88,"@pcanal I removed, I think CMakelist was not ""correct"" from beginning (was LIBRARIES vs DEPENDENCIES)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:144,deployability,depend,dependencies,144,"> Well ... libPyROOT will still need to be linked against libCore at least ... I left linking part the same how it was before, but changed only dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:144,integrability,depend,dependencies,144,"> Well ... libPyROOT will still need to be linked against libCore at least ... I left linking part the same how it was before, but changed only dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:144,modifiability,depend,dependencies,144,"> Well ... libPyROOT will still need to be linked against libCore at least ... I left linking part the same how it was before, but changed only dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:144,safety,depend,dependencies,144,"> Well ... libPyROOT will still need to be linked against libCore at least ... I left linking part the same how it was before, but changed only dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:144,testability,depend,dependencies,144,"> Well ... libPyROOT will still need to be linked against libCore at least ... I left linking part the same how it was before, but changed only dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,deployability,DEPEND,DEPENDENCIES,0,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:69,deployability,depend,dependency,69,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:133,deployability,depend,dependencies,133,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,integrability,DEPEND,DEPENDENCIES,0,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:69,integrability,depend,dependency,69,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:133,integrability,depend,dependencies,133,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,modifiability,DEPEND,DEPENDENCIES,0,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:69,modifiability,depend,dependency,69,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:133,modifiability,depend,dependencies,133,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,safety,DEPEND,DEPENDENCIES,0,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:50,safety,except,except,50,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:69,safety,depend,dependency,69,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:133,safety,depend,dependencies,133,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,testability,DEPEND,DEPENDENCIES,0,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:69,testability,depend,dependency,69,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:133,testability,depend,dependencies,133,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:177,testability,understand,understand,177,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:29,deployability,build,build,29,Testing a fix for cxxmodules build in #2809.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,safety,Test,Testing,0,Testing a fix for cxxmodules build in #2809.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2802:0,testability,Test,Testing,0,Testing a fix for cxxmodules build in #2809.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2802
https://github.com/root-project/root/pull/2803:134,availability,slo,slower,134,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:45,deployability,depend,dependent,45,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:45,integrability,depend,dependent,45,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:45,modifiability,depend,dependent,45,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:339,performance,network,network,339,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:134,reliability,slo,slower,134,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:45,safety,depend,dependent,45,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:339,security,network,network,339,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:45,testability,depend,dependent,45,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2803:558,usability,user,users,558,"~~Only problem so far:The runtime is heavily dependent on pulling the data from the source. eospublic.cern.ch+xrootd seems to be even slower than root.cern.ch+davix. A full run on my laptop takes about 15min to 30min (why this fluctuates so much?) compared to about 40s having the files locally.~~. ~~Edit: Probaly it was an issue with my network connection? This run took only 2min. I'll investigate further.~~. Edit: Everything is fine. From different machines it takes with proper connection (from CERN and KIT) about 2min to process to 7GB. However, for users with poor internet connection, it may take a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2803
https://github.com/root-project/root/pull/2804:90,availability,error,error,90,"Hi,. good idea! :D . We could do better than the STL and give an informative compile time error when `data` is called on vector<bool>. We have the required sfinae magic already in place for RAction::PartialResult. The specialization for RAdoptAllocator<bool> might be useless at this point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:85,performance,time,time,85,"Hi,. good idea! :D . We could do better than the STL and give an informative compile time error when `data` is called on vector<bool>. We have the required sfinae magic already in place for RAction::PartialResult. The specialization for RAdoptAllocator<bool> might be useless at this point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:90,performance,error,error,90,"Hi,. good idea! :D . We could do better than the STL and give an informative compile time error when `data` is called on vector<bool>. We have the required sfinae magic already in place for RAction::PartialResult. The specialization for RAdoptAllocator<bool> might be useless at this point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:90,safety,error,error,90,"Hi,. good idea! :D . We could do better than the STL and give an informative compile time error when `data` is called on vector<bool>. We have the required sfinae magic already in place for RAction::PartialResult. The specialization for RAdoptAllocator<bool> might be useless at this point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:90,usability,error,error,90,"Hi,. good idea! :D . We could do better than the STL and give an informative compile time error when `data` is called on vector<bool>. We have the required sfinae magic already in place for RAction::PartialResult. The specialization for RAdoptAllocator<bool> might be useless at this point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:688,modifiability,scenario,scenarios,688,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to? The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:164,safety,compl,completely,164,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to? The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:164,security,compl,completely,164,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to? The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:854,testability,simpl,simplification,854,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to? The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:346,usability,behavi,behaviour,346,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to? The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:854,usability,simpl,simplification,854,"Hi @bluehood , we could indeed be even better than the STL, I agree. In my opinion here the root of all evil is the vector<bool> specialisation which is de facto a completely different class than vector<T> :( We are just paying the consequences of this asymmetry. Said that, let's dive in the things we can change :). I am hesitant to change the behaviour of data. Can there be cases where the instantiation of RVec<bool>(or vector<bool>)::data() takes place and then is not used, i.e. cases where it is better to be able to instantiate the method rather than not to? The clean-up RAdoptAllocator can also be done: it is working though and it was not for free. In general I could imagine scenarios where it is better to be able to instantiate vector<bool, RAdoptAllocator<bool>> than not to be... but again this is has to be balanced against the overall simplification of the code base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:53,deployability,upgrad,upgrade,53,"I take the responsibility to merge this long awaited upgrade. We can polish without any problem the code for the Release, we have time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:113,deployability,Releas,Release,113,"I take the responsibility to merge this long awaited upgrade. We can polish without any problem the code for the Release, we have time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:11,modifiability,responsibil,responsibility,11,"I take the responsibility to merge this long awaited upgrade. We can polish without any problem the code for the Release, we have time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:53,modifiability,upgrad,upgrade,53,"I take the responsibility to merge this long awaited upgrade. We can polish without any problem the code for the Release, we have time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2804:130,performance,time,time,130,"I take the responsibility to merge this long awaited upgrade. We can polish without any problem the code for the Release, we have time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2804
https://github.com/root-project/root/pull/2806:89,deployability,patch,patches,89,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,deployability,log,logs,210,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:89,safety,patch,patches,89,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,safety,log,logs,210,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:89,security,patch,patches,89,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,security,log,logs,210,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,testability,log,logs,210,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:16,deployability,build,build,16,@phsft-bot just build with flags -Dbuiltin_zlib=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_zlib=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,deployability,updat,updated,210,"@pcanal I reported on the meeting that in case of zlib without SIMD acceleration (it is in case of i686, Windows, Mac and for gcc compiler less then 4.9.0) we see increase of size of file by 5% more, but using updated CRC calculation we have 30 % improvement in speed. In case of SIMD acceleration (all other cases), we have improvement in size of file - 4% less and speed up around 70-80%. . `compression setting = 101 expected compressed TTree size = 1254957 actual size = 1239527`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,safety,updat,updated,210,"@pcanal I reported on the meeting that in case of zlib without SIMD acceleration (it is in case of i686, Windows, Mac and for gcc compiler less then 4.9.0) we see increase of size of file by 5% more, but using updated CRC calculation we have 30 % improvement in speed. In case of SIMD acceleration (all other cases), we have improvement in size of file - 4% less and speed up around 70-80%. . `compression setting = 101 expected compressed TTree size = 1254957 actual size = 1239527`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:210,security,updat,updated,210,"@pcanal I reported on the meeting that in case of zlib without SIMD acceleration (it is in case of i686, Windows, Mac and for gcc compiler less then 4.9.0) we see increase of size of file by 5% more, but using updated CRC calculation we have 30 % improvement in speed. In case of SIMD acceleration (all other cases), we have improvement in size of file - 4% less and speed up around 70-80%. . `compression setting = 101 expected compressed TTree size = 1254957 actual size = 1239527`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:26,availability,ping,ping,26,"I will prepare it, I will ping you when I will be ready :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_zlib=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2806:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_zlib=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2806
https://github.com/root-project/root/pull/2807:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_lz4=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:6,availability,failur,failure,6,The 2 failure seems unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:6,deployability,fail,failure,6,The 2 failure seems unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:6,performance,failur,failure,6,The 2 failure seems unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2807:6,reliability,fail,failure,6,The 2 failure seems unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2807
https://github.com/root-project/root/pull/2808:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2808:35,safety,review,reviewed,35,@amadio I believe this was already reviewed by you as part of PR #2737.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2808:35,testability,review,reviewed,35,@amadio I believe this was already reviewed by you as part of PR #2737.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2808:87,deployability,version,version,87,"For me it is fine to remove these old Makefiles. There are not used anymore in the new version, so it is highly possible that they do not work anymore. . They will stay anyway in the history. Please go ahead and merge this PR. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2808:87,integrability,version,version,87,"For me it is fine to remove these old Makefiles. There are not used anymore in the new version, so it is highly possible that they do not work anymore. . They will stay anyway in the history. Please go ahead and merge this PR. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2808:87,modifiability,version,version,87,"For me it is fine to remove these old Makefiles. There are not used anymore in the new version, so it is highly possible that they do not work anymore. . They will stay anyway in the history. Please go ahead and merge this PR. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2808
https://github.com/root-project/root/pull/2809:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2809
https://github.com/root-project/root/pull/2811:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2811
https://github.com/root-project/root/pull/2812:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2812:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2812
https://github.com/root-project/root/pull/2813:23,performance,tune,tune,23,Probably we could fine-tune the description and the comments? I'm open for comments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2813
https://github.com/root-project/root/pull/2815:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2815
https://github.com/root-project/root/pull/2815:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2815
https://github.com/root-project/root/pull/2815:4,safety,test,tests,4,All tests now are passing (not passing were disabled),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2815
https://github.com/root-project/root/pull/2815:4,testability,test,tests,4,All tests now are passing (not passing were disabled),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2815
https://github.com/root-project/root/pull/2815:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2815
https://github.com/root-project/root/pull/2816:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2816
https://github.com/root-project/root/pull/2816:11,deployability,build,build,11,@phsft-bot build -Dcxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2816
https://github.com/root-project/root/pull/2816:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2816
https://github.com/root-project/root/pull/2817:178,energy efficiency,charg,charge,178,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:277,energy efficiency,Adapt,Adapting,277,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:61,integrability,Event,Events,61,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:277,integrability,Adapt,Adapting,277,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:277,interoperability,Adapt,Adapting,277,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:277,modifiability,Adapt,Adapting,277,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:290,safety,test,test,290,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2817:290,testability,test,test,290,Very nice! That's how it looks for the dimuon example:. ```. Events with exactly two muons: pass=33370298 all=66128870 -- eff=50.46 % cumulative eff=50.46 %. Muons with opposite charge: pass=25794885 all=33370298 -- eff=77.30 % cumulative eff=39.01 %. ```. Only missing piece: Adapting the test expectation to the new output strings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2817
https://github.com/root-project/root/pull/2818:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2818
https://github.com/root-project/root/pull/2825:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2825
https://github.com/root-project/root/pull/2826:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:19,deployability,fail,failed,19,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:19,reliability,fail,failed,19,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:14,safety,test,test,14,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:54,safety,test,testing,54,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:14,testability,test,test,14,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2826:54,testability,test,testing,54,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2826
https://github.com/root-project/root/pull/2827:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62 with flags -Dcxxmodules=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2827
https://github.com/root-project/root/pull/2827:11,deployability,build,build,11,"@phsft-bot build on slc6/gcc48, slc6/gcc62, slc6-i686/gcc49, centos7/clang39, centos7/gcc62, centos7/gcc7, fedora28/native, ubuntu16/native, mac1013/native, windows10/vc15 with flags -Dccache=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2827
https://github.com/root-project/root/pull/2827:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2827
https://github.com/root-project/root/pull/2829:107,integrability,messag,message,107,"Hi Attila, to link commits to a JIRA issue, it's enough to just add the issue name somewhere in the commit message. I usually add `Fixes ROOT-NNNN` to the end of the message. That's already enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:166,integrability,messag,message,166,"Hi Attila, to link commits to a JIRA issue, it's enough to just add the issue name somewhere in the commit message. I usually add `Fixes ROOT-NNNN` to the end of the message. That's already enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:107,interoperability,messag,message,107,"Hi Attila, to link commits to a JIRA issue, it's enough to just add the issue name somewhere in the commit message. I usually add `Fixes ROOT-NNNN` to the end of the message. That's already enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:166,interoperability,messag,message,166,"Hi Attila, to link commits to a JIRA issue, it's enough to just add the issue name somewhere in the commit message. I usually add `Fixes ROOT-NNNN` to the end of the message. That's already enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:104,deployability,updat,update,104,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:123,deployability,version,version,123,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:337,energy efficiency,draw,drawbacks,337,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:123,integrability,version,version,123,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:285,interoperability,standard,standard,285,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:123,modifiability,version,version,123,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:34,safety,review,reviewers,34,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:104,safety,updat,update,104,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:183,safety,reme,remember,183,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:104,security,updat,update,104,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:34,testability,review,reviewers,34,"@krasznaa I added @dpiparo to the reviewers. I think it would be best to fix the Vdt issue upstream and update the builtin version of it in ROOT. The fix for Davix is fine as is, but remember that the same would be needed for libuuid, openssl, etc, if you try to pick them up from non-standard locations in the future. That's one of the drawbacks of having builtins as they are now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:329,safety,input,input,329,"😕 Davix already receives the location of `libuuid` and `openssl` explicitly. https://github.com/root-project/root/blob/master/builtins/davix/CMakeLists.txt#L22-L24. The only thing that was left out was the location of `libxml2`. Which this PR should address. Yes, the ""VDT thing"" is a lot less elegant. So I'll wait for Danilo's input.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:329,usability,input,input,329,"😕 Davix already receives the location of `libuuid` and `openssl` explicitly. https://github.com/root-project/root/blob/master/builtins/davix/CMakeLists.txt#L22-L24. The only thing that was left out was the location of `libxml2`. Which this PR should address. Yes, the ""VDT thing"" is a lot less elegant. So I'll wait for Danilo's input.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:246,availability,down,down,246,"Hi @dpiparo,. I was trying to see if it would be easy to contribute to the VDT source. But apparently not. 😦. As far as I could find (http://lcginfo.cern.ch/pkg/vdt/), the code is maintained on: . https://svnweb.cern.ch/trac/vdt But that site is down at the moment. And in any case, shouldn't that code have moved to git a while ago? Unfortunately I didn't find it on gitlab.cern.ch, so at this point I'm not sure where the code sits these days... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:180,modifiability,maintain,maintained,180,"Hi @dpiparo,. I was trying to see if it would be easy to contribute to the VDT source. But apparently not. 😦. As far as I could find (http://lcginfo.cern.ch/pkg/vdt/), the code is maintained on: . https://svnweb.cern.ch/trac/vdt But that site is down at the moment. And in any case, shouldn't that code have moved to git a while ago? Unfortunately I didn't find it on gitlab.cern.ch, so at this point I'm not sure where the code sits these days... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2829:180,safety,maintain,maintained,180,"Hi @dpiparo,. I was trying to see if it would be easy to contribute to the VDT source. But apparently not. 😦. As far as I could find (http://lcginfo.cern.ch/pkg/vdt/), the code is maintained on: . https://svnweb.cern.ch/trac/vdt But that site is down at the moment. And in any case, shouldn't that code have moved to git a while ago? Unfortunately I didn't find it on gitlab.cern.ch, so at this point I'm not sure where the code sits these days... Cheers,. Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2829
https://github.com/root-project/root/pull/2830:0,deployability,Automat,Automatic,0,Automatic builder will not detect problem. I merge it and @couet will try it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2830
https://github.com/root-project/root/pull/2830:10,deployability,build,builder,10,Automatic builder will not detect problem. I merge it and @couet will try it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2830
https://github.com/root-project/root/pull/2830:27,safety,detect,detect,27,Automatic builder will not detect problem. I merge it and @couet will try it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2830
https://github.com/root-project/root/pull/2830:27,security,detect,detect,27,Automatic builder will not detect problem. I merge it and @couet will try it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2830
https://github.com/root-project/root/pull/2830:0,testability,Automat,Automatic,0,Automatic builder will not detect problem. I merge it and @couet will try it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2830
https://github.com/root-project/root/pull/2833:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2833
https://github.com/root-project/root/pull/2834:8,deployability,fail,fails,8,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:64,deployability,build,build,64,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:122,performance,lock,lock,122,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:8,reliability,fail,fails,8,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:122,security,lock,lock,122,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:46,deployability,version,version,46,The processExecutorH1Test is due to the Davix version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:46,integrability,version,version,46,The processExecutorH1Test is due to the Davix version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:46,modifiability,version,version,46,The processExecutorH1Test is due to the Davix version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:69,deployability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:69,integrability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:69,modifiability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:69,safety,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:69,testability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2834:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2834
https://github.com/root-project/root/pull/2835:8,deployability,fail,fails,8,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:64,deployability,build,build,64,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:122,performance,lock,lock,122,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:8,reliability,fail,fails,8,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:122,security,lock,lock,122,Windows fails due to:. ```. stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/index.lock': File exists. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:46,deployability,version,version,46,The processExecutorH1Test is due to the Davix version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:46,integrability,version,version,46,The processExecutorH1Test is due to the Davix version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:46,modifiability,version,version,46,The processExecutorH1Test is due to the Davix version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:69,deployability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:69,integrability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:69,modifiability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:69,safety,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2835:69,testability,depend,dependency,69,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2835
https://github.com/root-project/root/pull/2836:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:47,availability,error,errors,47,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:11,deployability,build,build,11,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:28,deployability,fail,fail,28,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:47,performance,error,errors,47,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:59,performance,time,time,59,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:28,reliability,fail,fail,28,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:47,safety,error,errors,47,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:47,usability,error,errors,47,@phsft-bot build! And don't fail with spurious errors this time ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2836:76,deployability,releas,release,76,"Good bot! @lmoneta I think this is ready to be merged now. (Well, after the release maybe.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2836
https://github.com/root-project/root/pull/2837:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2837:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2837
https://github.com/root-project/root/pull/2838:48,deployability,modul,modulemap,48,"This pr is outdated, we should use the original modulemap but that will happen in future in a new pr.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2838:48,modifiability,modul,modulemap,48,"This pr is outdated, we should use the original modulemap but that will happen in future in a new pr.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2838:48,safety,modul,modulemap,48,"This pr is outdated, we should use the original modulemap but that will happen in future in a new pr.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2838
https://github.com/root-project/root/pull/2840:11,deployability,build,build,11,@phsft-bot build only on mac1013/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2840
https://github.com/root-project/root/pull/2840:11,deployability,build,build,11,@phsft-bot build just on mac1013/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2840
https://github.com/root-project/root/pull/2844:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2844
https://github.com/root-project/root/pull/2845:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2845
https://github.com/root-project/root/pull/2848:4,availability,failur,failure,4,The failure in projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is unusual and possibly introduced by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:4,deployability,fail,failure,4,The failure in projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is unusual and possibly introduced by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:4,performance,failur,failure,4,The failure in projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is unusual and possibly introduced by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:4,reliability,fail,failure,4,The failure in projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is unusual and possibly introduced by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:66,availability,failur,failure,66,"I didn't see 258d5c41f042dc260adfd24d5d51906a9c326236 , ""Triggers failure of roottest/root/meta/cmsUnload that we need to debug first."" We need to debug first.. ;D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:66,deployability,fail,failure,66,"I didn't see 258d5c41f042dc260adfd24d5d51906a9c326236 , ""Triggers failure of roottest/root/meta/cmsUnload that we need to debug first."" We need to debug first.. ;D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:66,performance,failur,failure,66,"I didn't see 258d5c41f042dc260adfd24d5d51906a9c326236 , ""Triggers failure of roottest/root/meta/cmsUnload that we need to debug first."" We need to debug first.. ;D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2848:66,reliability,fail,failure,66,"I didn't see 258d5c41f042dc260adfd24d5d51906a9c326236 , ""Triggers failure of roottest/root/meta/cmsUnload that we need to debug first."" We need to debug first.. ;D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2848
https://github.com/root-project/root/pull/2851:11,deployability,build,build,11,@phsft-bot build just on mac1013/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2851:11,deployability,build,build,11,@phsft-bot build just on mac1013/native with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2851:11,deployability,build,build,11,@phsft-bot build just on mac1013/native with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2851:11,deployability,build,build,11,@phsft-bot build just on mac1013/native with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2851
https://github.com/root-project/root/pull/2852:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:8,deployability,patch,patch,8,"Ah this patch is doing essentially the same thing as #2848, so we have to fix this cmsUnload test first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:8,safety,patch,patch,8,"Ah this patch is doing essentially the same thing as #2848, so we have to fix this cmsUnload test first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:93,safety,test,test,93,"Ah this patch is doing essentially the same thing as #2848, so we have to fix this cmsUnload test first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:8,security,patch,patch,8,"Ah this patch is doing essentially the same thing as #2848, so we have to fix this cmsUnload test first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:93,testability,test,test,93,"Ah this patch is doing essentially the same thing as #2848, so we have to fix this cmsUnload test first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1250,availability,failur,failure,1250,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1417,availability,avail,available,1417,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1453,availability,error,error,1453,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1161,deployability,fail,fails,1161,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1250,deployability,fail,failure,1250,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1293,deployability,unload,unloads,1293,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1761,deployability,modul,modules,1761,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1785,deployability,fail,fail,1785,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1793,deployability,unload,unload,1793,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1141,energy efficiency,Current,Currently,1141,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1460,modifiability,variab,variable,1460,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1761,modifiability,modul,modules,1761,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1250,performance,failur,failure,1250,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1453,performance,error,error,1453,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1161,reliability,fail,fails,1161,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1250,reliability,fail,failure,1250,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1417,reliability,availab,available,1417,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1785,reliability,fail,fail,1785,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1156,safety,test,test,1156,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1417,safety,avail,available,1417,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1453,safety,error,error,1453,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1761,safety,modul,modules,1761,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1853,safety,reme,remember,1853,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1883,safety,test,testing,1883,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1973,safety,test,test,1973,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1992,safety,compl,complete,1992,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1417,security,availab,available,1417,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1992,security,compl,complete,1992,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2,testability,simpl,simpler,2,"A simpler reproducer:. ```bash. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1156,testability,test,test,1156,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1883,testability,test,testing,1883,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1973,testability,test,test,1973,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2,usability,simpl,simpler,2,"A simpler reproducer:. ```bash. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:265,usability,undo,undo,265,"A simpler reproducer:. ```bash. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1271,usability,behavi,behavior,1271,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1453,usability,error,error,1453,"h. cd ./roottest/root/meta/cmsUnload/. make cleantest V=1. cat scripts/case3.script. ```. ```cpp. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. ```bash. root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script. ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ^. ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there? PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:665,availability,failur,failure,665,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:769,availability,state,state,769,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:41,deployability,modul,modules,41,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:65,deployability,fail,fail,65,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:73,deployability,unload,unload,73,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:206,deployability,unload,unloading,206,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:665,deployability,fail,failure,665,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1270,deployability,modul,modules,1270,"he vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1427,deployability,modul,module,1427,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2122,deployability,rollback,rollback,2122,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2229,deployability,roll,rolled,2229,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:769,integrability,state,state,769,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:41,modifiability,modul,modules,41,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1270,modifiability,modul,modules,1270,"he vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1427,modifiability,modul,module,1427,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:166,performance,memor,memory,166,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:665,performance,failur,failure,665,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2265,performance,cach,caches,2265,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:65,reliability,fail,fail,65,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:665,reliability,fail,failure,665,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1255,reliability,doe,does,1255,"erialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2122,reliability,rollback,rollback,2122,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:41,safety,modul,modules,41,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:315,safety,test,test,315,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:334,safety,compl,complete,334,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:583,safety,compl,completely,583,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1270,safety,modul,modules,1270,"he vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1427,safety,modul,module,1427,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1658,safety,reme,remember,1658,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1688,safety,test,testing,1688,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1709,safety,test,testing,1709,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:334,security,compl,complete,334,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:583,security,compl,completely,583,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1994,security,Auth,Author,1994,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2122,security,rollback,rollback,2122,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:315,testability,test,test,315,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:852,testability,simpl,simplified,852,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1688,testability,test,testing,1688,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1709,testability,test,testing,1709,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:166,usability,memor,memory,166,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:191,usability,behavi,behavior,191,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:456,usability,behavi,behavior,456,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:500,usability,behavi,behavior,500,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:563,usability,behavi,behavior,563,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:686,usability,behavi,behavior,686,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:743,usability,undo,undo,743,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:852,usability,simpl,simplified,852,". > My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1016,usability,undo,undo,1016,"s that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1633,usability,undo,undo,1633,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1745,usability,undo,undo,1745,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1809,usability,support,support,1809,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:1865,usability,undo,undo,1865,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2100,usability,undo,undo,2100,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:2255,usability,clear,clear,2255,"e mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . Marker m2;. gInterpreter->AutoParse(""SiStripCluster"");. .undo 2. SiStripCluster obj;. ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```. struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. .L lib/libStrip.so . SiStripCluster obj;. ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there? It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:. ```. commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms). Author: Philippe Canal <pcanal@fnal.gov>. Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback. . For each autoparse record to under which transaction it is being done. If this transaction is. rolled back, make sure to clear the caches that noted that this autoparsing had be done. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:24,safety,review,reviews,24,That's [D53925](https://reviews.llvm.org/D53925).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:24,testability,review,reviews,24,That's [D53925](https://reviews.llvm.org/D53925).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:5,reliability,doe,does,5,What does D53925 addresses? [There is two problem seen here which may or may not be related],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:28,availability,failur,failure,28,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,availability,failur,failure,130,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:28,deployability,fail,failure,28,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:53,deployability,modul,modules,53,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,deployability,fail,failure,130,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:337,deployability,fail,failing,337,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:358,deployability,unload,unload,358,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:404,deployability,modul,modules,404,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:655,deployability,unload,unloading,655,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:784,energy efficiency,load,loaded,784,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:53,modifiability,modul,modules,53,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:404,modifiability,modul,modules,404,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:28,performance,failur,failure,28,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,performance,failur,failure,130,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:784,performance,load,loaded,784,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:28,reliability,fail,failure,28,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,reliability,fail,failure,130,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:337,reliability,fail,failing,337,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:733,reliability,doe,doesn,733,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:53,safety,modul,modules,53,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:125,safety,test,test,125,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:404,safety,modul,modules,404,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:715,safety,compl,complains,715,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:715,security,compl,complains,715,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:125,testability,test,test,125,"@pcanal . Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:276,availability,error,error,276,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:79,deployability,unload,unloading,79,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:914,deployability,unload,unloading,914,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:208,energy efficiency,load,loaded,208,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:283,modifiability,variab,variable,283,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:208,performance,load,loaded,208,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:276,performance,error,error,276,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:157,reliability,doe,doesn,157,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:228,reliability,doe,does,228,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:692,reliability,doe,does,692,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:839,reliability,doe,does,839,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:889,reliability,doe,does,889,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:139,safety,compl,complains,139,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:276,safety,error,error,276,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:139,security,compl,complains,139,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:788,testability,understand,understanding,788,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:276,usability,error,error,276,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:807,usability,behavi,behavior,807,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:931,usability,effectiv,effective,931,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:. ```. ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough? thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:56,deployability,unload,unloading,56,"Hi Philippe,. I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading? ```. // root/meta/cmsUnload/scripts/case3.script. .L lib/libStrip.so . Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . .undo 3. ```. .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:148,deployability,unload,unloading,148,"Hi Philippe,. I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading? ```. // root/meta/cmsUnload/scripts/case3.script. .L lib/libStrip.so . Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . .undo 3. ```. .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:354,reliability,doe,does,354,"Hi Philippe,. I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading? ```. // root/meta/cmsUnload/scripts/case3.script. .L lib/libStrip.so . Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . .undo 3. ```. .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:30,testability,understand,understand,30,"Hi Philippe,. I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading? ```. // root/meta/cmsUnload/scripts/case3.script. .L lib/libStrip.so . Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . .undo 3. ```. .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:302,usability,undo,undo,302,"Hi Philippe,. I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading? ```. // root/meta/cmsUnload/scripts/case3.script. .L lib/libStrip.so . Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . .undo 3. ```. .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:341,usability,undo,undo,341,"Hi Philippe,. I think I don't understand anything about unloading. What is ` (redo of the) autoloading`? Are we ""re dlsym()""ing all libraries after unloading? ```. // root/meta/cmsUnload/scripts/case3.script. .L lib/libStrip.so . Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . .undo 3. ```. .L lib/libStrip.so is not undo ed, but does it needs to be reloaded or something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:571,availability,state,state,571,"Hi Vassil,. In this example the library is not unloaded. However the 3 transaction. ```. 1) m1 declaration. 2) m2 declaration. 3) lexing, parsing, etc. of the headers related to 'SiStripCluster' (aka AutoParsing). ```. after the 'undo' the declarations introduced by the 'headers related to SiStripCluster' are (should be) removed from the AST. Upon redoing the action whether it is explicity:. ```. Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . ```. or implicitly. ```. Marker m1; . Marker m2; . SiStripCluster obj;. ```. we need to end up in a state where the declarations introduced by the 'headers related to SiStripCluster' are (back) into the AST. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:47,deployability,unload,unloaded,47,"Hi Vassil,. In this example the library is not unloaded. However the 3 transaction. ```. 1) m1 declaration. 2) m2 declaration. 3) lexing, parsing, etc. of the headers related to 'SiStripCluster' (aka AutoParsing). ```. after the 'undo' the declarations introduced by the 'headers related to SiStripCluster' are (should be) removed from the AST. Upon redoing the action whether it is explicity:. ```. Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . ```. or implicitly. ```. Marker m1; . Marker m2; . SiStripCluster obj;. ```. we need to end up in a state where the declarations introduced by the 'headers related to SiStripCluster' are (back) into the AST. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:571,integrability,state,state,571,"Hi Vassil,. In this example the library is not unloaded. However the 3 transaction. ```. 1) m1 declaration. 2) m2 declaration. 3) lexing, parsing, etc. of the headers related to 'SiStripCluster' (aka AutoParsing). ```. after the 'undo' the declarations introduced by the 'headers related to SiStripCluster' are (should be) removed from the AST. Upon redoing the action whether it is explicity:. ```. Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . ```. or implicitly. ```. Marker m1; . Marker m2; . SiStripCluster obj;. ```. we need to end up in a state where the declarations introduced by the 'headers related to SiStripCluster' are (back) into the AST. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:230,usability,undo,undo,230,"Hi Vassil,. In this example the library is not unloaded. However the 3 transaction. ```. 1) m1 declaration. 2) m2 declaration. 3) lexing, parsing, etc. of the headers related to 'SiStripCluster' (aka AutoParsing). ```. after the 'undo' the declarations introduced by the 'headers related to SiStripCluster' are (should be) removed from the AST. Upon redoing the action whether it is explicity:. ```. Marker m1; . Marker m2; . gInterpreter->AutoParse(""SiStripCluster""); . ```. or implicitly. ```. Marker m1; . Marker m2; . SiStripCluster obj;. ```. we need to end up in a state where the declarations introduced by the 'headers related to SiStripCluster' are (back) into the AST. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:446,availability,error,error,446,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:56,deployability,fail,failing,56,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:67,deployability,unload,unload,67,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:106,deployability,fail,fails,106,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:453,modifiability,variab,variable,453,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:446,performance,error,error,446,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:56,reliability,fail,failing,56,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:106,reliability,fail,fails,106,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:446,safety,error,error,446,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:341,usability,undo,undo,341,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:446,usability,error,error,446,"The problem was not even AutoParsing, it was that we're failing to unload any function. For example, this fails:. ```. root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };. root [1] .L lib/libEdm.so. root [2] .L lib/libStrip.so. root [3] Marker m1;. root [4] Marker m2;. root [5] Marker(). (Marker) @0x559ab2f03100. root [6] .undo 3. root [7] SiStripCluster *s; . root [8] SiStripCluster obj; . SiStripCluster. ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'. SiStripCluster obj;. ^. libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'. class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;. ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:5,availability,failur,failure,5,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,availability,error,error,130,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:5,deployability,fail,failure,5,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:33,deployability,fail,failing,33,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:54,deployability,unload,unload,54,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:100,deployability,modul,modules,100,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:379,deployability,unload,unloading,379,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:100,modifiability,modul,modules,100,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:5,performance,failur,failure,5,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,performance,error,error,130,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:5,reliability,fail,failure,5,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:33,reliability,fail,failing,33,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:100,safety,modul,modules,100,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,safety,error,error,130,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:185,safety,review,review,185,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:201,safety,review,reviews,201,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:272,safety,review,reviews,272,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:343,safety,reme,remember,343,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:185,testability,review,review,185,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:201,testability,review,reviews,201,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:272,testability,review,reviews,272,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:130,usability,error,error,130,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2852:314,usability,close,close,314,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2852
https://github.com/root-project/root/pull/2853:51,safety,test,test,51,"In addition, it would be good to have some sort of test (in tree/tree/test or in roottest) for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2853:70,safety,test,test,70,"In addition, it would be good to have some sort of test (in tree/tree/test or in roottest) for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2853:51,testability,test,test,51,"In addition, it would be good to have some sort of test (in tree/tree/test or in roottest) for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2853:70,testability,test,test,70,"In addition, it would be good to have some sort of test (in tree/tree/test or in roottest) for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2853:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2853:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2853
https://github.com/root-project/root/pull/2854:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:36,deployability,upgrad,upgrade,36,@yamaguchi1024 @oshadura could this upgrade be applied to PyROOT too? @etejedor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:36,modifiability,upgrad,upgrade,36,@yamaguchi1024 @oshadura could this upgrade be applied to PyROOT too? @etejedor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:107,deployability,modul,modules,107,@dpiparo I see PyROOT is manually loading libMathCore in ROOT.py. Yes I think we don't have to do this for modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:34,energy efficiency,load,loading,34,@dpiparo I see PyROOT is manually loading libMathCore in ROOT.py. Yes I think we don't have to do this for modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:107,modifiability,modul,modules,107,@dpiparo I see PyROOT is manually loading libMathCore in ROOT.py. Yes I think we don't have to do this for modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:34,performance,load,loading,34,@dpiparo I see PyROOT is manually loading libMathCore in ROOT.py. Yes I think we don't have to do this for modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:107,safety,modul,modules,107,@dpiparo I see PyROOT is manually loading libMathCore in ROOT.py. Yes I think we don't have to do this for modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:182,deployability,modul,modules,182,"HI @yamaguchi1024 I believe you refer to [this line](https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L753) in PyROOT, can you also add there a check for the modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:102,interoperability,bind,bindings,102,"HI @yamaguchi1024 I believe you refer to [this line](https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L753) in PyROOT, can you also add there a check for the modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:102,modifiability,bind,bindings,102,"HI @yamaguchi1024 I believe you refer to [this line](https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L753) in PyROOT, can you also add there a check for the modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:182,modifiability,modul,modules,182,"HI @yamaguchi1024 I believe you refer to [this line](https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L753) in PyROOT, can you also add there a check for the modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:182,safety,modul,modules,182,"HI @yamaguchi1024 I believe you refer to [this line](https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L753) in PyROOT, can you also add there a check for the modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:48,deployability,modul,modules,48,"Do we perhaps have a way to detect the usage of modules at runtime? ""gROOT->HasModules()""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:48,modifiability,modul,modules,48,"Do we perhaps have a way to detect the usage of modules at runtime? ""gROOT->HasModules()""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:28,safety,detect,detect,28,"Do we perhaps have a way to detect the usage of modules at runtime? ""gROOT->HasModules()""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:48,safety,modul,modules,48,"Do we perhaps have a way to detect the usage of modules at runtime? ""gROOT->HasModules()""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:28,security,detect,detect,28,"Do we perhaps have a way to detect the usage of modules at runtime? ""gROOT->HasModules()""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:46,availability,reliab,reliable,46,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:432,availability,reliab,reliable,432,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:444,availability,reliab,reliable,444,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:210,deployability,modul,module,210,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:348,deployability,modul,modules,348,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:395,deployability,API,API,395,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:453,deployability,API,API,453,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:679,deployability,modul,module,679,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:230,energy efficiency,load,load,230,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:664,energy efficiency,load,loading,664,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:395,integrability,API,API,395,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:453,integrability,API,API,453,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:395,interoperability,API,API,395,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:453,interoperability,API,API,453,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:210,modifiability,modul,module,210,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:348,modifiability,modul,modules,348,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:679,modifiability,modul,module,679,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:230,performance,load,load,230,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:664,performance,load,loading,664,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:46,reliability,reliab,reliable,46,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:432,reliability,reliab,reliable,432,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:444,reliability,reliab,reliable,444,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:62,safety,detect,detect,62,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:117,safety,detect,detect,117,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:210,safety,modul,module,210,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:348,safety,modul,modules,348,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:679,safety,modul,module,679,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:62,security,detect,detect,62,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:117,security,detect,detect,117,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:22,availability,failur,failure,22,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:22,deployability,fail,failure,22,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:180,energy efficiency,load,loading,180,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:353,energy efficiency,Load,Load,353,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:22,performance,failur,failure,22,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:180,performance,load,loading,180,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:353,performance,Load,Load,353,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:22,reliability,fail,failure,22,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:5,safety,test,testSpecFuncSiCi,5,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:5,testability,test,testSpecFuncSiCi,5,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like. ```. if (isACLiC). fInterpreter->Load(""libMathCore.so""). ```. in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:11,deployability,build,build,11,@phsft-bot build. This is good to go,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,deployability,Depend,Depends,0,Depends on #2915. Could you rebase against?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,integrability,Depend,Depends,0,Depends on #2915. Could you rebase against?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,modifiability,Depend,Depends,0,Depends on #2915. Could you rebase against?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,safety,Depend,Depends,0,Depends on #2915. Could you rebase against?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,testability,Depend,Depends,0,Depends on #2915. Could you rebase against?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,availability,Failur,Failures,0,Failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,deployability,Fail,Failures,0,Failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:20,deployability,infrastructur,infrastructure,20,Failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,performance,Failur,Failures,0,Failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2854:0,reliability,Fail,Failures,0,Failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2854
https://github.com/root-project/root/pull/2856:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2856
https://github.com/root-project/root/pull/2856:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2856
https://github.com/root-project/root/pull/2856:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2856
https://github.com/root-project/root/pull/2857:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:126,modifiability,variab,variables,126,"HI Paul, . Thank you very much for the fix. It looks fine to me. . It would be just nice to have a test for this with integer variables with a large range",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:99,safety,test,test,99,"HI Paul, . Thank you very much for the fix. It looks fine to me. . It would be just nice to have a test for this with integer variables with a large range",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:99,testability,test,test,99,"HI Paul, . Thank you very much for the fix. It looks fine to me. . It would be just nice to have a test for this with integer variables with a large range",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2857:69,usability,statu,status,69,closing all my cern related PRs as won't-pursue-anymore w/o checking status,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2857
https://github.com/root-project/root/pull/2859:175,availability,slo,sloc,175,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:191,availability,slo,sloc,191,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:321,availability,slo,sloc,321,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16797,availability,slo,sloc,16797,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17670,availability,slo,sloc,17670,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:29,deployability,patch,patch,29,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:431,deployability,build,builds,431,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:695,deployability,build,builds,695,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:973,deployability,build,builds,973,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:1813,deployability,build,builds,1813,"ALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578073786c8 <col:49, col:74>. `-ReturnStmt 0x5578073786b0 <col:51, col:58>. `-ImplicitCastExpr 0x557807378698 <col:58> 'Double_t':'double' <LValueToRValue>. `-MemberExpr 0x557807378660 <col:58> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. `-CXXThisExpr 0x557807374918 <col:58> 'const class TMVA::IPruneTool *' this. CXXMethodDecl 0x55780736e7a8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:94:7, col:60> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetAutomatic 'void (void)' inline. `-CompoundStmt 0x5578073787a0 <col:35, col:60>. `-BinaryOperator 0x557807378778 <col:37, col:55> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807378740 <col:37> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807378728 <col:37> 'c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:2396,deployability,build,builds,2396,"pr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578073786c8 <col:49, col:74>. `-ReturnStmt 0x5578073786b0 <col:51, col:58>. `-ImplicitCastExpr 0x557807378698 <col:58> 'Double_t':'double' <LValueToRValue>. `-MemberExpr 0x557807378660 <col:58> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. `-CXXThisExpr 0x557807374918 <col:58> 'const class TMVA::IPruneTool *' this. CXXMethodDecl 0x55780736e7a8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:94:7, col:60> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetAutomatic 'void (void)' inline. `-CompoundStmt 0x5578073787a0 <col:35, col:60>. `-BinaryOperator 0x557807378778 <col:37, col:55> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807378740 <col:37> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807378728 <col:37> 'class TMVA::IPruneTool *' this. `-UnaryOperator 0x557807378708 <col:54, col:55> 'double' prefix '-'. `-FloatingLiteral 0x5578073786e8 <col:55> 'double' 1.000000e+00. CXXMethodDecl 0x55780736e868 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:95:7, col:74> col:21 imported in TMVA.TMVA/IPruneTool.h hidden IsAutomatic 'Bool_t (void) const' inline. `-CompoundStmt 0x557807378888 <col:42, col:74>. `-ReturnStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Do",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:3037,deployability,build,builds,3037,"0x5578073786b0 <col:51, col:58>. `-ImplicitCastExpr 0x557807378698 <col:58> 'Double_t':'double' <LValueToRValue>. `-MemberExpr 0x557807378660 <col:58> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. `-CXXThisExpr 0x557807374918 <col:58> 'const class TMVA::IPruneTool *' this. CXXMethodDecl 0x55780736e7a8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:94:7, col:60> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetAutomatic 'void (void)' inline. `-CompoundStmt 0x5578073787a0 <col:35, col:60>. `-BinaryOperator 0x557807378778 <col:37, col:55> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807378740 <col:37> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807378728 <col:37> 'class TMVA::IPruneTool *' this. `-UnaryOperator 0x557807378708 <col:54, col:55> 'double' prefix '-'. `-FloatingLiteral 0x5578073786e8 <col:55> 'double' 1.000000e+00. CXXMethodDecl 0x55780736e868 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:95:7, col:74> col:21 imported in TMVA.TMVA/IPruneTool.h hidden IsAutomatic 'Bool_t (void) const' inline. `-CompoundStmt 0x557807378888 <col:42, col:74>. `-ReturnStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-Flo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:3792,deployability,build,builds,3792,"807378728 <col:37> 'class TMVA::IPruneTool *' this. `-UnaryOperator 0x557807378708 <col:54, col:55> 'double' prefix '-'. `-FloatingLiteral 0x5578073786e8 <col:55> 'double' 1.000000e+00. CXXMethodDecl 0x55780736e868 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:95:7, col:74> col:21 imported in TMVA.TMVA/IPruneTool.h hidden IsAutomatic 'Bool_t (void) const' inline. `-CompoundStmt 0x557807378888 <col:42, col:74>. `-ReturnStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,deployability,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,deployability,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4631,deployability,build,builds,4631,"Literal 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced result 'class cling::Value' callinit. | `-ExprWithCleanups 0x55780793f2e0 <col:13, col:67> 'class cling::Value'. | `-CXXConstructExpr 0x55780793f0c8 <col:13, col:67> 'class c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:7800,deployability,depend,dependent,7800,"DynamicExprInfo *' <LValueToRValue>. | | `-DeclRefExpr 0x55780793eb18 <col:54> 'class cling::runtime::internal::DynamicExprInfo *' lvalue ParmVar 0x55780793e5f8 'ExprInfo' 'class cling::runtime::internal::DynamicExprInfo *'. | `-ImplicitCastExpr 0x55780793eb00 <col:64> 'clang::DeclContext *' <LValueToRValue>. | `-DeclRefExpr 0x55780793ead8 <col:64> 'clang::DeclContext *' lvalue ParmVar 0x55780793e670 'DC' 'clang::DeclContext *'. |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>. | |-<<<NULL>>>. | |-<<<NULL>>>. | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'. | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8. | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>. | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>. | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'. | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue. | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | `-<<<NULL>>>. `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>. `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'. CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'. |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'. | `-ImplicitCastExpr 0x5578079",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:8228,deployability,build,builds,8228,"xt *'. |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>. | |-<<<NULL>>>. | |-<<<NULL>>>. | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'. | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8. | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>. | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>. | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'. | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue. | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | `-<<<NULL>>>. `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>. `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'. CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'. |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'. | `-ImplicitCastExpr 0x557807944e50 <col:17, col:23> 'const union cling::Value::Storage' lvalue <NoOp>. | `-MemberExpr 0x557807944e18 <col:17, col:23> 'union cling::Value::Storage' lvalue .m_Storage 0x557807944c50. | `-DeclRefExpr 0x557807944df0 <col:17> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. |-CXXCtorInitializer Field 0x5578079450f8 'm_StorageType' 'enum cling::Value::EStorageType'. | `-ImplicitCastExpr 0x5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:10938,deployability,build,builds,10938,"557807945300 'm_Interpreter' 'class cling::Interpreter *'. | `-ImplicitCastExpr 0x5578079453b8 <col:43, col:49> 'class cling::Interpreter *' <LValueToRValue>. | `-MemberExpr 0x557807945380 <col:43, col:49> 'class cling::Interpreter *' lvalue .m_Interpreter 0x557807945300. | `-DeclRefExpr 0x557807945358 <col:43> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11255,deployability,depend,dependent,11255," cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11337,deployability,depend,dependent,11337,"mpoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11597,deployability,build,builds,11597,"0f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807945b20 <col:5> 'union cling::Value::Storage' 'void (void) noexcept'. |-CXXCtorInitializer Field 0x5578079450f8 'm_StorageType' 'enum cling::Value::EStorageType'. | `-ImplicitCastExpr 0x557807945c70 <line:162:21> 'enum cling::Value::ESt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:13459,deployability,build,builds,13459,"x5578079450f8 'm_StorageType' 'enum cling::Value::EStorageType'. | `-ImplicitCastExpr 0x557807945c70 <line:162:21> 'enum cling::Value::EStorageType' <LValueToRValue>. | `-DeclRefExpr 0x557807945c48 <col:21> 'enum cling::Value::EStorageType' lvalue ParmVar 0x55780793fe58 'stType' 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x5578079451f8 'm_Type' 'void *'. | `-ImplicitCastExpr 0x557807945cd8 <line:163:14> 'void *' <LValueToRValue>. | `-DeclRefExpr 0x557807945cb0 <col:14> 'void *' lvalue ParmVar 0x55780793fd60 'QualTypeAsOpaquePtr' 'void *'. |-CXXCtorInitializer Field 0x557807945300 'm_Interpreter' 'class cling::Interpreter *'. | `-UnaryOperator 0x557807945d40 <line:164:21, col:22> 'class cling::Interpreter *' prefix '&'. | `-DeclRefExpr 0x557807945d18 <col:22> 'class cling::Interpreter' lvalue ParmVar 0x55780793fde0 'Interp' 'class cling::Interpreter &'. `-CompoundStmt 0x557807945d88 <col:30, line:165:5>. CXXConstructorDecl 0x55780793ff20 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:169:5, line:171:31> line:169:5 imported in Cling_Runtime_Extra.Value.h hidden Value 'void (void)'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807945dc0 <col:5> 'union cling::Value::Storage' 'void (void) noexcept'. |-CXXCtorInitializer Field 0x5578079450f8 'm_StorageType' 'enum cling::Value::EStorageType'. | `-DeclRefExpr 0x557807945e18 <line:170:21> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x5578079451f8 'm_Type' 'void *'. | `-ImplicitCastExpr 0x557807945e80 <col:47> 'void *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x557807945e68 <col:47> 'nullptr_t'. |-CXXCtorInitializer Field 0x557807945300 'm_Interpreter' 'class cling::Interpreter *'. | `-ImplicitCastExpr 0x557807945ed8 <line:171:21> 'class cling::Interpreter *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x55",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:14604,deployability,build,builds,14604,"(void)'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807945dc0 <col:5> 'union cling::Value::Storage' 'void (void) noexcept'. |-CXXCtorInitializer Field 0x5578079450f8 'm_StorageType' 'enum cling::Value::EStorageType'. | `-DeclRefExpr 0x557807945e18 <line:170:21> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x5578079451f8 'm_Type' 'void *'. | `-ImplicitCastExpr 0x557807945e80 <col:47> 'void *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x557807945e68 <col:47> 'nullptr_t'. |-CXXCtorInitializer Field 0x557807945300 'm_Interpreter' 'class cling::Interpreter *'. | `-ImplicitCastExpr 0x557807945ed8 <line:171:21> 'class cling::Interpreter *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x557807945ec0 <col:21> 'nullptr_t'. `-CompoundStmt 0x557807945f18 <col:30, col:31>. CXXConstructorDecl 0x557807944ea8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used constexpr Storage 'void (const union cling::Value::Storage &) noexcept' inline default trivial. |-ParmVarDecl 0x557807945020 <col:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden 'const union cling::Value::Storage &'. `-CompoundStmt 0x557807945f30 <col:11>. CXXConstructorDecl 0x557807945b58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used Storage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-Retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:15065,deployability,build,builds,15065,"lizer Field 0x5578079451f8 'm_Type' 'void *'. | `-ImplicitCastExpr 0x557807945e80 <col:47> 'void *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x557807945e68 <col:47> 'nullptr_t'. |-CXXCtorInitializer Field 0x557807945300 'm_Interpreter' 'class cling::Interpreter *'. | `-ImplicitCastExpr 0x557807945ed8 <line:171:21> 'class cling::Interpreter *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x557807945ec0 <col:21> 'nullptr_t'. `-CompoundStmt 0x557807945f18 <col:30, col:31>. CXXConstructorDecl 0x557807944ea8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used constexpr Storage 'void (const union cling::Value::Storage &) noexcept' inline default trivial. |-ParmVarDecl 0x557807945020 <col:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden 'const union cling::Value::Storage &'. `-CompoundStmt 0x557807945f30 <col:11>. CXXConstructorDecl 0x557807945b58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used Storage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:15349,deployability,build,builds,15349,"Expr 0x557807945ed8 <line:171:21> 'class cling::Interpreter *' <NullToPointer>. | `-CXXNullPtrLiteralExpr 0x557807945ec0 <col:21> 'nullptr_t'. `-CompoundStmt 0x557807945f18 <col:30, col:31>. CXXConstructorDecl 0x557807944ea8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used constexpr Storage 'void (const union cling::Value::Storage &) noexcept' inline default trivial. |-ParmVarDecl 0x557807945020 <col:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden 'const union cling::Value::Storage &'. `-CompoundStmt 0x557807945f30 <col:11>. CXXConstructorDecl 0x557807945b58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used Storage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16018,deployability,build,builds,16018,"l 0x557807945b58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used Storage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,deployability,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16890,deployability,build,builds,16890,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,deployability,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16096,energy efficiency,Core,Core,16096,"ling/Interpreter/Value.h:44:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used Storage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16972,energy efficiency,Core,Core,16972,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,integrability,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,integrability,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:7800,integrability,depend,dependent,7800,"DynamicExprInfo *' <LValueToRValue>. | | `-DeclRefExpr 0x55780793eb18 <col:54> 'class cling::runtime::internal::DynamicExprInfo *' lvalue ParmVar 0x55780793e5f8 'ExprInfo' 'class cling::runtime::internal::DynamicExprInfo *'. | `-ImplicitCastExpr 0x55780793eb00 <col:64> 'clang::DeclContext *' <LValueToRValue>. | `-DeclRefExpr 0x55780793ead8 <col:64> 'clang::DeclContext *' lvalue ParmVar 0x55780793e670 'DC' 'clang::DeclContext *'. |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>. | |-<<<NULL>>>. | |-<<<NULL>>>. | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'. | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8. | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>. | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>. | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'. | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue. | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | `-<<<NULL>>>. `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>. `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'. CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'. |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'. | `-ImplicitCastExpr 0x5578079",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11255,integrability,depend,dependent,11255," cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11337,integrability,depend,dependent,11337,"mpoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,integrability,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,integrability,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,interoperability,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,interoperability,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,interoperability,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,interoperability,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,modifiability,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,modifiability,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:7800,modifiability,depend,dependent,7800,"DynamicExprInfo *' <LValueToRValue>. | | `-DeclRefExpr 0x55780793eb18 <col:54> 'class cling::runtime::internal::DynamicExprInfo *' lvalue ParmVar 0x55780793e5f8 'ExprInfo' 'class cling::runtime::internal::DynamicExprInfo *'. | `-ImplicitCastExpr 0x55780793eb00 <col:64> 'clang::DeclContext *' <LValueToRValue>. | `-DeclRefExpr 0x55780793ead8 <col:64> 'clang::DeclContext *' lvalue ParmVar 0x55780793e670 'DC' 'clang::DeclContext *'. |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>. | |-<<<NULL>>>. | |-<<<NULL>>>. | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'. | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8. | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>. | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>. | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'. | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue. | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | `-<<<NULL>>>. `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>. `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'. CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'. |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'. | `-ImplicitCastExpr 0x5578079",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11255,modifiability,depend,dependent,11255," cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11337,modifiability,depend,dependent,11337,"mpoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,modifiability,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,modifiability,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:175,reliability,slo,sloc,175,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:191,reliability,slo,sloc,191,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:321,reliability,slo,sloc,321,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,reliability,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,reliability,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,reliability,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16797,reliability,slo,sloc,16797,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,reliability,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17670,reliability,slo,sloc,17670,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:29,safety,patch,patch,29,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:7800,safety,depend,dependent,7800,"DynamicExprInfo *' <LValueToRValue>. | | `-DeclRefExpr 0x55780793eb18 <col:54> 'class cling::runtime::internal::DynamicExprInfo *' lvalue ParmVar 0x55780793e5f8 'ExprInfo' 'class cling::runtime::internal::DynamicExprInfo *'. | `-ImplicitCastExpr 0x55780793eb00 <col:64> 'clang::DeclContext *' <LValueToRValue>. | `-DeclRefExpr 0x55780793ead8 <col:64> 'clang::DeclContext *' lvalue ParmVar 0x55780793e670 'DC' 'clang::DeclContext *'. |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>. | |-<<<NULL>>>. | |-<<<NULL>>>. | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'. | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8. | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>. | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>. | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'. | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue. | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | `-<<<NULL>>>. `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>. `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'. CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'. |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'. | `-ImplicitCastExpr 0x5578079",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11255,safety,depend,dependent,11255," cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11337,safety,depend,dependent,11337,"mpoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:29,security,patch,patch,29,"@yamaguchi1024 fyi with this patch we send only those interesting declaration to the consumer:. ```. root.exe -l -b -q 2 >out.txt. CXXConstructorDecl 0x5578066339e0 <<invalid sloc>> <invalid sloc> imported implicit used __va_list_tag 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557806c24e70 <<invalid sloc>>. CXXDestructorDecl 0x5578072ee208 parent 0x5578072ee358 prev 0x5578072ee2b0 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:112:4, col:39> col:23 imported in TMVA.TMVA/IPruneTool.h hidden used ~IPruneTool 'void (void) noexcept' inline. `-CompoundStmt 0x557807340290 <col:38, col:39>. VarDecl 0x55780736e338 </home/vvassilev/workspace/builds/root_runtime_modules/include/RtypesCore.h:88:1, col:23> col:14 imported in ROOT_Rtypes.RtypesCore.h hidden used kFALSE 'const Bool_t':'const _Bool' cinit. `-CXXBoolLiteralExpr 0x55780736e398 <col:23> '_Bool' false. CXXMethodDecl 0x55780736e4c8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:88:7, col:80> col:19 imported in TMVA.TMVA/IPruneTool.h hidden SetPruneStrength 'void (Double_t)' inline. |-ParmVarDecl 0x55780736e5e0 <col:37, col:46> col:46 imported in TMVA.TMVA/IPruneTool.h hidden used alpha 'Double_t':'double'. `-CompoundStmt 0x5578073748f8 <col:54, col:80>. `-BinaryOperator 0x5578073748d0 <col:56, col:73> 'Double_t':'double' lvalue '='. |-MemberExpr 0x557807374898 <col:56> 'Double_t':'double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x557807374880 <col:56> 'class TMVA::IPruneTool *' this. `-ImplicitCastExpr 0x557807374868 <col:73> 'Double_t':'double' <LValueToRValue>. `-DeclRefExpr 0x557807374840 <col:73> 'Double_t':'double' lvalue ParmVar 0x55780736e5e0 'alpha' 'Double_t':'double'. CXXMethodDecl 0x55780736e688 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:90:7, col:74> col:23 imported in TMVA.TMVA/IPruneTool.h hidden GetPruneStrength 'Double_t (void) const' inline. `-CompoundStmt 0x5578",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,security,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,security,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16122,security,Hash,Hash,16122,"4:11> col:11 imported in Cling_Runtime_Extra.Value.h hidden implicit used Storage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780799944",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16198,security,Hash,Hash,16198,"orage 'void (void) noexcept' inline default trivial. `-CompoundStmt 0x557807945f48 <col:11>. CXXMethodDecl 0x5578079460b8 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-Implicit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,security,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16570,security,Hash,Hash,16570,"78079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x55",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16997,security,Hash,Hash,16997,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17065,security,Hash,Hash,17065,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,security,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17437,security,Hash,Hash,17437,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4242,testability,Integr,IntegralToFloating,4242,"nStmt 0x557807378870 <col:44, col:69>. `-BinaryOperator 0x557807378848 <col:51, col:69> '_Bool' '<='. |-ImplicitCastExpr 0x557807378830 <col:51> 'Double_t':'double' <LValueToRValue>. | `-MemberExpr 0x5578073787f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:4451,testability,Integr,IntegralToFloating,4451,"7f8 <col:51> 'const Double_t':'const double' lvalue ->fPruneStrength 0x557807340370. | `-CXXThisExpr 0x5578073787e0 <col:51> 'const class TMVA::IPruneTool *' this. `-FloatingLiteral 0x5578073787c0 <col:69> 'double' 0.000000e+00. CXXConstructorDecl 0x557807373968 parent 0x5578072ee358 prev 0x55780736d5e8 </home/vvassilev/workspace/builds/root_runtime_modules/include/TMVA/IPruneTool.h:107:4, line:111:11> line:107:23 imported in TMVA.TMVA/IPruneTool.h hidden IPruneTool 'void (void)' inline. |-CXXCtorInitializer Field 0x557807340370 'fPruneStrength' 'Double_t':'double'. | `-FloatingLiteral 0x5578073788c0 <line:108:22> 'double' 0.000000e+00. |-CXXCtorInitializer Field 0x557807340468 'S' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378928 <line:109:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378908 <col:9> 'int' 0. |-CXXCtorInitializer Field 0x5578073404c8 'B' 'Double_t':'double'. | `-ImplicitCastExpr 0x557807378988 <line:110:9> 'Double_t':'double' <IntegralToFloating>. | `-IntegerLiteral 0x557807378968 <col:9> 'int' 0. `-CompoundStmt 0x5578073789c8 <line:111:10, col:11>. FunctionDecl 0x55780793d918 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:50:5, line:58:5> line:50:7 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden EvaluateT 'T (class cling::runtime::internal::DynamicExprInfo *, clang::DeclContext *)'. |-ParmVarDecl 0x55780793e5f8 <col:17, col:34> col:34 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ExprInfo 'class cling::runtime::internal::DynamicExprInfo *'. |-ParmVarDecl 0x55780793e670 <col:44, col:64> col:64 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced DC 'clang::DeclContext *'. `-CompoundStmt 0x55780793f840 <col:69, line:58:5>. |-DeclStmt 0x55780793f828 <line:51:7, col:68>. | `-VarDecl 0x55780793ea78 <col:7, col:67> col:13 imported in Cling_Runtime.DynamicLookupRuntimeUniverse.h hidden referenced ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:7800,testability,depend,dependent,7800,"DynamicExprInfo *' <LValueToRValue>. | | `-DeclRefExpr 0x55780793eb18 <col:54> 'class cling::runtime::internal::DynamicExprInfo *' lvalue ParmVar 0x55780793e5f8 'ExprInfo' 'class cling::runtime::internal::DynamicExprInfo *'. | `-ImplicitCastExpr 0x55780793eb00 <col:64> 'clang::DeclContext *' <LValueToRValue>. | `-DeclRefExpr 0x55780793ead8 <col:64> 'clang::DeclContext *' lvalue ParmVar 0x55780793e670 'DC' 'clang::DeclContext *'. |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>. | |-<<<NULL>>>. | |-<<<NULL>>>. | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'. | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8. | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>. | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>. | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'. | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue. | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'. | `-<<<NULL>>>. `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>. `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'. CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'. |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'. | `-ImplicitCastExpr 0x5578079",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11073,testability,simpl,simplisticCastAs,11073," <LValueToRValue>. | `-MemberExpr 0x557807945380 <col:43, col:49> 'class cling::Interpreter *' lvalue .m_Interpreter 0x557807945300. | `-DeclRefExpr 0x557807945358 <col:43> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11255,testability,depend,dependent,11255," cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11337,testability,depend,dependent,11337,"mpoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'. |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'. |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'. | `-CX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:16401,testability,Integr,IntegralCast,16401,"ookupLifetimeHandler.h:78:7, col:50> col:13 imported in Cling_Runtime_Extra.DynamicLookupLifetimeHandler.h hidden getMemory 'void *(void) const'. `-CompoundStmt 0x5578079462d8 <col:31, col:50>. `-ReturnStmt 0x5578079462c0 <col:33, col:40>. `-ImplicitCastExpr 0x5578079462a8 <col:40> 'void *' <LValueToRValue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:17268,testability,Integr,IntegralCast,17268,"alue>. `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210. `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this. Warning in <TApplication::GetOptions>: macro 2 not found. CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x55780795e398 <col:34, col:57>. `-ReturnStmt 0x55780795e380 <col:36, col:54>. `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'. |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8. | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this. `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'. CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'. |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]. `-CompoundStmt 0x557807999440 <col:29, col:54>. `-ReturnStmt 0x557807999428 <col:31, col:51>. `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>. `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'. |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8. | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20. | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this. `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2859:11073,usability,simpl,simplisticCastAs,11073," <LValueToRValue>. | `-MemberExpr 0x557807945380 <col:43, col:49> 'class cling::Interpreter *' lvalue .m_Interpreter 0x557807945300. | `-DeclRefExpr 0x557807945358 <col:43> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-CompoundStmt 0x5578079454f8 <col:64, line:180:5>. `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='. |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8. | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'. `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'. CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'. `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>. `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>. `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'. |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast. `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'. `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this. CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'. |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'. |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2859
https://github.com/root-project/root/pull/2860:72,deployability,version,version,72,processExecutorH1Test is unrelated to this PR (the problem is the Davix version),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:72,integrability,version,version,72,processExecutorH1Test is unrelated to this PR (the problem is the Davix version),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2860:72,modifiability,version,version,72,processExecutorH1Test is unrelated to this PR (the problem is the Davix version),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2860
https://github.com/root-project/root/pull/2865:41,deployability,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:41,integrability,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:41,interoperability,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:41,modifiability,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:41,reliability,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:41,security,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2865:41,testability,integr,integrated,41,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2865
https://github.com/root-project/root/pull/2866:192,energy efficiency,alloc,allocators,192,"@hageboeck , nice improvement. A comment only partially related to this PR which could be merged immediately (this is a bug fix and can go in 6.16). Being forward looking: I agree that custom allocators are not a very good idea, especially when thinking to sophisticated stuff such as thread safety. If the pointer of the RooArgSet is used as unique identifyier, why don't we add a unique id to the RooArgSet instances and rely on that one rather than their pointers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:292,safety,safe,safety,292,"@hageboeck , nice improvement. A comment only partially related to this PR which could be merged immediately (this is a bug fix and can go in 6.16). Being forward looking: I agree that custom allocators are not a very good idea, especially when thinking to sophisticated stuff such as thread safety. If the pointer of the RooArgSet is used as unique identifyier, why don't we add a unique id to the RooArgSet instances and rely on that one rather than their pointers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:350,security,ident,identifyier,350,"@hageboeck , nice improvement. A comment only partially related to this PR which could be merged immediately (this is a bug fix and can go in 6.16). Being forward looking: I agree that custom allocators are not a very good idea, especially when thinking to sophisticated stuff such as thread safety. If the pointer of the RooArgSet is used as unique identifyier, why don't we add a unique id to the RooArgSet instances and rely on that one rather than their pointers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2866:185,usability,custom,custom,185,"@hageboeck , nice improvement. A comment only partially related to this PR which could be merged immediately (this is a bug fix and can go in 6.16). Being forward looking: I agree that custom allocators are not a very good idea, especially when thinking to sophisticated stuff such as thread safety. If the pointer of the RooArgSet is used as unique identifyier, why don't we add a unique id to the RooArgSet instances and rely on that one rather than their pointers?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2866
https://github.com/root-project/root/pull/2867:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2869:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON -Dccache=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2869:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2869:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2870:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2870
https://github.com/root-project/root/pull/2870:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2870
https://github.com/root-project/root/pull/2871:43,deployability,build,builds,43,This is fix for current problem in nightly-builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2871
https://github.com/root-project/root/pull/2871:16,energy efficiency,current,current,16,This is fix for current problem in nightly-builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2871
https://github.com/root-project/root/pull/2871:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2871
https://github.com/root-project/root/pull/2873:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:9,availability,error,errors,9,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:19,deployability,build,build,19,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:25,deployability,log,logs,25,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:9,performance,error,errors,9,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:9,safety,error,errors,9,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:25,safety,log,logs,25,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:25,security,log,logs,25,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:25,testability,log,logs,25,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:9,usability,error,errors,9,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2874:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2874
https://github.com/root-project/root/pull/2875:69,integrability,repositor,repository,69,"Ups, I am closing this PR due to the fact I created it for the wrong repository. Sorry for the disturbance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:69,interoperability,repositor,repository,69,"Ups, I am closing this PR due to the fact I created it for the wrong repository. Sorry for the disturbance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2878:12,deployability,build,build,12,No need for build checks - just merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2878
https://github.com/root-project/root/pull/2881:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2883:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62 with flags cxxmodules=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2883
https://github.com/root-project/root/pull/2886:31,deployability,build,build,31,(is there a way to stop the PR build? :smile: ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:19,usability,stop,stop,19,(is there a way to stop the PR build? :smile: ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:0,deployability,Log,Log,0,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:63,deployability,build,build,63,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:0,safety,Log,Log,0,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:0,security,Log,Log,0,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:0,testability,Log,Log,0,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:41,usability,progress,progress,41,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2887:308,availability,Error,Error,308,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:149,deployability,build,build,149,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:183,deployability,build,build,183,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:338,deployability,version,version,338,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:361,deployability,build,build,361,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:395,deployability,build,build,395,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:331,energy efficiency,Load,Load,331,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:267,integrability,schema,schema,267,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:338,integrability,version,version,338,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:346,interoperability,mismatch,mismatch,346,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:338,modifiability,version,version,338,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:308,performance,Error,Error,308,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:331,performance,Load,Load,331,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:256,safety,prevent,preventing,256,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:308,safety,Error,Error,308,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:256,security,preven,preventing,256,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2887:308,usability,Error,Error,308,"uuuuh... @vgvassilev @Axel-Naumann any idea what's wrong with fedora28? :sweat_smile: . ```. Warning in <TFile::Init>: no StreamerInfo found in /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h_ACLiC_dict_rdict.pcm therefore preventing schema evolution when reading this file. Error in <TUnixSystem::Load>: version mismatch, /mnt/build/workspace/root-pullrequests-build/roottest/cling/functionTemplate/t_h.so = 61501, ROOT = 61405. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2887
https://github.com/root-project/root/pull/2889:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:168,deployability,updat,update,168,"Sadly slc6/gcc48 don't want to pick up right branch for tests. ```. 15:33:19 First, rewinding head to replay your work on top of it... 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT"". 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT"". 15:33:19 Applying: Changing CMake settings back to default zlib. 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions. 15:33:20 From https://github.com/oshadura/roottest. 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward). ```. I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:56,safety,test,tests,56,"Sadly slc6/gcc48 don't want to pick up right branch for tests. ```. 15:33:19 First, rewinding head to replay your work on top of it... 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT"". 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT"". 15:33:19 Applying: Changing CMake settings back to default zlib. 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions. 15:33:20 From https://github.com/oshadura/roottest. 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward). ```. I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:168,safety,updat,update,168,"Sadly slc6/gcc48 don't want to pick up right branch for tests. ```. 15:33:19 First, rewinding head to replay your work on top of it... 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT"". 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT"". 15:33:19 Applying: Changing CMake settings back to default zlib. 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions. 15:33:20 From https://github.com/oshadura/roottest. 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward). ```. I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:168,security,updat,update,168,"Sadly slc6/gcc48 don't want to pick up right branch for tests. ```. 15:33:19 First, rewinding head to replay your work on top of it... 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT"". 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT"". 15:33:19 Applying: Changing CMake settings back to default zlib. 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions. 15:33:20 From https://github.com/oshadura/roottest. 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward). ```. I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:56,testability,test,tests,56,"Sadly slc6/gcc48 don't want to pick up right branch for tests. ```. 15:33:19 First, rewinding head to replay your work on top of it... 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT"". 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT"". 15:33:19 Applying: Changing CMake settings back to default zlib. 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions. 15:33:20 From https://github.com/oshadura/roottest. 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward). ```. I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:587,usability,behavi,behaviour,587,"Sadly slc6/gcc48 don't want to pick up right branch for tests. ```. 15:33:19 First, rewinding head to replay your work on top of it... 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT"". 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT"". 15:33:19 Applying: Changing CMake settings back to default zlib. 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions. 15:33:20 From https://github.com/oshadura/roottest. 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward). ```. I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:64,availability,failur,failure,64,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:139,availability,failur,failure,139,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:220,availability,Failur,Failure,220,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:367,availability,failur,failure,367,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:64,deployability,fail,failure,64,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:118,deployability,modul,modules,118,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:139,deployability,fail,failure,139,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:220,deployability,Fail,Failure,220,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:367,deployability,fail,failure,367,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:118,modifiability,modul,modules,118,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:64,performance,failur,failure,64,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:139,performance,failur,failure,139,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:220,performance,Failur,Failure,220,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:367,performance,failur,failure,367,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:64,reliability,fail,failure,64,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:139,reliability,fail,failure,139,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:220,reliability,Fail,Failure,220,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:367,reliability,fail,failure,367,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:118,safety,modul,modules,118,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:242,safety,test,test,242,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:242,testability,test,test,242,"@pcanal @Axel-Naumann I think I am ready here, TMVA and Windows failure is not connected with changes in this PR. C++ modules has a random failure of projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make. Failure of filemerger test on centos7/clang39 is only reproducible with clang 3.9 (I tried with Yuka to reproduce using clang 7.0.0, we didn't see failure.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:104,availability,error,error,104,This can be merge as soon as centos7/clang39 is disabled in jenkins (otherwise we will have a spurrious error for other PRs).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:104,performance,error,error,104,This can be merge as soon as centos7/clang39 is disabled in jenkins (otherwise we will have a spurrious error for other PRs).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:104,safety,error,error,104,This can be merge as soon as centos7/clang39 is disabled in jenkins (otherwise we will have a spurrious error for other PRs).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:104,usability,error,error,104,This can be merge as soon as centos7/clang39 is disabled in jenkins (otherwise we will have a spurrious error for other PRs).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2892:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62 with flags -Druntime_cxxmodules=On -Dctest_test_exclude_none=on.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2895:11,deployability,build,build,11,"@phsft-bot build on slc6/clang_gcc62, mac1014/native with flags cxxmodules=on",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:11,deployability,build,build,11,@phsft-bot build just on slc6/clang_gcc62 with flags -Dcxxmodules=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:11,deployability,build,build,11,@phsft-bot build just on mac1013/native with flags -Dcxxmodules=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2896:13,deployability,build,builds,13,I killed all builds since they make no sense with the normal pyroot enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2896
https://github.com/root-project/root/pull/2896:11,deployability,build,build,11,@phsft-bot build with flags -Dexperimental_pyroot=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2896
https://github.com/root-project/root/pull/2902:60,safety,review,review,60,@pcanal I think I resolved all your comments! Thank you for review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:60,testability,review,review,60,@pcanal I think I resolved all your comments! Thank you for review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2903:17,safety,review,review,17,Could you open a review for this and provide the link here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:17,testability,review,review,17,Could you open a review for this and provide the link here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2904:23,availability,failur,failure,23,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2904:14,deployability,pipelin,pipeline,14,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2904:23,deployability,fail,failure,23,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2904:14,integrability,pipelin,pipeline,14,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2904:23,performance,failur,failure,23,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2904:23,reliability,fail,failure,23,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2905:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2905
https://github.com/root-project/root/pull/2908:46,availability,error,errors,46,"@Axel-Naumann @pcanal . Show we merge it? All errors has nothing to do. Only problem I may expect - some external applications, which use that declaration without including of correct header file. Maybe it is better to do now - we will have more time before release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:258,deployability,releas,release,258,"@Axel-Naumann @pcanal . Show we merge it? All errors has nothing to do. Only problem I may expect - some external applications, which use that declaration without including of correct header file. Maybe it is better to do now - we will have more time before release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:46,performance,error,errors,46,"@Axel-Naumann @pcanal . Show we merge it? All errors has nothing to do. Only problem I may expect - some external applications, which use that declaration without including of correct header file. Maybe it is better to do now - we will have more time before release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:246,performance,time,time,246,"@Axel-Naumann @pcanal . Show we merge it? All errors has nothing to do. Only problem I may expect - some external applications, which use that declaration without including of correct header file. Maybe it is better to do now - we will have more time before release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:46,safety,error,errors,46,"@Axel-Naumann @pcanal . Show we merge it? All errors has nothing to do. Only problem I may expect - some external applications, which use that declaration without including of correct header file. Maybe it is better to do now - we will have more time before release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:46,usability,error,errors,46,"@Axel-Naumann @pcanal . Show we merge it? All errors has nothing to do. Only problem I may expect - some external applications, which use that declaration without including of correct header file. Maybe it is better to do now - we will have more time before release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:56,deployability,releas,release,56,"For me it's okay to merge *after* you add a line to the release notes calling out this change. I suspect that this is a super rare case (people relying on our fwd decl), and people should happily adapt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:196,energy efficiency,adapt,adapt,196,"For me it's okay to merge *after* you add a line to the release notes calling out this change. I suspect that this is a super rare case (people relying on our fwd decl), and people should happily adapt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:196,integrability,adapt,adapt,196,"For me it's okay to merge *after* you add a line to the release notes calling out this change. I suspect that this is a super rare case (people relying on our fwd decl), and people should happily adapt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:196,interoperability,adapt,adapt,196,"For me it's okay to merge *after* you add a line to the release notes calling out this change. I suspect that this is a super rare case (people relying on our fwd decl), and people should happily adapt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:196,modifiability,adapt,adapt,196,"For me it's okay to merge *after* you add a line to the release notes calling out this change. I suspect that this is a super rare case (people relying on our fwd decl), and people should happily adapt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2909:0,availability,Failur,Failure,0,Failure of the test is not related to changes. Commit is fixing CMake warning.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:0,deployability,Fail,Failure,0,Failure of the test is not related to changes. Commit is fixing CMake warning.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:0,performance,Failur,Failure,0,Failure of the test is not related to changes. Commit is fixing CMake warning.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:0,reliability,Fail,Failure,0,Failure of the test is not related to changes. Commit is fixing CMake warning.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:15,safety,test,test,15,Failure of the test is not related to changes. Commit is fixing CMake warning.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:15,testability,test,test,15,Failure of the test is not related to changes. Commit is fixing CMake warning.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2910:5,reliability,doe,does,5,What does the declaration of unique_ptr looks like on Windows? What does .class unique_ptr<something> say?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:68,reliability,doe,does,68,What does the declaration of unique_ptr looks like on Windows? What does .class unique_ptr<something> say?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1973,availability,operat,operator,1973," _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXCEPT. 		{	// assign a null pointer. 		reset();. 		return (*this);. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		explicit unique_ptr(pointer _Ptr) _NOEXCEPT. 			: _Mybase(_Ptr). 		{	// construct with pointer. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<is_constructible_v<_Dx2, const _Dx2&>, int> = 0>. 		unique_ptr(pointer _Ptr, const _Dx& _Dt) _NOEXCEPT. 			: _Mybase(_Ptr, _Dt). 		{	// construct with pointer and (maybe const) deleter&. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<conjunction_v<negation<is_reference<_Dx2>>,. 			is_constructible<_Dx2, _Dx2>>, int> = 0>. 		unique_ptr(pointer _Ptr, _Dx&& _Dt) _NOEXCEPT. 			: _Mybase(_Ptr, _STD move(_Dt)). 		{	// construct by moving deleter. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<conjunction_v<is_reference<_Dx2>,. 			is_constructible<_Dx2, remove_reference_t<_Dx2>>>, int> = 0>. 		unique_ptr(pointer, remove_reference_t<_Dx>&&) = delete;. 	unique_ptr(unique_ptr&& _Right) _",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4078,availability,operat,operator,4078," moving _Right. 		}. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>,. 			conditional_t<is_reference_v<_Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>. 		>, int> = 0>. 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release(),. 				_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4296,availability,operat,operator,4296,"Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>. 		>, int> = 0>. 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release(),. 				_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4909,availability,operat,operator,4909,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5008,availability,operat,operator,5008,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5229,availability,operat,operator,5229,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5736,availability,operat,operator,5736,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:3006,deployability,releas,release,3006,"/ assign a null pointer. 		reset();. 		return (*this);. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		explicit unique_ptr(pointer _Ptr) _NOEXCEPT. 			: _Mybase(_Ptr). 		{	// construct with pointer. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<is_constructible_v<_Dx2, const _Dx2&>, int> = 0>. 		unique_ptr(pointer _Ptr, const _Dx& _Dt) _NOEXCEPT. 			: _Mybase(_Ptr, _Dt). 		{	// construct with pointer and (maybe const) deleter&. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<conjunction_v<negation<is_reference<_Dx2>>,. 			is_constructible<_Dx2, _Dx2>>, int> = 0>. 		unique_ptr(pointer _Ptr, _Dx&& _Dt) _NOEXCEPT. 			: _Mybase(_Ptr, _STD move(_Dt)). 		{	// construct by moving deleter. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<conjunction_v<is_reference<_Dx2>,. 			is_constructible<_Dx2, remove_reference_t<_Dx2>>>, int> = 0>. 		unique_ptr(pointer, remove_reference_t<_Dx>&&) = delete;. 	unique_ptr(unique_ptr&& _Right) _NOEXCEPT. 		: _Mybase(_Right.release(),. 			_STD forward<_Dx>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>,. 			conditional_t<is_reference_v<_Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>. 		>, int> = 0>. 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release(),. 				_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename uniqu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:3446,deployability,releas,release,3446,"d (maybe const) deleter&. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<conjunction_v<negation<is_reference<_Dx2>>,. 			is_constructible<_Dx2, _Dx2>>, int> = 0>. 		unique_ptr(pointer _Ptr, _Dx&& _Dt) _NOEXCEPT. 			: _Mybase(_Ptr, _STD move(_Dt)). 		{	// construct by moving deleter. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<conjunction_v<is_reference<_Dx2>,. 			is_constructible<_Dx2, remove_reference_t<_Dx2>>>, int> = 0>. 		unique_ptr(pointer, remove_reference_t<_Dx>&&) = delete;. 	unique_ptr(unique_ptr&& _Right) _NOEXCEPT. 		: _Mybase(_Right.release(),. 			_STD forward<_Dx>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>,. 			conditional_t<is_reference_v<_Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>. 		>, int> = 0>. 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release(),. 				_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:3770,deployability,releas,release,3770,"ble_if_t<conjunction_v<is_reference<_Dx2>,. 			is_constructible<_Dx2, remove_reference_t<_Dx2>>>, int> = 0>. 		unique_ptr(pointer, remove_reference_t<_Dx>&&) = delete;. 	unique_ptr(unique_ptr&& _Right) _NOEXCEPT. 		: _Mybase(_Right.release(),. 			_STD forward<_Dx>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>,. 			conditional_t<is_reference_v<_Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>. 		>, int> = 0>. 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release(),. 				_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4179,deployability,releas,release,4179,"ray<_Ty2>>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>,. 			conditional_t<is_reference_v<_Dx>, is_same<_Dx2, _Dx>, is_convertible<_Dx2, _Dx>>. 		>, int> = 0>. 		unique_ptr(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release(),. 				_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to objec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4457,deployability,releas,release,4457,"	_STD forward<_Dx2>(_Right.get_deleter())). 		{	// construct by moving _Right. 		}. #if _HAS_AUTO_PTR_ETC. 	template<class _Ty2,. 		enable_if_t<conjunction_v<is_convertible<_Ty2 *, _Ty *>,. 			is_same<_Dx, default_delete<_Ty>>>, int> = 0>. 		unique_ptr(auto_ptr<_Ty2>&& _Right) _NOEXCEPT. 			: _Mybase(_Right.release()). 		{	// construct by moving _Right. 		}. #endif /* _HAS_AUTO_PTR_ETC */. 	template<class _Ty2,. 		class _Dx2,. 		enable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		retur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5342,deployability,releas,release,5342,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:200,integrability,pub,public,200,"> What does the declaration of unique_ptr looks like on Windows? ```. 	// CLASS TEMPLATE _Unique_ptr_base. template<class _Ty,. 	class _Dx>. 	class _Unique_ptr_base. 	{	// stores pointer and deleter. public:. 	typedef remove_reference_t<_Dx> _Dx_noref;. 	typedef typename _Get_deleter_pointer_type<_Ty, _Dx_noref>::type pointer;. 	template<class _Ptr2,. 		class _Dx2>. 		_Unique_ptr_base(_Ptr2 _Ptr, _Dx2&& _Dt). 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1356,integrability,pub,public,1356,"ss _Dx2>. 		_Unique_ptr_base(_Ptr2 _Ptr, _Dx2&& _Dt). 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXCEPT. 		{	// assign a null pointer. 		reset();. 		return (*this);. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		explicit unique_ptr(pointer _Ptr) _NOEXCEPT. 			: _Mybase(_Ptr). 		{	// construct with pointer. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<is_constructible_v<_Dx2, const _Dx2&>, int> = 0>. 		unique_ptr(pointer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1432,integrability,pub,public,1432,"variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXCEPT. 		{	// assign a null pointer. 		reset();. 		return (*this);. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		explicit unique_ptr(pointer _Ptr) _NOEXCEPT. 			: _Mybase(_Ptr). 		{	// construct with pointer. 		}. 	template<class _Dx2 = _Dx,. 		enable_if_t<is_constructible_v<_Dx2, const _Dx2&>, int> = 0>. 		unique_ptr(pointer _Ptr, const _Dx& _Dt) _NOEXCEPT. 			: _Mybase(_Ptr, _Dt). 		{	// construct ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:508,interoperability,compatib,compatible,508,"> What does the declaration of unique_ptr looks like on Windows? ```. 	// CLASS TEMPLATE _Unique_ptr_base. template<class _Ty,. 	class _Dx>. 	class _Unique_ptr_base. 	{	// stores pointer and deleter. public:. 	typedef remove_reference_t<_Dx> _Dx_noref;. 	typedef typename _Get_deleter_pointer_type<_Ty, _Dx_noref>::type pointer;. 	template<class _Ptr2,. 		class _Dx2>. 		_Unique_ptr_base(_Ptr2 _Ptr, _Dx2&& _Dt). 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:682,interoperability,compatib,compatible,682,"> What does the declaration of unique_ptr looks like on Windows? ```. 	// CLASS TEMPLATE _Unique_ptr_base. template<class _Ty,. 	class _Dx>. 	class _Unique_ptr_base. 	{	// stores pointer and deleter. public:. 	typedef remove_reference_t<_Dx> _Dx_noref;. 	typedef typename _Get_deleter_pointer_type<_Ty, _Dx_noref>::type pointer;. 	template<class _Ptr2,. 		class _Dx2>. 		_Unique_ptr_base(_Ptr2 _Ptr, _Dx2&& _Dt). 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1266,modifiability,SCAL,SCALAR,1266,"me _Get_deleter_pointer_type<_Ty, _Dx_noref>::type pointer;. 	template<class _Ptr2,. 		class _Dx2>. 		_Unique_ptr_base(_Ptr2 _Ptr, _Dx2&& _Dt). 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXCEPT. 		{	// assign a null pointer. 		reset();. 		return (*this);. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		explicit unique_ptr(pointer _Ptr) _NOEXCEPT. 			: _Mybase(_Ptr). 		{	// construct with pointer. 		}. 	template<class _Dx2 = ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:7,reliability,doe,does,7,"> What does the declaration of unique_ptr looks like on Windows? ```. 	// CLASS TEMPLATE _Unique_ptr_base. template<class _Ty,. 	class _Dx>. 	class _Unique_ptr_base. 	{	// stores pointer and deleter. public:. 	typedef remove_reference_t<_Dx> _Dx_noref;. 	typedef typename _Get_deleter_pointer_type<_Ty, _Dx_noref>::type pointer;. 	template<class _Ptr2,. 		class _Dx2>. 		_Unique_ptr_base(_Ptr2 _Ptr, _Dx2&& _Dt). 		: _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx2>(_Dt), _Ptr). 		{	// construct with compatible pointer and deleter. 		}. 	template<class _Ptr2>. 		constexpr _Unique_ptr_base(_Ptr2 _Ptr). 		: _Mypair(_Zero_then_variadic_args_t(), _Ptr). 		{	// construct with compatible pointer. 		}. 	_NODISCARD _Dx& get_deleter() _NOEXCEPT. 		{	// return reference to deleter. 		return (_Mypair._Get_first());. 		}. 	_NODISCARD const _Dx& get_deleter() const _NOEXCEPT. 		{	// return const reference to deleter. 		return (_Mypair._Get_first());. 		}. 	pointer& _Myptr() _NOEXCEPT. 		{	// return reference to pointer. 		return (_Mypair._Get_second());. 		}. 	const pointer& _Myptr() const _NOEXCEPT. 		{	// return const reference to pointer. 		return (_Mypair._Get_second());. 		}. 	_Compressed_pair<_Dx, pointer> _Mypair;. 	};. 	// CLASS TEMPLATE unique_ptr SCALAR. template<class _Ty,. 	class _Dx>	// = default_delete<_Ty>. 	class unique_ptr. 		: public _Unique_ptr_base<_Ty, _Dx>. 	{	// non-copyable pointer to an object. public:. 	typedef _Unique_ptr_base<_Ty, _Dx> _Mybase;. 	typedef typename _Mybase::pointer pointer;. 	typedef _Ty element_type;. 	typedef _Dx deleter_type;. 	using _Mybase::get_deleter;. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr() _NOEXCEPT. 			: _Mybase(pointer()). 		{	// default construct. 		}. 	template<class _Dx2 = _Dx,. 		_Unique_ptr_enable_default_t<_Dx2> = 0>. 		constexpr unique_ptr(nullptr_t) _NOEXCEPT. 			: _Mybase(pointer()). 		{	// null pointer construct. 		}. 	unique_ptr& operator=(nullptr_t) _NOEXC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5793,reliability,doe,does,5793,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5269,safety,test,test,5269,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5269,testability,test,test,5269,"nable_if_t<conjunction_v<negation<is_array<_Ty2>>,. 			is_assignable<_Dx&, _Dx2>,. 			is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, pointer>. 		>, int> = 0>. 		unique_ptr& operator=(unique_ptr<_Ty2, _Dx2>&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		reset(_Right.release());. 		this->get_deleter() = _STD forward<_Dx2>(_Right.get_deleter());. 		return (*this);. 		}. 	unique_ptr& operator=(unique_ptr&& _Right) _NOEXCEPT. 		{	// assign by moving _Right. 		if (this != _STD addressof(_Right)). 			{	// different, do the move. 			reset(_Right.release());. 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());. 			}. 		return (*this);. 		}. 	void swap(unique_ptr& _Right) _NOEXCEPT. 		{	// swap elements. 		_Swap_adl(this->_Myptr(), _Right._Myptr());. 		_Swap_adl(this->get_deleter(), _Right.get_deleter());. 		}. 	~unique_ptr() _NOEXCEPT. 		{	// destroy the object. 		if (get() != pointer()). 			{. 			this->get_deleter()(get());. 			}. 		}. 	_NODISCARD add_lvalue_reference_t<_Ty> operator*() const. 		{	// return reference to object. 		return (*get());. 		}. 	_NODISCARD pointer operator->() const _NOEXCEPT. 		{	// return pointer to class object. 		return (this->_Myptr());. 		}. 	_NODISCARD pointer get() const _NOEXCEPT. 		{	// return pointer to object. 		return (this->_Myptr());. 		}. 	explicit operator bool() const _NOEXCEPT. 		{	// test for non-null pointer. 		return (get() != pointer());. 		}. 	pointer release() _NOEXCEPT. 		{	// yield ownership of pointer. 		pointer _Ans = get();. 		this->_Myptr() = pointer();. 		return (_Ans);. 		}. 	void reset(pointer _Ptr = pointer()) _NOEXCEPT. 		{	// establish new pointer. 		pointer _Old = get();. 		this->_Myptr() = _Ptr;. 		if (_Old != pointer()). 			{. 			this->get_deleter()(_Old);. 			}. 		}. 	unique_ptr(const unique_ptr&) = delete;. 	unique_ptr& operator=(const unique_ptr&) = delete;. 	};. ```. > What does .class unique_ptr say? ```. root [0] .class unique_ptr. Class unique_ptr not found. root [1]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1001,availability,operat,operator,1001,"t about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1151,availability,operat,operator,1151,"==============================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1565,availability,operat,operator,1565,"--------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1700,availability,operat,operator,1700,"ue_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1908,availability,operat,operator,1908,"ublic: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::defaul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2333,availability,operat,operator,2333,"ct, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5916,availability,operat,operator,5916,"oexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<is_reference<_Dx2>, is_constructible<_Dx2, remove_reference_t<_Dx2> > >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer, remove_reference_t<struct std::default_delete<class TObject> > &&) = delete unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer, remove_reference_t<std::default_delete<TObject> > &&);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer>, conditional_t<is_reference_v<struct std::default_delete<class TObject> >, is_same<_Dx2, struct std::default_delete<class TObject> >, is_convertible<_Dx2, struct std::default_delete<class TObject> > > >, int> = 0> unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, enable_if_t<conjunction_v<is_convertible<_Ty2 *, class TObject *>, is_same<struct std::default_delete<class TObject>, default_delete<class TObject> > >, int> = 0> unique_ptr(auto_ptr<_Ty2> &&_Right) noexcept unique_ptr(auto_ptr<_Ty2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_assignable<struct std::default_delete<class TObject> &, _Dx2>, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer> >, int> = 0> class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept;. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2056,deployability,releas,release,2056," public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:376,integrability,pub,public,376,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:692,integrability,pub,public,692,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:802,integrability,pub,public,802,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:911,integrability,pub,public,911,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1061,integrability,pub,public,1061,":). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1286,integrability,pub,public,1286," LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1428,integrability,pub,public,1428,":default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1519,integrability,pub,public,1519,"------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_dele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1608,integrability,pub,public,1608,"--------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1753,integrability,pub,public,1753,"TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1891,integrability,pub,public,1891,"led) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:1964,integrability,pub,public,1964,":default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2100,integrability,pub,public,2100,"t, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explici",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2243,integrability,pub,public,2243,"ight) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = str",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2467,integrability,pub,public,2467,"e<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, const struct std::def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2651,integrability,pub,public,2651,"std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, const struct std::default_delete<class TObject> &_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, const std::default_delete<TObject> &_Dt);. (compiled) (NA):(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:2863,integrability,pub,public,2863,". (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer release() noexcept;. (compiled) (NA):(NA) 0 public: void reset(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, const struct std::default_delete<class TObject> &_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, const std::default_delete<TObject> &_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<negation<is_reference<_Dx2> >, is_constructible<_Dx2, _Dx2> >, int> = 0> unique_ptr(std::unique_ptr<class ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:3212,integrability,pub,public,3212,"pt;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(const class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &) = delete;. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr() noexcept unique_ptr();. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, const struct std::default_delete<class TObject> &_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, const std::default_delete<TObject> &_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<negation<is_reference<_Dx2> >, is_constructible<_Dx2, _Dx2> >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, struct std::default_delete<class TObject> &&_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:3660,integrability,pub,public,3660,"late <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> constexpr unique_ptr(std::nullptr_t) noexcept unique_ptr(std::nullptr_t);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, _Unique_ptr_enable_default_t<_Dx2> = 0> explicit unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr) noexcept explicit unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, const struct std::default_delete<class TObject> &_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, const std::default_delete<TObject> &_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<negation<is_reference<_Dx2> >, is_constructible<_Dx2, _Dx2> >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, struct std::default_delete<class TObject> &&_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<is_reference<_Dx2>, is_constructible<_Dx2, remove_reference_t<_Dx2> > >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer, remove_reference_t<struct std::default_delete<class TObject> > &&) = delete unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer, remove_reference_t<std::default_delete<TObject> > &&);. (compiled) (NA):(NA) 0 public: template ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4135,integrability,pub,public,4135,"t, std::default_delete<TObject> >::pointer _Ptr);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<is_constructible_v<_Dx2, const _Dx2 &>, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, const struct std::default_delete<class TObject> &_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, const std::default_delete<TObject> &_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<negation<is_reference<_Dx2> >, is_constructible<_Dx2, _Dx2> >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, struct std::default_delete<class TObject> &&_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<is_reference<_Dx2>, is_constructible<_Dx2, remove_reference_t<_Dx2> > >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer, remove_reference_t<struct std::default_delete<class TObject> > &&) = delete unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer, remove_reference_t<std::default_delete<TObject> > &&);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer>, conditional_t<is_reference_v<struct std::default_delete<class TObject> >, is_same<_Dx2, struct std::default_delete<class TObject> >, is_convertible<_Dx2, struct std::default_delete<class TObject> > > >, int> = 0> unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Righ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:4646,integrability,pub,public,4646,"NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<negation<is_reference<_Dx2> >, is_constructible<_Dx2, _Dx2> >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer _Ptr, struct std::default_delete<class TObject> &&_Dt) noexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<is_reference<_Dx2>, is_constructible<_Dx2, remove_reference_t<_Dx2> > >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer, remove_reference_t<struct std::default_delete<class TObject> > &&) = delete unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer, remove_reference_t<std::default_delete<TObject> > &&);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer>, conditional_t<is_reference_v<struct std::default_delete<class TObject> >, is_same<_Dx2, struct std::default_delete<class TObject> >, is_convertible<_Dx2, struct std::default_delete<class TObject> > > >, int> = 0> unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, enable_if_t<conjunction_v<is_convertible<_Ty2 *, class TObject *>, is_same<struct std::default_delete<class TObject>, default_delete<class TObject> > >, int> = 0> unique_ptr(auto_ptr<_Ty2> &&_Right) noexcept unique_ptr(auto_ptr<_Ty2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_assignable<struct std::default_de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5219,integrability,pub,public,5219,"oexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<is_reference<_Dx2>, is_constructible<_Dx2, remove_reference_t<_Dx2> > >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer, remove_reference_t<struct std::default_delete<class TObject> > &&) = delete unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer, remove_reference_t<std::default_delete<TObject> > &&);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer>, conditional_t<is_reference_v<struct std::default_delete<class TObject> >, is_same<_Dx2, struct std::default_delete<class TObject> >, is_convertible<_Dx2, struct std::default_delete<class TObject> > > >, int> = 0> unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, enable_if_t<conjunction_v<is_convertible<_Ty2 *, class TObject *>, is_same<struct std::default_delete<class TObject>, default_delete<class TObject> > >, int> = 0> unique_ptr(auto_ptr<_Ty2> &&_Right) noexcept unique_ptr(auto_ptr<_Ty2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_assignable<struct std::default_delete<class TObject> &, _Dx2>, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer> >, int> = 0> class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept;. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:5518,integrability,pub,public,5518,"oexcept unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer _Ptr, std::default_delete<TObject> &&_Dt);. (compiled) (NA):(NA) 0 public: template <class _Dx2 = struct std::default_delete<class TObject>, enable_if_t<conjunction_v<is_reference<_Dx2>, is_constructible<_Dx2, remove_reference_t<_Dx2> > >, int> = 0> unique_ptr(std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer, remove_reference_t<struct std::default_delete<class TObject> > &&) = delete unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> >::pointer, remove_reference_t<std::default_delete<TObject> > &&);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer>, conditional_t<is_reference_v<struct std::default_delete<class TObject> >, is_same<_Dx2, struct std::default_delete<class TObject> >, is_convertible<_Dx2, struct std::default_delete<class TObject> > > >, int> = 0> unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept unique_ptr(unique_ptr<_Ty2, _Dx2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, enable_if_t<conjunction_v<is_convertible<_Ty2 *, class TObject *>, is_same<struct std::default_delete<class TObject>, default_delete<class TObject> > >, int> = 0> unique_ptr(auto_ptr<_Ty2> &&_Right) noexcept unique_ptr(auto_ptr<_Ty2> &&_Right);. (compiled) (NA):(NA) 0 public: template <class _Ty2, class _Dx2, enable_if_t<conjunction_v<negation<is_array<_Ty2> >, is_assignable<struct std::default_delete<class TObject> &, _Dx2>, is_convertible<typename unique_ptr<_Ty2, _Dx2>::pointer, std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer> >, int> = 0> class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(unique_ptr<_Ty2, _Dx2> &&_Right) noexcept;. root [2]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:480,modifiability,variab,variables,480,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:283,performance,memor,memory,283,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:283,usability,memor,memory,283,"> What about. > . > ```. > .class unique_ptr<TObject>. > ```. > :). ```. root [1] .class unique_ptr<TObject>. ===========================================================================. class std::unique_ptr<class TObject, struct std::default_delete<class TObject> >. SIZE: 4 FILE: memory LINE: -1. Base classes: --------------------------------------------------------. 0x0 public std::_Unique_ptr_base<class TObject, struct std::default_delete<class TObject> >. List of member variables --------------------------------------------------. List of member functions :---------------------------------------------------. filename line:size busy function type and name. (compiled) (NA):(NA) 0 public: unique_ptr(std::unique_ptr<TObject, std::default_delete<TObject> > &&_Right);. (compiled) (NA):(NA) 0 public: unique_ptr(const std::unique_ptr<TObject, std::default_delete<TObject> > &);. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(std::nullptr_t) noexcept;. (compiled) (NA):(NA) 0 public: class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &operator=(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &&_Right) noexcept;. (compiled) (NA):(NA) 0 public: void swap(class std::unique_ptr<class TObject, struct std::default_delete<class TObject> > &_Right) noexcept;. (compiled) (NA):(NA) 0 public: ~unique_ptr<TObject, default_delete<TObject> >() noexcept;. (compiled) (NA):(NA) 0 public: add_lvalue_reference_t<class TObject> operator*() const;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer operator->() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObject, struct std::default_delete<class TObject> >::pointer get() const noexcept;. (compiled) (NA):(NA) 0 public: explicit operator bool() const noexcept;. (compiled) (NA):(NA) 0 public: std::unique_ptr<class TObjec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:66,safety,test,test,66,"@pcanal Well, OK, fine, I'll try. But what is the purpose of this test anyway? (seriously)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:66,testability,test,test,66,"@pcanal Well, OK, fine, I'll try. But what is the purpose of this test anyway? (seriously)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:20,safety,test,test,20,It is a first order test that unique_ptr is vaguely as expected .... (See @dpiparo for more details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:20,testability,test,test,20,It is a first order test that unique_ptr is vaguely as expected .... (See @dpiparo for more details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:42,reliability,doe,doesn,42,> auto upDms = clm->GetListOfRealData();. doesn't work...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:37,deployability,Build,BuildRealData,37,you probably need to call. ```. clm->BuildRealData();. ```. before hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:47,deployability,Build,BuildRealData,47,"> you probably need to call. > . > ```. > clm->BuildRealData();. > ```. > before hand. OK, that seems to work on Windows. I will discuss with Danilo on Monday what is the best option, but IMHO, we already spent too much time on this (potentially useless) piece of code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:220,performance,time,time,220,"> you probably need to call. > . > ```. > clm->BuildRealData();. > ```. > before hand. OK, that seems to work on Windows. I will discuss with Danilo on Monday what is the best option, but IMHO, we already spent too much time on this (potentially useless) piece of code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:136,energy efficiency,green,green,136,"Let's try if it works everywhere, and @pcanal, @dpiparo, please let me know if it's ok with you to merge this PR once all platforms are green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:122,interoperability,platform,platforms,122,"Let's try if it works everywhere, and @pcanal, @dpiparo, please let me know if it's ok with you to merge this PR once all platforms are green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:74,deployability,updat,update,74,On some platform the compression seems better. Do we have a corresponding update to roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:8,interoperability,platform,platform,8,On some platform the compression seems better. Do we have a corresponding update to roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:74,safety,updat,update,74,On some platform the compression seems better. Do we have a corresponding update to roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:74,security,updat,update,74,On some platform the compression seems better. Do we have a corresponding update to roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:19,performance,perform,performance-,19,"@phsft-bot on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:19,usability,perform,performance-,19,"@phsft-bot on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:19,performance,perform,performance-,19,"@phsft-bot on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:19,usability,perform,performance-,19,"@phsft-bot on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:9,availability,failur,failure,9,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:9,deployability,fail,failure,9,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:83,deployability,build,build,83,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:116,deployability,Build,Building,116,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:9,performance,failur,failure,9,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:9,reliability,fail,failure,9,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2912:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2915:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:7,availability,failur,failure,7,Fedora failure is due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:7,deployability,fail,failure,7,Fedora failure is due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:25,deployability,infrastructur,infrastructure,25,Fedora failure is due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:7,performance,failur,failure,7,Fedora failure is due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:7,reliability,fail,failure,7,Fedora failure is due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:23,safety,compl,complain,23,Closing because of the complain about a missing roottest PR for an existing (master) branch in my roottest fork.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:23,security,compl,complain,23,Closing because of the complain about a missing roottest PR for an existing (master) branch in my roottest fork.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2921:11,deployability,build,build,11,@phsft-bot build please.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2921
https://github.com/root-project/root/pull/2928:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2928
https://github.com/root-project/root/pull/2928:4,availability,failur,failure,4,The failure is unrelated (can't open the v7 web display in a tutorial).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2928
https://github.com/root-project/root/pull/2928:4,deployability,fail,failure,4,The failure is unrelated (can't open the v7 web display in a tutorial).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2928
https://github.com/root-project/root/pull/2928:4,performance,failur,failure,4,The failure is unrelated (can't open the v7 web display in a tutorial).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2928
https://github.com/root-project/root/pull/2928:4,reliability,fail,failure,4,The failure is unrelated (can't open the v7 web display in a tutorial).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2928
https://github.com/root-project/root/pull/2929:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:8,availability,error,errors,8,all the errors are either pre-existing or related to build system deficiency (missing rebuild),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:53,deployability,build,build,53,all the errors are either pre-existing or related to build system deficiency (missing rebuild),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:8,performance,error,errors,8,all the errors are either pre-existing or related to build system deficiency (missing rebuild),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:8,safety,error,errors,8,all the errors are either pre-existing or related to build system deficiency (missing rebuild),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:8,usability,error,errors,8,all the errors are either pre-existing or related to build system deficiency (missing rebuild),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2930:4,availability,error,error,4,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:280,availability,error,error,280,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:300,availability,error,error,300,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:514,availability,error,error,514,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:534,availability,error,error,534,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:710,availability,error,error,710,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:956,availability,error,error,956,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:976,availability,error,error,976,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1181,availability,error,error,1181,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1402,availability,error,error,1402,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1422,availability,error,error,1422,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:59,deployability,build,build,59,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:101,deployability,build,build,101,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:203,deployability,build,build,203,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:245,deployability,build,build,245,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:352,deployability,build,build,352,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:394,deployability,build,build,394,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:437,deployability,build,build,437,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:479,deployability,build,build,479,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:548,deployability,build,build,548,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:590,deployability,build,build,590,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:633,deployability,build,build,633,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:675,deployability,build,build,675,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:794,deployability,build,build,794,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:836,deployability,build,build,836,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:879,deployability,build,build,879,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:921,deployability,build,build,921,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1019,deployability,build,build,1019,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1061,deployability,build,build,1061,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1104,deployability,build,build,1104,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1146,deployability,build,build,1146,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1240,deployability,build,build,1240,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1282,deployability,build,build,1282,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1325,deployability,build,build,1325,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1367,deployability,build,build,1367,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1465,deployability,build,build,1465,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1507,deployability,build,build,1507,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:4,performance,error,error,4,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:280,performance,error,error,280,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:300,performance,error,error,300,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:514,performance,error,error,514,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:534,performance,error,error,534,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:710,performance,error,error,710,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:956,performance,error,error,956,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:976,performance,error,error,976,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1181,performance,error,error,1181,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1402,performance,error,error,1402,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1422,performance,error,error,1422,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:4,safety,error,error,4,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:280,safety,error,error,280,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:300,safety,error,error,300,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:514,safety,error,error,514,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:534,safety,error,error,534,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:710,safety,error,error,710,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:956,safety,error,error,956,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:976,safety,error,error,976,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1181,safety,error,error,1181,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1402,safety,error,error,1402,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1422,safety,error,error,1422,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:734,security,token,token,734,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:4,usability,error,error,4,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:280,usability,error,error,280,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:300,usability,error,error,300,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:514,usability,error,error,514,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:534,usability,error,error,534,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:710,usability,error,error,710,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:956,usability,error,error,956,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:976,usability,error,error,976,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1181,usability,error,error,1181,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1402,usability,error,error,1402,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:1422,usability,error,error,1422,"The error is not connected with my changes:. `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->. 21:24:19 (ClCompile target) -> . 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]. 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:423,availability,error,error,423,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:675,availability,error,error,675,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:71,deployability,build,build,71,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:105,deployability,build,build,105,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:111,deployability,build,build,111,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:174,deployability,build,build,174,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:208,deployability,build,build,208,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:214,deployability,build,build,214,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:330,deployability,build,build,330,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:364,deployability,build,build,364,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:485,deployability,build,build,485,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:519,deployability,build,build,519,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:525,deployability,build,build,525,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:582,deployability,build,build,582,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:616,deployability,build,build,616,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:737,deployability,build,build,737,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:771,deployability,build,build,771,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:777,deployability,build,build,777,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:423,performance,error,error,423,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:675,performance,error,error,675,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:423,safety,error,error,423,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:675,safety,error,error,675,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:470,security,ident,identifier,470,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:722,security,ident,identifier,722,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:423,usability,error,error,423,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:675,usability,error,error,675,"@bellenot Windows looks like broken on master :. ;(. ```. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\ALL_BUILD.vcxproj"" (default target) (1) ->. 16:37:53 ""C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj"" (default target) (340) ->. 16:37:53 (ClCompile target) -> . 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. 16:37:53 c:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\mempoolforroosets.h(164): error C2065: '__PRETTY_FUNCTION__': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:45,deployability,updat,updates,45,"@Axel-Naumann since it is only first step of updates, I thought maybe better to change to proper deprecation (with exact version to be deprecated) when we land last part of changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:121,deployability,version,version,121,"@Axel-Naumann since it is only first step of updates, I thought maybe better to change to proper deprecation (with exact version to be deprecated) when we land last part of changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:121,integrability,version,version,121,"@Axel-Naumann since it is only first step of updates, I thought maybe better to change to proper deprecation (with exact version to be deprecated) when we land last part of changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:121,modifiability,version,version,121,"@Axel-Naumann since it is only first step of updates, I thought maybe better to change to proper deprecation (with exact version to be deprecated) when we land last part of changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:45,safety,updat,updates,45,"@Axel-Naumann since it is only first step of updates, I thought maybe better to change to proper deprecation (with exact version to be deprecated) when we land last part of changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2930:45,security,updat,updates,45,"@Axel-Naumann since it is only first step of updates, I thought maybe better to change to proper deprecation (with exact version to be deprecated) when we land last part of changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2930
https://github.com/root-project/root/pull/2933:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:11,deployability,build,build,11,@phsft-bot build just on windows10/default!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:81,usability,close,closed,81,"Hi @vgvassilev , there hasn't been any activity here for a while, can this PR be closed (or merged)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:12,reliability,doe,does,12,Recent ROOT does not send all possible compiler flags to rootcling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2934:344,availability,slo,slot,344,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:33,integrability,messag,message,33,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:33,interoperability,messag,message,33,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:344,reliability,slo,slot,344,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:139,safety,isol,isolate,139,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:166,safety,prevent,prevent,166,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:247,safety,prevent,prevent,247,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:139,security,iso,isolate,139,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:166,security,preven,prevent,166,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:247,security,preven,prevent,247,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:139,testability,isol,isolate,139,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2937:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2937
https://github.com/root-project/root/pull/2940:469,deployability,updat,update,469,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:260,safety,detect,detected,260,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:469,safety,updat,update,469,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:260,security,detect,detected,260,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:469,security,updat,update,469,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:166,usability,help,help,166,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:360,usability,user,user-images,360,"@Axel-Naumann I also found a very minor issue so I was thinking should I add it to this same PR? as I guess it won't be useful to open another PR for this. . .? and .help should show same output but there is a bit of difference between them as .? is not being detected from code below: . <img width=""444"" alt=""screenshot 2018-11-08 at 9 29 34 pm"" src=""https://user-images.githubusercontent.com/25840461/48212548-a99fe880-e39d-11e8-9d9b-2cbad3d307c7.png"">. Just need to update this code by adding a ""."" and changing 1->2. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2941:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2941
https://github.com/root-project/root/pull/2941:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2941
https://github.com/root-project/root/pull/2942:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2943:25,deployability,build,build,25,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:31,deployability,fail,fails,31,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:128,deployability,fail,fail,128,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:31,reliability,fail,fails,31,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:128,reliability,fail,fail,128,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:97,safety,test,tests,97,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:97,testability,test,tests,97,"I had a look through the build fails and warnings. I didn't find RooFit-related issues. A lot of tests from other parts of root fail, though. Since this PR is a cherry pick of. + https://github.com/root-project/root/pull/2941. + plus what's already in master,. I am tempted to say that we could merge. @dpiparo ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:83,deployability,patch,patches,83,@bellenot . Any idea why TThreadExecutor would be running on windows with v6-14-00-patches? Danilo was surprised to see the windows build fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:132,deployability,build,build,132,@bellenot . Any idea why TThreadExecutor would be running on windows with v6-14-00-patches? Danilo was surprised to see the windows build fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:138,deployability,fail,fail,138,@bellenot . Any idea why TThreadExecutor would be running on windows with v6-14-00-patches? Danilo was surprised to see the windows build fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:138,reliability,fail,fail,138,@bellenot . Any idea why TThreadExecutor would be running on windows with v6-14-00-patches? Danilo was surprised to see the windows build fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:83,safety,patch,patches,83,@bellenot . Any idea why TThreadExecutor would be running on windows with v6-14-00-patches? Danilo was surprised to see the windows build fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:83,security,patch,patches,83,@bellenot . Any idea why TThreadExecutor would be running on windows with v6-14-00-patches? Danilo was surprised to see the windows build fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:11,deployability,build,build,11,@phsft-bot build since stephan wants to merge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2943:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2943
https://github.com/root-project/root/pull/2944:63,reliability,doe,does,63,@amadio did something different for the cmake lists of VecOps: does this has to be different? Can we have the same approach for tmva?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:21,deployability,depend,dependency,21,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:78,deployability,depend,dependence,78,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:213,deployability,releas,release,213,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:21,integrability,depend,dependency,21,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:78,integrability,depend,dependence,78,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:21,modifiability,depend,dependency,21,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:78,modifiability,depend,dependence,78,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:21,safety,depend,dependency,21,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:78,safety,depend,dependence,78,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:21,testability,depend,dependency,21,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:78,testability,depend,dependence,78,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:126,usability,minim,minimal,126,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed. A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2945:48,deployability,patch,patches,48,"Should we get this into master before the v6-16-patches branch, or is there a risk of havoc and it should only end up after the branch / only in master? (I am convinced we should merge it now, but this is your call.). Btw, you can just add ""ready to merge"" tag to signal this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:48,safety,patch,patches,48,"Should we get this into master before the v6-16-patches branch, or is there a risk of havoc and it should only end up after the branch / only in master? (I am convinced we should merge it now, but this is your call.). Btw, you can just add ""ready to merge"" tag to signal this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:78,safety,risk,risk,78,"Should we get this into master before the v6-16-patches branch, or is there a risk of havoc and it should only end up after the branch / only in master? (I am convinced we should merge it now, but this is your call.). Btw, you can just add ""ready to merge"" tag to signal this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:48,security,patch,patches,48,"Should we get this into master before the v6-16-patches branch, or is there a risk of havoc and it should only end up after the branch / only in master? (I am convinced we should merge it now, but this is your call.). Btw, you can just add ""ready to merge"" tag to signal this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:78,security,risk,risk,78,"Should we get this into master before the v6-16-patches branch, or is there a risk of havoc and it should only end up after the branch / only in master? (I am convinced we should merge it now, but this is your call.). Btw, you can just add ""ready to merge"" tag to signal this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:264,security,sign,signal,264,"Should we get this into master before the v6-16-patches branch, or is there a risk of havoc and it should only end up after the branch / only in master? (I am convinced we should merge it now, but this is your call.). Btw, you can just add ""ready to merge"" tag to signal this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2947:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2948:11,deployability,build,build,11,@phsft-bot build just on fedora27/gcc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2948
https://github.com/root-project/root/pull/2948:11,deployability,build,build,11,@phsft-bot build just on fedora28/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2948
https://github.com/root-project/root/pull/2948:11,deployability,build,build,11,@phsft-bot build just on fedora27/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2948
https://github.com/root-project/root/pull/2948:11,deployability,build,build,11,@phsft-bot build just on ubuntu18/native,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2948
https://github.com/root-project/root/pull/2952:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2954:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2954
https://github.com/root-project/root/pull/2955:8,deployability,build,build,8,The Win build is being figured out (it makes no sense to have imt ON for 6.14 as it cannot work) and I'd like to re-run slc6/gcc62....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Dimt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:11,deployability,build,build,11,@phsft-bot build just on slc6/gcc62,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:11,deployability,build,build,11,@phsft-bot build just on windows10/vc15 with flags -Dimt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build since there was a glitch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build since there was a glitch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again if you can since there was a glitch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again when you have a moment since there was another glitch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again now that I might have fixed some of the issues...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again now that I actually pushed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again - even more fixed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again - getting there!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,"@phsft-bot build just on fedora28/native,slc6-i686/gcc49,mac1013/native",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,"@phsft-bot build just on fedora28/native,slc6-i686/gcc49,mac1013/native because now *you* are confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:11,deployability,build,build,11,@phsft-bot build again and again and again...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2957:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2957
https://github.com/root-project/root/pull/2957:46,deployability,stack,stacks,46,"LGTM, let's see how we do without these extra stacks :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2957
https://github.com/root-project/root/pull/2959:11,availability,error,error,11,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:79,deployability,version,version,79,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:347,deployability,build,build,347,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:389,deployability,build,build,389,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:79,integrability,version,version,79,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:79,modifiability,version,version,79,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,performance,error,error,11,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,safety,error,error,11,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,usability,error,error,11,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:272,usability,help,help,272,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:278,usability,COMMAND,COMMAND,278,slc6/gcc62 error is:. ```. 19:29:14 Unknown option: -c. 19:29:14 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]. 19:29:14 [-p|--paginate|--no-pager] [--no-replace-objects]. 19:29:14 [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]. 19:29:14 [--help] COMMAND [ARGS]. 19:29:14 -- Cleaning up [git rebase --abort] in /var/build/jenkins/workspace/root-pullrequests-build/root. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:5,availability,error,error,5,same error for slc6/gcc48,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:5,performance,error,error,5,same error for slc6/gcc48,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:5,safety,error,error,5,same error for slc6/gcc48,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:5,usability,error,error,5,same error for slc6/gcc48,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2959:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2959
https://github.com/root-project/root/pull/2960:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:4,availability,error,error,4,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:29,availability,Error,Error,29,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:57,deployability,Log,Log,57,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:4,performance,error,error,4,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:29,performance,Error,Error,29,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:4,safety,error,error,4,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:29,safety,Error,Error,29,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:57,safety,Log,Log,57,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:57,security,Log,Log,57,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:57,testability,Log,Log,57,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:4,usability,error,error,4,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:29,usability,Error,Error,29,"The error is unrelated. ```. Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2961:11,deployability,build,build,11,@phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:16,deployability,fail,failed,16,ubuntu16/native failed with. ```. 20:59:22 Caused: java.io.IOException: Remote call on sft-ubuntu-1604-1 failed. 20:59:22 	at hudson.remoting.Channel.call(Channel.java:838). 20:59:22 	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257). 20:59:22 	at com.sun.proxy.$Proxy91.withRepository(Unknown Source). 20:59:22 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235). ```. i.e. git problem of sort.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:105,deployability,fail,failed,105,ubuntu16/native failed with. ```. 20:59:22 Caused: java.io.IOException: Remote call on sft-ubuntu-1604-1 failed. 20:59:22 	at hudson.remoting.Channel.call(Channel.java:838). 20:59:22 	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257). 20:59:22 	at com.sun.proxy.$Proxy91.withRepository(Unknown Source). 20:59:22 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235). ```. i.e. git problem of sort.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:290,interoperability,prox,proxy,290,ubuntu16/native failed with. ```. 20:59:22 Caused: java.io.IOException: Remote call on sft-ubuntu-1604-1 failed. 20:59:22 	at hudson.remoting.Channel.call(Channel.java:838). 20:59:22 	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257). 20:59:22 	at com.sun.proxy.$Proxy91.withRepository(Unknown Source). 20:59:22 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235). ```. i.e. git problem of sort.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:364,interoperability,plug,plugins,364,ubuntu16/native failed with. ```. 20:59:22 Caused: java.io.IOException: Remote call on sft-ubuntu-1604-1 failed. 20:59:22 	at hudson.remoting.Channel.call(Channel.java:838). 20:59:22 	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257). 20:59:22 	at com.sun.proxy.$Proxy91.withRepository(Unknown Source). 20:59:22 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235). ```. i.e. git problem of sort.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:16,reliability,fail,failed,16,ubuntu16/native failed with. ```. 20:59:22 Caused: java.io.IOException: Remote call on sft-ubuntu-1604-1 failed. 20:59:22 	at hudson.remoting.Channel.call(Channel.java:838). 20:59:22 	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257). 20:59:22 	at com.sun.proxy.$Proxy91.withRepository(Unknown Source). 20:59:22 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235). ```. i.e. git problem of sort.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:105,reliability,fail,failed,105,ubuntu16/native failed with. ```. 20:59:22 Caused: java.io.IOException: Remote call on sft-ubuntu-1604-1 failed. 20:59:22 	at hudson.remoting.Channel.call(Channel.java:838). 20:59:22 	at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257). 20:59:22 	at com.sun.proxy.$Proxy91.withRepository(Unknown Source). 20:59:22 	at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235). ```. i.e. git problem of sort.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:94,deployability,build,build,94,This gave an infinite loop on slc6/GCC62: https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47970/consoleFull - I had to manually kill `rootcling`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:154,deployability,modul,module,154,"On the same machine, I went as far back as 95d8156769 and the problem is 'already' there ... no clue how anything ever worked ... actually isn't that the module build? should we disable it for v6.14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:161,deployability,build,build,161,"On the same machine, I went as far back as 95d8156769 and the problem is 'already' there ... no clue how anything ever worked ... actually isn't that the module build? should we disable it for v6.14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:154,modifiability,modul,module,154,"On the same machine, I went as far back as 95d8156769 and the problem is 'already' there ... no clue how anything ever worked ... actually isn't that the module build? should we disable it for v6.14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:154,safety,modul,module,154,"On the same machine, I went as far back as 95d8156769 and the problem is 'already' there ... no clue how anything ever worked ... actually isn't that the module build? should we disable it for v6.14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:28,availability,failur,failures,28,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:13,deployability,modul,modules,13,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:22,deployability,build,build,22,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:28,deployability,fail,failures,28,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:13,modifiability,modul,modules,13,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:28,performance,failur,failures,28,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:28,reliability,fail,failures,28,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2961:13,safety,modul,modules,13,windows and 'modules' build failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2961
https://github.com/root-project/root/pull/2966:4,security,hash,hash,4,The hash was wrong and there was a typo in the filename in the lcg repo. Now retrying.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2969:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2972:126,deployability,build,build,126,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:227,deployability,instal,install,227,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:59,integrability,compon,components,59,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:59,interoperability,compon,components,59,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:59,modifiability,compon,components,59,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:190,usability,user,users,190,"I am not fond of the proliferation of options for optional components. Why not rely only on `python` and `tmva` options? Is a build with `tmva=ON`, `python=ON`, and `pymva=OFF` desirable by users? Shouldn't we just ask them to install numpy instead? Maybe @Axel-Naumann can chime in as well to say what we should do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:52,availability,state,state,52,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:319,availability,Error,Error,319,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:386,availability,failur,failure,386,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:170,deployability,depend,dependent,170,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:334,deployability,modul,modules,334,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:386,deployability,fail,failure,386,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:461,deployability,modul,module,461,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:486,deployability,modul,module,486,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:511,deployability,Stack,Stack,511,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:550,deployability,modul,modules,550,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:613,deployability,modul,modules,613,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:52,integrability,state,state,52,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:144,integrability,configur,configure,144,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:170,integrability,depend,dependent,170,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:362,integrability,messag,message,362,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:362,interoperability,messag,message,362,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:144,modifiability,configur,configure,144,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:170,modifiability,depend,dependent,170,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:334,modifiability,modul,modules,334,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:461,modifiability,modul,module,461,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:486,modifiability,modul,module,486,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:550,modifiability,modul,modules,550,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:613,modifiability,modul,modules,613,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:319,performance,Error,Error,319,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:386,performance,failur,failure,386,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:386,reliability,fail,failure,386,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:170,safety,depend,dependent,170,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:319,safety,Error,Error,319,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:334,safety,modul,modules,334,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:461,safety,modul,module,461,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:486,safety,modul,module,486,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:550,safety,modul,modules,550,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:613,safety,modul,modules,613,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:144,security,configur,configure,144,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:170,testability,depend,dependent,170,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:396,testability,Trace,Traceback,396,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:319,usability,Error,Error,319,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console. ```. CMake Error at cmake/modules/FindNumPy.cmake:62 (message):. NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):. cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package). cmake/modules/SearchInstalledSoftware.cmake:469 (find_package). CMakeLists.txt:103 (include). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:114,deployability,contain,contains,114,The above discussion focuses on the `pymva` option. Just as an FYI with regards to @amadio's comment: The PR also contains a commit introducing an option alias (`tmva-rmva` introduced as an alias for `r`). This commit can be omitted should we want to minimise the number of introduced options. It is included to provide a more coherent set of them for tmva.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:251,usability,minim,minimise,251,The above discussion focuses on the `pymva` option. Just as an FYI with regards to @amadio's comment: The PR also contains a commit introducing an option alias (`tmva-rmva` introduced as an alias for `r`). This commit can be omitted should we want to minimise the number of introduced options. It is included to provide a more coherent set of them for tmva.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:85,deployability,instal,installing,85,"As this is fixing a current issue with native centos (where we did not get around to installing NumPy yet) I'll ""emergency-merge"" this; we can continue to discuss independently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:143,deployability,continu,continue,143,"As this is fixing a current issue with native centos (where we did not get around to installing NumPy yet) I'll ""emergency-merge"" this; we can continue to discuss independently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:20,energy efficiency,current,current,20,"As this is fixing a current issue with native centos (where we did not get around to installing NumPy yet) I'll ""emergency-merge"" this; we can continue to discuss independently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2977:35,safety,test,test,35,"@vgvassilev , is it worth to add a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:35,testability,test,test,35,"@vgvassilev , is it worth to add a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:15,availability,error,error,15,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:25,deployability,modul,modules,25,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:25,modifiability,modul,modules,25,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:15,performance,error,error,15,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:15,safety,error,error,15,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:25,safety,modul,modules,25,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:75,safety,test,test,75,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:75,testability,test,test,75,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:15,usability,error,error,15,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2980:99,usability,close,close,99,"@lmoneta @ashlaban could you have a look at this, please? You're welcome to open a separate PR and close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2980
https://github.com/root-project/root/pull/2980:56,safety,test,tests,56,Hi sure! I think there should be another commit for the tests. Will look into asap. Thanks for dealing with this!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2980
https://github.com/root-project/root/pull/2980:56,testability,test,tests,56,Hi sure! I think there should be another commit for the tests. Will look into asap. Thanks for dealing with this!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2980
https://github.com/root-project/root/pull/2981:42,deployability,modul,modules,42,we are working on finding fix for stucked modules (slc6/gcc62) builds https://github.com/root-project/root/pull/2986,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:63,deployability,build,builds,63,we are working on finding fix for stucked modules (slc6/gcc62) builds https://github.com/root-project/root/pull/2986,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:42,modifiability,modul,modules,42,we are working on finding fix for stucked modules (slc6/gcc62) builds https://github.com/root-project/root/pull/2986,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:42,safety,modul,modules,42,we are working on finding fix for stucked modules (slc6/gcc62) builds https://github.com/root-project/root/pull/2986,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:23,deployability,build,builds,23,Closing PR since clang builds were removed from 6.14 branch testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:60,safety,test,testing,60,Closing PR since clang builds were removed from 6.14 branch testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:60,testability,test,testing,60,Closing PR since clang builds were removed from 6.14 branch testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2982:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2982
https://github.com/root-project/root/pull/2983:156,deployability,integr,integration,156,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
https://github.com/root-project/root/pull/2983:156,integrability,integr,integration,156,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
https://github.com/root-project/root/pull/2983:156,interoperability,integr,integration,156,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
https://github.com/root-project/root/pull/2983:156,modifiability,integr,integration,156,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
https://github.com/root-project/root/pull/2983:148,performance,time,time,148,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
https://github.com/root-project/root/pull/2983:156,reliability,integr,integration,156,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
https://github.com/root-project/root/pull/2983:156,security,integr,integration,156,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2983
